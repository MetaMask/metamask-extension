name: Page Load Benchmark Comment

on:
  workflow_call:
    secrets:
      PR_COMMENT_TOKEN:
        required: true

jobs:
  page-load-benchmark-comment:
    name: Post Page Load Benchmark Comment
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.head_ref || github.ref_name }}
      PR_COMMENT_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPOSITORY: ${{ github.event.repository.name }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      GITHUB_SHA: ${{ github.event.pull_request.head.sha }}

    steps:
      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

      - name: Download benchmark results
        uses: actions/download-artifact@v4
        with:
          name: benchmark-results

      - name: Create expected directory structure
        run: |
          mkdir -p test-artifacts/benchmarks
          mv benchmark-results.json test-artifacts/benchmarks/benchmark-results.json

      - name: Sync commit hash
        uses: actions/github-script@v7
        with:
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${process.env.BRANCH}`,
              base: 'stable',
            });
            if (prs.data.length > 0) {
              core.exportVariable("GITHUB_SHA", prs.data[0].head.sha);
              core.info(`The head commit hash is '${process.env.GITHUB_SHA}'`);
            } else {
              core.info(`No pull request detected for branch '${process.env.BRANCH}'`);
            }

      - name: Compare and comment
        run: yarn tsx development/page-load-benchmark-pr-comment.ts
        env:
          PR_COMMENT_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.event.repository.name }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
