name: Update Circular Dependencies

on:
  issue_comment:
    types: created

jobs:
  is-fork-pull-request:
    name: Determine whether this issue comment was on a pull request from a fork
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '@metamaskbot update-circular-deps') }}
    runs-on: ubuntu-latest
    outputs:
      IS_FORK: ${{ steps.is-fork.outputs.IS_FORK }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine whether this PR is from a fork
        id: is-fork
        run: echo "IS_FORK=$(gh pr view --json isCrossRepository --jq '.isCrossRepository' "${PR_NUMBER}" )" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}

  react-to-comment:
    name: React to the comment
    runs-on: ubuntu-latest
    needs: is-fork-pull-request
    if: ${{ needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: React to the comment
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${REPO}/issues/comments/${COMMENT_ID}/reactions" \
            -f content='+1'
        env:
          COMMENT_ID: ${{ github.event.comment.id }}
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          REPO: ${{ github.repository }}

  prepare:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    needs: is-fork-pull-request
    if: ${{ needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    outputs:
      COMMIT_SHA: ${{ steps.commit-sha.outputs.COMMIT_SHA }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main
      - name: Get commit SHA
        id: commit-sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  update-circular-deps:
    name: Update Circular Dependencies
    runs-on: ubuntu-latest
    needs:
      - prepare
      - is-fork-pull-request
    if: ${{ needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main
      - name: Update circular dependencies
        run: yarn circular-deps:update
      - name: Cache circular deps file
        uses: actions/cache/save@v4
        with:
          path: circular-deps.json
          key: cache-build-${{ needs.prepare.outputs.COMMIT_SHA }}

  commit-updated-circular-deps:
    name: Commit the updated circular dependencies
    runs-on: ubuntu-latest
    needs:
      - prepare
      - is-fork-pull-request
      - update-circular-deps
    if: ${{ needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
      - name: Get commit SHA
        id: commit-sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Restore circular deps file
        uses: actions/cache/restore@v4
        with:
          path: circular-deps.json
          key: cache-build-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true
      - name: Check whether there are circular deps changes
        id: circular-deps-changes
        run: |
          if git diff --exit-code
          then
            echo "HAS_CHANGES=false" >> "$GITHUB_OUTPUT"
          else
            echo "HAS_CHANGES=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Commit the updated circular deps
        if: steps.circular-deps-changes.outputs.HAS_CHANGES == 'true'
        run: |
          git config --global user.name 'MetaMask Bot'
          git config --global user.email 'metamaskbot@users.noreply.github.com'
          git commit -am "Update circular dependencies"
          git push
      - name: Post comment
        run: |
          if [[ $HAS_CHANGES == 'true' ]]
          then
            gh pr comment "${PR_NUMBER}" --body 'Circular dependencies updated'
          else
            gh pr comment "${PR_NUMBER}" --body 'No circular dependencies changes'
          fi
        env:
          HAS_CHANGES: ${{ steps.circular-deps-changes.outputs.HAS_CHANGES }}
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}

  check-status:
    name: Check whether the circular deps update succeeded
    runs-on: ubuntu-latest
    needs:
      - commit-updated-circular-deps
      - is-fork-pull-request
    if: ${{ needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    outputs:
      PASSED: ${{ steps.set-output.outputs.PASSED }}
    steps:
      - name: Set PASSED output
        id: set-output
        run: echo "PASSED=true" >> "$GITHUB_OUTPUT"

  failure-comment:
    name: Comment about the circular deps update failure
    if: ${{ always() && needs.is-fork-pull-request.outputs.IS_FORK == 'false' }}
    runs-on: ubuntu-latest
    needs:
      - is-fork-pull-request
      - check-status
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Post comment if the update failed
        run: |
          passed="${{ needs.check-status.outputs.PASSED }}"
          if [[ $passed != "true" ]]; then
            gh pr comment "${PR_NUMBER}" --body "Circular dependencies update failed. You can [review the logs or retry the update here](${ACTION_RUN_URL})"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
          ACTION_RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"