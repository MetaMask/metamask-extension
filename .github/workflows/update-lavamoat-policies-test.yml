name: Update LavaMoat policies

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  prepare:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    outputs:
      COMMIT_SHA: ${{ steps.commit-sha.outputs.COMMIT_SHA }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

      - name: Get commit SHA
        id: commit-sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  update-lavamoat-build-policy:
    name: Update LavaMoat build policy
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

      - name: Update LavaMoat build policy
        run: yarn lavamoat:build:auto

      - name: Cache build policy
        uses: actions/cache/save@v4
        with:
          path: lavamoat/build-system
          key: cache-build-${{ needs.prepare.outputs.COMMIT_SHA }}

  update-lavamoat-webapp-policy:
    strategy:
      matrix:
        # Ensure this is synchronized with the list below in the "commit-updated-policies" job
        # and with the build type list in `builds.yml`
        build-type: [main, beta, experimental, flask]
    name: Update LavaMoat ${{ matrix.build-type }} application policy
    runs-on: ubuntu-latest
    needs:
      - prepare
      - update-lavamoat-build-policy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

      - name: Restore build policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/build-system
          key: cache-build-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Update LavaMoat ${{ matrix.build-type }} policy
        run: yarn lavamoat:webapp:auto:ci '--build-types=${{ matrix.build-type }}'
        env:
          INFURA_PROJECT_ID: 00000000000
          GOOGLE_PROD_CLIENT_ID: 00000000000
          APPLE_PROD_CLIENT_ID: 00000000000
          GOOGLE_BETA_CLIENT_ID: 00000000000
          APPLE_BETA_CLIENT_ID: 00000000000
          GOOGLE_FLASK_CLIENT_ID: 00000000000
          APPLE_FLASK_CLIENT_ID: 00000000000

      - name: Cache ${{ matrix.build-type }} application policy
        uses: actions/cache/save@v4
        with:
          path: lavamoat/browserify/${{ matrix.build-type }}
          key: cache-${{ matrix.build-type }}-${{ needs.prepare.outputs.COMMIT_SHA }}

  update-lavamoat-webpack-policy:
    name: Update LavaMoat webpack policy
    runs-on: ubuntu-latest
    needs:
      - prepare
    env:
      # Environment variables used in production builds
      # Keep this list synchronized with:
      # * The environment variables exported by `.github/scripts/bundle.sh`
      # * The environment variables used by the `publish-release` step in `.github/workflows/publish-release.yml`.
      APPLE_BETA_CLIENT_ID: ${{ secrets.APPLE_BETA_CLIENT_ID }}
      APPLE_FLASK_CLIENT_ID: ${{ secrets.APPLE_FLASK_CLIENT_ID }}
      APPLE_PROD_CLIENT_ID: ${{ secrets.APPLE_PROD_CLIENT_ID }}
      CONTENTFUL_ACCESS_SPACE_ID: ${{ secrets.CONTENTFUL_ACCESS_SPACE_ID }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      GOOGLE_BETA_CLIENT_ID: ${{ secrets.GOOGLE_BETA_CLIENT_ID }}
      GOOGLE_FLASK_CLIENT_ID: ${{ secrets.GOOGLE_FLASK_CLIENT_ID }}
      GOOGLE_PROD_CLIENT_ID: ${{ secrets.GOOGLE_PROD_CLIENT_ID }}
      INFURA_BETA_PROJECT_ID: ${{ secrets.INFURA_BETA_PROJECT_ID }}
      INFURA_FLASK_PROJECT_ID: ${{ secrets.INFURA_FLASK_PROJECT_ID }}
      INFURA_PROD_PROJECT_ID: ${{ secrets.INFURA_PROD_PROJECT_ID }}
      QUICKNODE_ARBITRUM_URL: ${{ secrets.QUICKNODE_ARBITRUM_URL }}
      QUICKNODE_AVALANCHE_URL: ${{ secrets.QUICKNODE_AVALANCHE_URL }}
      QUICKNODE_BASE_URL: ${{ secrets.QUICKNODE_BASE_URL }}
      QUICKNODE_LINEA_MAINNET_URL: ${{ secrets.QUICKNODE_LINEA_MAINNET_URL }}
      QUICKNODE_MAINNET_URL: ${{ secrets.QUICKNODE_MAINNET_URL }}
      QUICKNODE_OPTIMISM_URL: ${{ secrets.QUICKNODE_OPTIMISM_URL }}
      QUICKNODE_POLYGON_URL: ${{ secrets.QUICKNODE_POLYGON_URL }}
      SEGMENT_BETA_WRITE_KEY: ${{ secrets.SEGMENT_BETA_WRITE_KEY }}
      SEGMENT_FLASK_WRITE_KEY: ${{ secrets.SEGMENT_FLASK_WRITE_KEY }}
      SEGMENT_PROD_WRITE_KEY: ${{ secrets.SEGMENT_PROD_WRITE_KEY }}
      ANALYTICS_DATA_DELETION_SOURCE_ID: ${{ secrets.ANALYTICS_DATA_DELETION_SOURCE_ID }}
      ANALYTICS_DATA_DELETION_ENDPOINT: ${{ secrets.ANALYTICS_DATA_DELETION_ENDPOINT }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_DSN_DEV: ${{ secrets.SENTRY_DSN_DEV }}
      TZ: 'UTC' # Ensures the bundles are consistent across machine time zones
      VAPID_KEY: ${{ secrets.VAPID_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true
          yarn-custom-url: ${{ vars.YARN_URL }}

      - name: Update LavaMoat webpack policy
        run: yarn webpack --env production --generatePolicy

      - name: Cache webpack policy
        uses: actions/cache/save@v4
        with:
          path: lavamoat/webpack
          key: cache-webpack-${{ needs.prepare.outputs.COMMIT_SHA }}

  commit-updated-policies:
    name: Commit the updated LavaMoat policies
    runs-on: ubuntu-latest
    needs:
      - prepare
      - update-lavamoat-build-policy
      - update-lavamoat-webapp-policy
      - update-lavamoat-webpack-policy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Use PAT to ensure that the commit later can trigger status check workflows
          token: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}

      - name: Checkout pull request
        run: gh pr checkout "${PR_NUMBER}"
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Get commit SHA
        id: commit-sha
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Restore build policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/build-system
          key: cache-build-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      # One restore step per build type: [main, beta, experimental, flask]
      # Ensure this is synchronized with the list above in the "update-lavamoat-webapp-policy" job
      # and with the build type list in `builds.yml`
      - name: Restore main application policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/browserify/main
          key: cache-main-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Restore beta application policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/browserify/beta
          key: cache-beta-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Restore flask application policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/browserify/flask
          key: cache-flask-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Restore experimental application policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/browserify/experimental
          key: cache-experimental-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Restore webpack policy
        uses: actions/cache/restore@v4
        with:
          path: lavamoat/webpack
          key: cache-webpack-${{ needs.prepare.outputs.COMMIT_SHA }}
          fail-on-cache-miss: true

      - name: Check whether there are policy changes
        id: policy-changes
        run: |
          if git diff --exit-code
          then
            echo "HAS_CHANGES=false" >> "$GITHUB_OUTPUT"
          else
            echo "HAS_CHANGES=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit the updated policies
        if: steps.policy-changes.outputs.HAS_CHANGES == 'true'
        run: |
          git config --global user.name 'MetaMask Bot'
          git config --global user.email 'metamaskbot@users.noreply.github.com'
          git commit -am "Update LavaMoat policies"
          git push

      ## Yes, it would be nice to use the local diff before the commit is made, but we need to include potential multiple updates in the history of the PR
      - name: Compare policy changes
        run: |
          if [[ $HAS_CHANGES == 'true' ]]
          then
            git fetch origin ${{ github.base_ref }}
            main_diff=$(git diff origin/${{ github.base_ref }} lavamoat/browserify/main/policy.json | md5sum | cut -d' ' -f1)
            for folder in lavamoat/browserify/*/; do
              if [ "$folder" != "lavamoat/browserify/main/" ]; then
                file="${folder}policy.json"
                if [ -f "$file" ]; then
                  diff=$(git diff origin/${{ github.base_ref }} "$file" | md5sum | cut -d' ' -f1)
                  if [ "$diff" = "$main_diff" ]; then
                    echo "✅ ${folder}policy.json changes match main/policy.json policy changes"
                  else
                    echo "👀 ${folder}policy.json changes **differ from** main/policy.json policy changes"
                  fi
                fi
              fi
            done > does_diff_diff.txt
          fi

      ## Note the use of `cat -` to include the file contents and the echo in the comment
      - name: Post comment
        run: |
          if [[ $HAS_CHANGES == 'true' ]]
          then
            echo -e 'Policies updated.  \n👀 Please review the diff for suspicious new powers.  \n\n🧠 Learn how: https://lavamoat.github.io/guides/policy-diff/#what-to-look-for-when-reviewing-a-policy-diff \n\n' | cat - does_diff_diff.txt |  gh pr comment "${PR_NUMBER}" --body-file -
          else
            gh pr comment "${PR_NUMBER}" --body 'No policy changes'
          fi
        env:
          HAS_CHANGES: ${{ steps.policy-changes.outputs.HAS_CHANGES }}
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}

  check-status:
    name: Check whether the policy update succeeded
    runs-on: ubuntu-latest
    needs:
      - commit-updated-policies
    outputs:
      PASSED: ${{ steps.set-output.outputs.PASSED }}
    steps:
      - name: Set PASSED output
        id: set-output
        run: echo "PASSED=true" >> "$GITHUB_OUTPUT"

  failure-comment:
    name: Comment about the policy update failure
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs:
      - check-status
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}

      - name: Post comment if the update failed
        run: |
          passed="${{ needs.check-status.outputs.PASSED }}"
          if [[ $passed != "true" ]]; then
            gh pr comment "${PR_NUMBER}" --body "Policy update failed. You can [review the logs or retry the policy update here](${ACTION_RUN_URL})"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.LAVAMOAT_UPDATE_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          ACTION_RUN_URL: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
