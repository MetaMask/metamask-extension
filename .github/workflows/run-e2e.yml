name: Run E2E

on:
  workflow_call:
    inputs:
      test-suite-name:
        required: true
        type: string
        description: The name of the E2E test suite
      build-artifact:
        type: string
        default: ''
        description: The build artifact to download
      build-command:
        type: string
        default: ''
        description: The build command to run
      test-command:
        required: true
        type: string
        description: The test command to run
      test-timeout-minutes:
        type: number
        default: 30
        description: The timeout in minutes for the test command
      matrix-index:
        type: number
        default: 0
        description: The index of the job in the matrix
      matrix-total:
        type: number
        default: 1
        description: The total number of jobs in the matrix

jobs:
  run-e2e:
    name: ${{ inputs.test-suite-name }}${{ inputs.matrix-total > 1 && format(' ({0})', inputs.matrix-index) || '' }}
    runs-on: ubuntu-latest
    container:
      image: cimg/node:22.14-browsers
    continue-on-error: true # soft launch
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # For a `pull_request` event, the branch is `github.head_ref``.
      # For a `push` event, the branch is `github.ref_name`.
      BRANCH: ${{ github.head_ref || github.ref_name }}
      MATRIX_INDEX: ${{ inputs.matrix-index }}
      MATRIX_TOTAL: ${{ inputs.matrix-total }}
      OWNER: ${{ github.repository_owner }}
      REPOSITORY: ${{ github.event.repository.name }}
      RUN_ID: ${{ github.run_id }}
      JOB_NAME: ${{ inputs.test-suite-name }}${{ inputs.matrix-total > 1 && format(' ({0})', inputs.matrix-index) || '' }}
      ATTEMPT_NUMBER: ${{ github.run_attempt }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install zstd
          sudo corepack enable

      - name: Checkout and setup environment
        uses: MetaMask/action-checkout-and-setup@v1
        with:
          is-high-risk-environment: false
          skip-allow-scripts: true

      # not installed by checkout-and-setup when cache is restored
      - name: Install anvil
        run: yarn foundryup

      - name: Download build artifact
        if: ${{ inputs.build-artifact != '' }}
        id: download-build-artifact
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact }}
          path: ./dist/

      # if there is a build-command and there is no build artifact, or the specified artifact does not exist, we run the build command
      - run: ${{ inputs.build-command }}
        if: ${{ inputs.build-command != '' && (inputs.build-artifact == '' || steps.download-build-artifact.outcome == 'failure') }}

      - name: Configure Xvfb
        run: Xvfb -ac :99 -screen 0 1280x1024x16 &

      - name: Download changed-files artifact
        if: ${{ env.BRANCH != 'main' }}
        id: download-changed-files
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: changed-files
          path: ./changed-files/

      # if the changed-files artifact does not exist, we get the diff
      - run: yarn tsx .github/scripts/git-diff-default-branch.ts
        if: ${{ steps.download-changed-files.outcome == 'failure' }}

      - name: Get job id
        id: get-job-id
        run: yarn tsx .github/scripts/get-job-id.ts

      - name: Run E2E tests
        timeout-minutes: ${{ inputs.test-timeout-minutes }}
        run: ${{ inputs.test-command }} --retries 1
        env:
          # The properties are picked up by mocha-junit-reporter and added to the XML test results
          PROPERTIES: 'JOB_NAME:${{ env.JOB_NAME }},JOB_ID:${{ steps.get-job-id.outputs.job-id }}'

      - name: Upload test results and artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JOB_NAME }}
          path: |
            ./test-artifacts
            ./test/test-results/e2e
