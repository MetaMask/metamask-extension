name: Build beta

on:
  workflow_call:

jobs:
  build-beta:
    name: Build beta
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Needs beta build
        id: needs-beta-build
        env:
          # For a `pull_request` event, the branch is `github.head_ref``.
          # For a `push` event, the branch is `github.ref_name`.
          BRANCH: ${{ github.head_ref || github.ref_name }}
        run: |
          version="${BRANCH/Version-v/}"
          commit_message=$(git show -s --format='%s' HEAD)
          beta_version_regex="Version v[0-9]+\.[0-9]+\.[0-9]+-beta\.[0-9]+"

          if [[ "$commit_message" =~ $beta_version_regex ]]; then
              printf '%s\n' "Create a build for $version with beta version $commit_message"
              echo "NEEDS_BETA_BUILD=true" >> "$GITHUB_OUTPUT"
          else
              printf '%s\n' 'Commit message does not match commit message for beta pattern; skipping beta automation build'
              echo "NEEDS_BETA_BUILD=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main

      - name: Trigger beta build
        env:
          ENABLE_MV3: true
        run: |
          yarn build --build-type beta --platform='chrome' dist
          yarn build --build-type beta --platform='chrome' prod

      - name: Validate source maps
        run: yarn validate-source-maps

      - name: Move 'dist' to 'dist-beta' to avoid conflict with production build
        run: mv ./dist ./dist-beta

      - name: Upload 'dist-beta'
        uses: actions/upload-artifact@v4
        with:
          name: dist-beta
          path: dist-beta

      - name: Move 'builds' to 'builds-beta' to avoid conflict with production build
        run: mv ./builds ./builds-beta

      - name: Upload 'builds-beta'
        uses: actions/upload-artifact@v4
        with:
          name: builds-beta
          path: builds-beta
