diff --git a/src/loadPolicy.js b/src/loadPolicy.js
index b3053356c739a5f351fd4e271b67e31ee00bb4dc..7daebe4104ce5d799f90068516b1d0aaa58546c0 100644
--- a/src/loadPolicy.js
+++ b/src/loadPolicy.js
@@ -101,10 +101,9 @@ async function loadPolicyAndApplyOverrides({
 
   const finalPolicy = mergePolicy(policy, policyOverride)
 
-  // TODO: Only write if merge results in changes.
-  // Would have to make a deep equal check on whole policy, which is a waste of time.
-  // mergePolicy() should be able to do it in one pass.
-  await fs.writeFile(policyPath, jsonStringifySortedPolicy(finalPolicy))
+  // Skip policy write step to prevent intermittent build failures
+  // The extension validates the policy in a separate step, we don't need it
+  // to be written to disk here.
 
   return finalPolicy
 }
diff --git a/src/scuttle.js b/src/scuttle.js
index c096a1fbf0bfe8a8f22290852881598f74fff4b1..97f5d1cd09d19f8be1de6a5956d2c39f51058ba0 100644
--- a/src/scuttle.js
+++ b/src/scuttle.js
@@ -98,6 +98,10 @@ function generateScuttleOpts(globalRef, originalOpts = create(null)) {
     }
     opts.scuttlerFunc = globalRef[opts.scuttlerName]
   }
+
+  // cache regular expressions to work around https://github.com/MetaMask/metamask-extension/issues/21006
+  const regexCache = new Map()
+
   return opts
 
   /**
@@ -109,10 +113,15 @@ function generateScuttleOpts(globalRef, originalOpts = create(null)) {
     if (!except.startsWith('/')) {
       return except
     }
+    if (regexCache.has(except)) {
+      return regexCache.get(except)
+    }
     const parts = except.split('/')
     const pattern = parts.slice(1, -1).join('/')
     const flags = parts[parts.length - 1]
-    return new RegExp(pattern, flags)
+    const re = new RegExp(pattern, flags)
+    regexCache.set(except, re)
+    return re
   }
 }
 
