diff --git a/dist/methods/wallet-get-calls-status.d.ts b/dist/methods/wallet-get-calls-status.d.ts
index 2a08beaa24b3d3002f60bc40bffa99d4019e95c7..41d626526829ee80933d4bdc448df36c759b3fc2 100644
--- a/dist/methods/wallet-get-calls-status.d.ts
+++ b/dist/methods/wallet-get-calls-status.d.ts
@@ -14,6 +14,7 @@ export declare type GetCallsStatusResult = {
     id: Hex;
     chainId: Hex;
     status: number;
+    atomic: boolean;
     receipts?: {
         logs: {
             address: Hex;
diff --git a/dist/methods/wallet-get-capabilities.d.ts b/dist/methods/wallet-get-capabilities.d.ts
index e2b8d17cc07f25a462562b624844d1d981e83a01..c319f49e97d5adcd7ecd05703bd47e2ed5482760 100644
--- a/dist/methods/wallet-get-capabilities.d.ts
+++ b/dist/methods/wallet-get-capabilities.d.ts
@@ -4,7 +4,8 @@ declare const GetCapabilitiesStruct: import("@metamask/superstruct").Struct<[`0x
 export declare type GetCapabilitiesParams = Infer<typeof GetCapabilitiesStruct>;
 export declare type GetCapabilitiesResult = Record<Hex, Record<string, Json>>;
 export declare type GetCapabilitiesHook = (address: GetCapabilitiesParams[0], chainIds: GetCapabilitiesParams[1], req: JsonRpcRequest) => Promise<GetCapabilitiesResult>;
-export declare function walletGetCapabilities(req: JsonRpcRequest, res: PendingJsonRpcResponse<Json>, { getCapabilities, }: {
+export declare function walletGetCapabilities(req: JsonRpcRequest, res: PendingJsonRpcResponse<Json>, { getAccounts, getCapabilities, }: {
+    getAccounts: (req: JsonRpcRequest) => Promise<string[]>;
     getCapabilities?: GetCapabilitiesHook;
 }): Promise<void>;
 export {};
diff --git a/dist/methods/wallet-get-capabilities.js b/dist/methods/wallet-get-capabilities.js
index 49e67c1c21dea8d4e666ea0f8741a459362aa721..b87779ac986ce8a220be5e1fa3b1d1e761541250 100644
--- a/dist/methods/wallet-get-capabilities.js
+++ b/dist/methods/wallet-get-capabilities.js
@@ -9,13 +9,16 @@ const GetCapabilitiesStruct = (0, superstruct_1.tuple)([
     utils_1.HexChecksumAddressStruct,
     (0, superstruct_1.optional)((0, superstruct_1.array)(utils_1.StrictHexStruct)),
 ]);
-async function walletGetCapabilities(req, res, { getCapabilities, }) {
+async function walletGetCapabilities(req, res, { getAccounts, getCapabilities, }) {
     if (!getCapabilities) {
         throw rpc_errors_1.rpcErrors.methodNotSupported();
     }
     (0, validation_1.validateParams)(req.params, GetCapabilitiesStruct);
     const address = req.params[0];
     const chainIds = req.params[1];
+    await (0, validation_1.validateAndNormalizeKeyholder)(address, req, {
+        getAccounts,
+    });
     const capabilities = await getCapabilities(address, chainIds, req);
     res.result = capabilities;
 }
diff --git a/dist/methods/wallet-send-calls.d.ts b/dist/methods/wallet-send-calls.d.ts
index 4143be80bad6818abf4c12d72e6f20fa940b63bc..53b1f402f2fc4c37424ebc02c1c4cc2e4cb44f16 100644
--- a/dist/methods/wallet-send-calls.d.ts
+++ b/dist/methods/wallet-send-calls.d.ts
@@ -1,9 +1,9 @@
 import type { Infer } from '@metamask/superstruct';
 import type { Hex, Json, JsonRpcRequest, PendingJsonRpcResponse } from '@metamask/utils';
 declare const SendCallsStruct: import("@metamask/superstruct").Struct<[{
-    from: `0x${string}`;
     chainId: `0x${string}`;
     version: string;
+    atomicRequired: boolean;
     calls: {
         data?: `0x${string}` | undefined;
         value?: `0x${string}` | undefined;
@@ -13,6 +13,7 @@ declare const SendCallsStruct: import("@metamask/superstruct").Struct<[{
         to?: `0x${string}` | undefined;
     }[];
     id?: `0x${string}` | undefined;
+    from?: `0x${string}` | undefined;
     capabilities?: Record<string, {
         optional?: boolean | undefined;
     }> | undefined;
diff --git a/dist/methods/wallet-send-calls.js b/dist/methods/wallet-send-calls.js
index 4531affaa5f62cb197c4bc4cc806aff721dc56d5..c3dd22a672a0f9e79279f46250bb705a2fdc2b32 100644
--- a/dist/methods/wallet-send-calls.js
+++ b/dist/methods/wallet-send-calls.js
@@ -12,8 +12,9 @@ const SendCallsStruct = (0, superstruct_1.tuple)([
     (0, superstruct_1.object)({
         version: (0, superstruct_1.nonempty)((0, superstruct_1.string)()),
         id: (0, superstruct_1.optional)(utils_1.StrictHexStruct),
-        from: utils_1.HexChecksumAddressStruct,
+        from: (0, superstruct_1.optional)(utils_1.HexChecksumAddressStruct),
         chainId: utils_1.StrictHexStruct,
+        atomicRequired: (0, superstruct_1.boolean)(),
         calls: (0, superstruct_1.array)((0, superstruct_1.object)({
             to: (0, superstruct_1.optional)(utils_1.HexChecksumAddressStruct),
             data: (0, superstruct_1.optional)(utils_1.StrictHexStruct),
@@ -29,9 +30,11 @@ async function walletSendCalls(req, res, { getAccounts, processSendCalls, }) {
     }
     (0, validation_1.validateParams)(req.params, SendCallsStruct);
     const params = req.params[0];
-    const from = await (0, validation_1.validateAndNormalizeKeyholder)(params.from, req, {
-        getAccounts,
-    });
+    const from = params.from
+        ? await (0, validation_1.validateAndNormalizeKeyholder)(params.from, req, {
+            getAccounts,
+        })
+        : undefined;
     const sendCalls = Object.assign(Object.assign({}, params), { from });
     res.result = await processSendCalls(sendCalls, req);
 }
diff --git a/dist/utils/validation.js b/dist/utils/validation.js
index 656812c7c268640c9e639e2f61fe3fcb578f6b11..2e1e4a80011b852423263a992f8492d43064f082 100644
--- a/dist/utils/validation.js
+++ b/dist/utils/validation.js
@@ -25,7 +25,7 @@ exports.validateAndNormalizeKeyholder = validateAndNormalizeKeyholder;
 function validateParams(value, struct) {
     const [error] = (0, superstruct_1.validate)(value, struct);
     if (error) {
-        throw rpc_errors_1.rpcErrors.invalidInput(formatValidationError(error, `Invalid params`));
+        throw rpc_errors_1.rpcErrors.invalidParams(formatValidationError(error, `Invalid params`));
     }
 }
 exports.validateParams = validateParams;
diff --git a/dist/wallet.js b/dist/wallet.js
index caaded4fe2f5f09c3ffcda3662d8a4a545208ea9..84344da4e4663c73f4df0e05ff4555d938310170 100644
--- a/dist/wallet.js
+++ b/dist/wallet.js
@@ -54,7 +54,7 @@ function createWalletMiddleware({ getAccounts, getCallsStatus, getCapabilities,
         eth_decrypt: (0, json_rpc_engine_1.createAsyncMiddleware)(decryptMessage),
         personal_ecRecover: (0, json_rpc_engine_1.createAsyncMiddleware)(personalRecover),
         // EIP-5792
-        wallet_getCapabilities: (0, json_rpc_engine_1.createAsyncMiddleware)(async (params, req) => (0, wallet_get_capabilities_1.walletGetCapabilities)(params, req, { getCapabilities })),
+        wallet_getCapabilities: (0, json_rpc_engine_1.createAsyncMiddleware)(async (params, req) => (0, wallet_get_capabilities_1.walletGetCapabilities)(params, req, { getAccounts, getCapabilities })),
         wallet_sendCalls: (0, json_rpc_engine_1.createAsyncMiddleware)(async (params, req) => (0, wallet_send_calls_1.walletSendCalls)(params, req, { getAccounts, processSendCalls })),
         wallet_getCallsStatus: (0, json_rpc_engine_1.createAsyncMiddleware)(async (params, req) => (0, wallet_get_calls_status_1.walletGetCallsStatus)(params, req, {
             getCallsStatus,
