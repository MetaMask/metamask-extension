diff --git a/dist/utils/feature-flags.cjs b/dist/utils/feature-flags.cjs
index af10348ec8c726f99b64e67b8c78948e990a0a0b..ea385efd1d146d16939049f99b990ec318c8ffd7 100644
--- a/dist/utils/feature-flags.cjs
+++ b/dist/utils/feature-flags.cjs
@@ -3,6 +3,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.getBatchSizeLimit = exports.getEIP7702UpgradeContractAddress = exports.getEIP7702ContractAddresses = exports.getEIP7702SupportedChains = exports.FEATURE_FLAG_EIP_7702 = exports.FEATURE_FLAG_TRANSACTIONS = void 0;
 const utils_1 = require("@metamask/utils");
 const signature_1 = require("./signature.cjs");
+const utils_2 = require("./utils.cjs");
 const logger_1 = require("../logger.cjs");
 exports.FEATURE_FLAG_TRANSACTIONS = 'confirmations_transactions';
 exports.FEATURE_FLAG_EIP_7702 = 'confirmations_eip_7702';
@@ -31,7 +32,7 @@ function getEIP7702ContractAddresses(chainId, messenger, publicKey) {
     const featureFlags = getFeatureFlags(messenger);
     const contracts = featureFlags?.[exports.FEATURE_FLAG_EIP_7702]?.contracts?.[chainId.toLowerCase()] ?? [];
     return contracts
-        .filter((contract) => (0, signature_1.isValidSignature)([contract.address, chainId], contract.signature, publicKey))
+        .filter((contract) => (0, signature_1.isValidSignature)([contract.address, (0, utils_2.padHexToEvenLength)(chainId)], contract.signature, publicKey))
         .map((contract) => contract.address);
 }
 exports.getEIP7702ContractAddresses = getEIP7702ContractAddresses;
diff --git a/dist/utils/feature-flags.mjs b/dist/utils/feature-flags.mjs
index 70bb226edbbe6343cbfa0e83df8340fa8bd08d20..3d1ffb228930baf1befa2ab06b8f788ce3492526 100644
--- a/dist/utils/feature-flags.mjs
+++ b/dist/utils/feature-flags.mjs
@@ -1,5 +1,6 @@
 import { createModuleLogger } from "@metamask/utils";
 import { isValidSignature } from "./signature.mjs";
+import { padHexToEvenLength } from "./utils.mjs";
 import { projectLogger } from "../logger.mjs";
 export const FEATURE_FLAG_TRANSACTIONS = 'confirmations_transactions';
 export const FEATURE_FLAG_EIP_7702 = 'confirmations_eip_7702';
@@ -27,7 +28,7 @@ export function getEIP7702ContractAddresses(chainId, messenger, publicKey) {
     const featureFlags = getFeatureFlags(messenger);
     const contracts = featureFlags?.[FEATURE_FLAG_EIP_7702]?.contracts?.[chainId.toLowerCase()] ?? [];
     return contracts
-        .filter((contract) => isValidSignature([contract.address, chainId], contract.signature, publicKey))
+        .filter((contract) => isValidSignature([contract.address, padHexToEvenLength(chainId)], contract.signature, publicKey))
         .map((contract) => contract.address);
 }
 /**
