diff --git a/dist/DeFiPositionsController/DeFiPositionsController.cjs b/dist/DeFiPositionsController/DeFiPositionsController.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..5dbead295e8ab1de613e30011ce318a394463d4f
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.cjs
@@ -0,0 +1,82 @@
+"use strict";
+var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
+    if (kind === "m") throw new TypeError("Private method is not writable");
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
+    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
+};
+var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
+    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
+};
+var _DeFiPositionsController_instances, _DeFiPositionsController_fetchPositions, _DeFiPositionsController_updateAccountPositions;
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.DeFiPositionsController = exports.getDefaultDefiPositionsControllerState = void 0;
+const base_controller_1 = require("@metamask/base-controller");
+const fetch_positions_1 = require("./fetch-positions.cjs");
+const group_positions_1 = require("./group-positions.cjs");
+const controllerName = 'DeFiPositionsController';
+const controllerMetadata = {
+    allDeFiPositions: {
+        persist: false,
+        anonymous: false,
+    },
+};
+const getDefaultDefiPositionsControllerState = () => {
+    return {
+        allDeFiPositions: {},
+    };
+};
+exports.getDefaultDefiPositionsControllerState = getDefaultDefiPositionsControllerState;
+/**
+ * Controller that stores assets and exposes convenience methods
+ */
+class DeFiPositionsController extends base_controller_1.BaseController {
+    /**
+     * Tokens controller options
+     *
+     * @param options - Constructor options.
+     * @param options.messenger - The controller messenger.
+     * @param options.state - Initial state to set on this controller.
+     * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.
+     */
+    constructor({ messenger, state, apiUrl, }) {
+        super({
+            name: controllerName,
+            metadata: controllerMetadata,
+            messenger,
+            state: {
+                ...(0, exports.getDefaultDefiPositionsControllerState)(),
+                ...state,
+            },
+        });
+        _DeFiPositionsController_instances.add(this);
+        _DeFiPositionsController_fetchPositions.set(this, void 0);
+        __classPrivateFieldSet(this, _DeFiPositionsController_fetchPositions, (0, fetch_positions_1.buildPositionFetcher)(apiUrl), "f");
+        this.messagingSystem.subscribe('AccountsController:selectedAccountChange', async (selectedAccount) => {
+            console.log('DEFI POSITIONS CONTROLLER EVENT: AccountsController:selectedAccountChange', selectedAccount.address);
+            await __classPrivateFieldGet(this, _DeFiPositionsController_instances, "m", _DeFiPositionsController_updateAccountPositions).call(this, selectedAccount.address);
+        });
+        this.messagingSystem.subscribe('NetworkController:stateChange', async () => {
+            const { address } = this.messagingSystem.call('AccountsController:getSelectedAccount');
+            console.log('DEFI POSITIONS CONTROLLER EVENT: NetworkController:stateChange', address);
+            if (address) {
+                await __classPrivateFieldGet(this, _DeFiPositionsController_instances, "m", _DeFiPositionsController_updateAccountPositions).call(this, address);
+            }
+        });
+    }
+}
+exports.DeFiPositionsController = DeFiPositionsController;
+_DeFiPositionsController_fetchPositions = new WeakMap(), _DeFiPositionsController_instances = new WeakSet(), _DeFiPositionsController_updateAccountPositions = async function _DeFiPositionsController_updateAccountPositions(accountAddress) {
+    // TODO: This is done to give the UI a loading effect. Probably not the best way to do this
+    this.update((state) => {
+        state.allDeFiPositions[accountAddress] = null;
+    });
+    const defiPositionsResponse = await __classPrivateFieldGet(this, _DeFiPositionsController_fetchPositions, "f").call(this, accountAddress);
+    const accountPositionsPerChain = (0, group_positions_1.groupPositions)(defiPositionsResponse);
+    this.update((state) => {
+        state.allDeFiPositions[accountAddress] = accountPositionsPerChain;
+    });
+};
+//# sourceMappingURL=DeFiPositionsController.cjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.cjs.map b/dist/DeFiPositionsController/DeFiPositionsController.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..17c4fd96c947b322e3c1a48e2dd1592227d1bc43
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"DeFiPositionsController.cjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/DeFiPositionsController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAUA,+DAA2D;AAK3D,2DAAyD;AACzD,2DAA0E;AAE1E,MAAM,cAAc,GAAG,yBAAyB,CAAC;AAWjD,MAAM,kBAAkB,GAAgD;IACtE,gBAAgB,EAAE;QAChB,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KACjB;CACF,CAAC;AAEK,MAAM,sCAAsC,GACjD,GAAiC,EAAE;IACjC,OAAO;QACL,gBAAgB,EAAE,EAAE;KACrB,CAAC;AACJ,CAAC,CAAC;AALS,QAAA,sCAAsC,0CAK/C;AA0CJ;;GAEG;AACH,MAAa,uBAAwB,SAAQ,gCAI5C;IAKC;;;;;;;OAOG;IACH,YAAY,EACV,SAAS,EACT,KAAK,EACL,MAAM,GAKP;QACC,KAAK,CAAC;YACJ,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,kBAAkB;YAC5B,SAAS;YACT,KAAK,EAAE;gBACL,GAAG,IAAA,8CAAsC,GAAE;gBAC3C,GAAG,KAAK;aACT;SACF,CAAC,CAAC;;QA7BI,0DAE4B;QA6BnC,uBAAA,IAAI,2CAAmB,IAAA,sCAAoB,EAAC,MAAM,CAAC,MAAA,CAAC;QAEpD,IAAI,CAAC,eAAe,CAAC,SAAS,CAC5B,0CAA0C,EAC1C,KAAK,EAAE,eAAe,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CACT,2EAA2E,EAC3E,eAAe,CAAC,OAAO,CACxB,CAAC;YACF,MAAM,uBAAA,IAAI,2FAAwB,MAA5B,IAAI,EAAyB,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAC5B,+BAA+B,EAC/B,KAAK,IAAI,EAAE;YACT,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAC3C,uCAAuC,CACxC,CAAC;YACF,OAAO,CAAC,GAAG,CACT,gEAAgE,EAChE,OAAO,CACR,CAAC;YAEF,IAAI,OAAO,EAAE;gBACX,MAAM,uBAAA,IAAI,2FAAwB,MAA5B,IAAI,EAAyB,OAAO,CAAC,CAAC;aAC7C;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CAgBF;AAjFD,0DAiFC;+JAdC,KAAK,0DAAyB,cAAsB;IAClD,2FAA2F;IAC3F,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;QACpB,KAAK,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,MAAM,uBAAA,IAAI,+CAAgB,MAApB,IAAI,EAAiB,cAAc,CAAC,CAAC;IAEzE,MAAM,wBAAwB,GAAG,IAAA,gCAAc,EAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;QACpB,KAAK,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,wBAAwB,CAAC;IACpE,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type {\n  AccountsControllerGetSelectedAccountAction,\n  AccountsControllerSelectedAccountChangeEvent,\n} from '@metamask/accounts-controller';\nimport type {\n  ControllerGetStateAction,\n  ControllerStateChangeEvent,\n  RestrictedMessenger,\n  StateMetadata,\n} from '@metamask/base-controller';\nimport { BaseController } from '@metamask/base-controller';\nimport type { NetworkControllerStateChangeEvent } from '@metamask/network-controller';\nimport type { Hex } from '@metamask/utils';\n\nimport type { DefiPositionResponse } from './fetch-positions';\nimport { buildPositionFetcher } from './fetch-positions';\nimport { groupPositions, type GroupedPositions } from './group-positions';\n\nconst controllerName = 'DeFiPositionsController';\n\nexport type DeFiPositionsControllerState = {\n  /**\n   * Object containing DeFi positions per account and network\n   */\n  allDeFiPositions: {\n    [accountAddress: string]: { [chain: Hex]: GroupedPositions } | null;\n  };\n};\n\nconst controllerMetadata: StateMetadata<DeFiPositionsControllerState> = {\n  allDeFiPositions: {\n    persist: false,\n    anonymous: false,\n  },\n};\n\nexport const getDefaultDefiPositionsControllerState =\n  (): DeFiPositionsControllerState => {\n    return {\n      allDeFiPositions: {},\n    };\n  };\n\nexport type DeFiPositionsControllerActions =\n  DeFiPositionsControllerGetStateAction;\n\nexport type DeFiPositionsControllerGetStateAction = ControllerGetStateAction<\n  typeof controllerName,\n  DeFiPositionsControllerState\n>;\n\nexport type DeFiPositionsControllerEvents =\n  DeFiPositionsControllerStateChangeEvent;\n\nexport type DeFiPositionsControllerStateChangeEvent =\n  ControllerStateChangeEvent<\n    typeof controllerName,\n    DeFiPositionsControllerState\n  >;\n\n/**\n * The external actions available to the {@link DeFiPositionsController}.\n */\nexport type AllowedActions = AccountsControllerGetSelectedAccountAction;\n\n/**\n * The external events available to the {@link DeFiPositionsController}.\n */\nexport type AllowedEvents =\n  | NetworkControllerStateChangeEvent\n  | AccountsControllerSelectedAccountChangeEvent;\n\n/**\n * The messenger of the {@link DeFiPositionsController}.\n */\nexport type DeFiPositionsControllerMessenger = RestrictedMessenger<\n  typeof controllerName,\n  DeFiPositionsControllerActions | AllowedActions,\n  DeFiPositionsControllerEvents | AllowedEvents,\n  AllowedActions['type'],\n  AllowedEvents['type']\n>;\n\n/**\n * Controller that stores assets and exposes convenience methods\n */\nexport class DeFiPositionsController extends BaseController<\n  typeof controllerName,\n  DeFiPositionsControllerState,\n  DeFiPositionsControllerMessenger\n> {\n  readonly #fetchPositions: (\n    accountAddress: string,\n  ) => Promise<DefiPositionResponse[]>;\n\n  /**\n   * Tokens controller options\n   *\n   * @param options - Constructor options.\n   * @param options.messenger - The controller messenger.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.\n   */\n  constructor({\n    messenger,\n    state,\n    apiUrl,\n  }: {\n    messenger: DeFiPositionsControllerMessenger;\n    state?: Partial<DeFiPositionsControllerState>;\n    apiUrl?: string;\n  }) {\n    super({\n      name: controllerName,\n      metadata: controllerMetadata,\n      messenger,\n      state: {\n        ...getDefaultDefiPositionsControllerState(),\n        ...state,\n      },\n    });\n\n    this.#fetchPositions = buildPositionFetcher(apiUrl);\n\n    this.messagingSystem.subscribe(\n      'AccountsController:selectedAccountChange',\n      async (selectedAccount) => {\n        console.log(\n          'DEFI POSITIONS CONTROLLER EVENT: AccountsController:selectedAccountChange',\n          selectedAccount.address,\n        );\n        await this.#updateAccountPositions(selectedAccount.address);\n      },\n    );\n\n    this.messagingSystem.subscribe(\n      'NetworkController:stateChange',\n      async () => {\n        const { address } = this.messagingSystem.call(\n          'AccountsController:getSelectedAccount',\n        );\n        console.log(\n          'DEFI POSITIONS CONTROLLER EVENT: NetworkController:stateChange',\n          address,\n        );\n\n        if (address) {\n          await this.#updateAccountPositions(address);\n        }\n      },\n    );\n  }\n\n  async #updateAccountPositions(accountAddress: string) {\n    // TODO: This is done to give the UI a loading effect. Probably not the best way to do this\n    this.update((state) => {\n      state.allDeFiPositions[accountAddress] = null;\n    });\n\n    const defiPositionsResponse = await this.#fetchPositions(accountAddress);\n\n    const accountPositionsPerChain = groupPositions(defiPositionsResponse);\n\n    this.update((state) => {\n      state.allDeFiPositions[accountAddress] = accountPositionsPerChain;\n    });\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.d.cts b/dist/DeFiPositionsController/DeFiPositionsController.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..8d282836d9d9c145b4b0dca30a09fcbf6670d22c
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.d.cts
@@ -0,0 +1,55 @@
+import type { AccountsControllerGetSelectedAccountAction, AccountsControllerSelectedAccountChangeEvent } from "@metamask/accounts-controller";
+import type { ControllerGetStateAction, ControllerStateChangeEvent, RestrictedMessenger } from "@metamask/base-controller";
+import { BaseController } from "@metamask/base-controller";
+import type { NetworkControllerStateChangeEvent } from "@metamask/network-controller";
+import type { Hex } from "@metamask/utils";
+import { type GroupedPositions } from "./group-positions.cjs";
+declare const controllerName = "DeFiPositionsController";
+export type DeFiPositionsControllerState = {
+    /**
+     * Object containing DeFi positions per account and network
+     */
+    allDeFiPositions: {
+        [accountAddress: string]: {
+            [chain: Hex]: GroupedPositions;
+        } | null;
+    };
+};
+export declare const getDefaultDefiPositionsControllerState: () => DeFiPositionsControllerState;
+export type DeFiPositionsControllerActions = DeFiPositionsControllerGetStateAction;
+export type DeFiPositionsControllerGetStateAction = ControllerGetStateAction<typeof controllerName, DeFiPositionsControllerState>;
+export type DeFiPositionsControllerEvents = DeFiPositionsControllerStateChangeEvent;
+export type DeFiPositionsControllerStateChangeEvent = ControllerStateChangeEvent<typeof controllerName, DeFiPositionsControllerState>;
+/**
+ * The external actions available to the {@link DeFiPositionsController}.
+ */
+export type AllowedActions = AccountsControllerGetSelectedAccountAction;
+/**
+ * The external events available to the {@link DeFiPositionsController}.
+ */
+export type AllowedEvents = NetworkControllerStateChangeEvent | AccountsControllerSelectedAccountChangeEvent;
+/**
+ * The messenger of the {@link DeFiPositionsController}.
+ */
+export type DeFiPositionsControllerMessenger = RestrictedMessenger<typeof controllerName, DeFiPositionsControllerActions | AllowedActions, DeFiPositionsControllerEvents | AllowedEvents, AllowedActions['type'], AllowedEvents['type']>;
+/**
+ * Controller that stores assets and exposes convenience methods
+ */
+export declare class DeFiPositionsController extends BaseController<typeof controllerName, DeFiPositionsControllerState, DeFiPositionsControllerMessenger> {
+    #private;
+    /**
+     * Tokens controller options
+     *
+     * @param options - Constructor options.
+     * @param options.messenger - The controller messenger.
+     * @param options.state - Initial state to set on this controller.
+     * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.
+     */
+    constructor({ messenger, state, apiUrl, }: {
+        messenger: DeFiPositionsControllerMessenger;
+        state?: Partial<DeFiPositionsControllerState>;
+        apiUrl?: string;
+    });
+}
+export {};
+//# sourceMappingURL=DeFiPositionsController.d.cts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.d.cts.map b/dist/DeFiPositionsController/DeFiPositionsController.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..9876a96a18362966565874f4bd482f347705a53e
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"DeFiPositionsController.d.cts","sourceRoot":"","sources":["../../src/DeFiPositionsController/DeFiPositionsController.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,0CAA0C,EAC1C,4CAA4C,EAC7C,sCAAsC;AACvC,OAAO,KAAK,EACV,wBAAwB,EACxB,0BAA0B,EAC1B,mBAAmB,EAEpB,kCAAkC;AACnC,OAAO,EAAE,cAAc,EAAE,kCAAkC;AAC3D,OAAO,KAAK,EAAE,iCAAiC,EAAE,qCAAqC;AACtF,OAAO,KAAK,EAAE,GAAG,EAAE,wBAAwB;AAI3C,OAAO,EAAkB,KAAK,gBAAgB,EAAE,8BAA0B;AAE1E,QAAA,MAAM,cAAc,4BAA4B,CAAC;AAEjD,MAAM,MAAM,4BAA4B,GAAG;IACzC;;OAEG;IACH,gBAAgB,EAAE;QAChB,CAAC,cAAc,EAAE,MAAM,GAAG;YAAE,CAAC,KAAK,EAAE,GAAG,GAAG,gBAAgB,CAAA;SAAE,GAAG,IAAI,CAAC;KACrE,CAAC;CACH,CAAC;AASF,eAAO,MAAM,sCAAsC,QAC7C,4BAIH,CAAC;AAEJ,MAAM,MAAM,8BAA8B,GACxC,qCAAqC,CAAC;AAExC,MAAM,MAAM,qCAAqC,GAAG,wBAAwB,CAC1E,OAAO,cAAc,EACrB,4BAA4B,CAC7B,CAAC;AAEF,MAAM,MAAM,6BAA6B,GACvC,uCAAuC,CAAC;AAE1C,MAAM,MAAM,uCAAuC,GACjD,0BAA0B,CACxB,OAAO,cAAc,EACrB,4BAA4B,CAC7B,CAAC;AAEJ;;GAEG;AACH,MAAM,MAAM,cAAc,GAAG,0CAA0C,CAAC;AAExE;;GAEG;AACH,MAAM,MAAM,aAAa,GACrB,iCAAiC,GACjC,4CAA4C,CAAC;AAEjD;;GAEG;AACH,MAAM,MAAM,gCAAgC,GAAG,mBAAmB,CAChE,OAAO,cAAc,EACrB,8BAA8B,GAAG,cAAc,EAC/C,6BAA6B,GAAG,aAAa,EAC7C,cAAc,CAAC,MAAM,CAAC,EACtB,aAAa,CAAC,MAAM,CAAC,CACtB,CAAC;AAEF;;GAEG;AACH,qBAAa,uBAAwB,SAAQ,cAAc,CACzD,OAAO,cAAc,EACrB,4BAA4B,EAC5B,gCAAgC,CACjC;;IAKC;;;;;;;OAOG;gBACS,EACV,SAAS,EACT,KAAK,EACL,MAAM,GACP,EAAE;QACD,SAAS,EAAE,gCAAgC,CAAC;QAC5C,KAAK,CAAC,EAAE,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC9C,MAAM,CAAC,EAAE,MAAM,CAAC;KACjB;CAwDF"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.d.mts b/dist/DeFiPositionsController/DeFiPositionsController.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..43d0bd4b44dbe0ffe03ade5de5b17e8c5187190b
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.d.mts
@@ -0,0 +1,55 @@
+import type { AccountsControllerGetSelectedAccountAction, AccountsControllerSelectedAccountChangeEvent } from "@metamask/accounts-controller";
+import type { ControllerGetStateAction, ControllerStateChangeEvent, RestrictedMessenger } from "@metamask/base-controller";
+import { BaseController } from "@metamask/base-controller";
+import type { NetworkControllerStateChangeEvent } from "@metamask/network-controller";
+import type { Hex } from "@metamask/utils";
+import { type GroupedPositions } from "./group-positions.mjs";
+declare const controllerName = "DeFiPositionsController";
+export type DeFiPositionsControllerState = {
+    /**
+     * Object containing DeFi positions per account and network
+     */
+    allDeFiPositions: {
+        [accountAddress: string]: {
+            [chain: Hex]: GroupedPositions;
+        } | null;
+    };
+};
+export declare const getDefaultDefiPositionsControllerState: () => DeFiPositionsControllerState;
+export type DeFiPositionsControllerActions = DeFiPositionsControllerGetStateAction;
+export type DeFiPositionsControllerGetStateAction = ControllerGetStateAction<typeof controllerName, DeFiPositionsControllerState>;
+export type DeFiPositionsControllerEvents = DeFiPositionsControllerStateChangeEvent;
+export type DeFiPositionsControllerStateChangeEvent = ControllerStateChangeEvent<typeof controllerName, DeFiPositionsControllerState>;
+/**
+ * The external actions available to the {@link DeFiPositionsController}.
+ */
+export type AllowedActions = AccountsControllerGetSelectedAccountAction;
+/**
+ * The external events available to the {@link DeFiPositionsController}.
+ */
+export type AllowedEvents = NetworkControllerStateChangeEvent | AccountsControllerSelectedAccountChangeEvent;
+/**
+ * The messenger of the {@link DeFiPositionsController}.
+ */
+export type DeFiPositionsControllerMessenger = RestrictedMessenger<typeof controllerName, DeFiPositionsControllerActions | AllowedActions, DeFiPositionsControllerEvents | AllowedEvents, AllowedActions['type'], AllowedEvents['type']>;
+/**
+ * Controller that stores assets and exposes convenience methods
+ */
+export declare class DeFiPositionsController extends BaseController<typeof controllerName, DeFiPositionsControllerState, DeFiPositionsControllerMessenger> {
+    #private;
+    /**
+     * Tokens controller options
+     *
+     * @param options - Constructor options.
+     * @param options.messenger - The controller messenger.
+     * @param options.state - Initial state to set on this controller.
+     * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.
+     */
+    constructor({ messenger, state, apiUrl, }: {
+        messenger: DeFiPositionsControllerMessenger;
+        state?: Partial<DeFiPositionsControllerState>;
+        apiUrl?: string;
+    });
+}
+export {};
+//# sourceMappingURL=DeFiPositionsController.d.mts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.d.mts.map b/dist/DeFiPositionsController/DeFiPositionsController.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..99e4ecc4211f32fa47867360cb5eae487aa1c5e8
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"DeFiPositionsController.d.mts","sourceRoot":"","sources":["../../src/DeFiPositionsController/DeFiPositionsController.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,0CAA0C,EAC1C,4CAA4C,EAC7C,sCAAsC;AACvC,OAAO,KAAK,EACV,wBAAwB,EACxB,0BAA0B,EAC1B,mBAAmB,EAEpB,kCAAkC;AACnC,OAAO,EAAE,cAAc,EAAE,kCAAkC;AAC3D,OAAO,KAAK,EAAE,iCAAiC,EAAE,qCAAqC;AACtF,OAAO,KAAK,EAAE,GAAG,EAAE,wBAAwB;AAI3C,OAAO,EAAkB,KAAK,gBAAgB,EAAE,8BAA0B;AAE1E,QAAA,MAAM,cAAc,4BAA4B,CAAC;AAEjD,MAAM,MAAM,4BAA4B,GAAG;IACzC;;OAEG;IACH,gBAAgB,EAAE;QAChB,CAAC,cAAc,EAAE,MAAM,GAAG;YAAE,CAAC,KAAK,EAAE,GAAG,GAAG,gBAAgB,CAAA;SAAE,GAAG,IAAI,CAAC;KACrE,CAAC;CACH,CAAC;AASF,eAAO,MAAM,sCAAsC,QAC7C,4BAIH,CAAC;AAEJ,MAAM,MAAM,8BAA8B,GACxC,qCAAqC,CAAC;AAExC,MAAM,MAAM,qCAAqC,GAAG,wBAAwB,CAC1E,OAAO,cAAc,EACrB,4BAA4B,CAC7B,CAAC;AAEF,MAAM,MAAM,6BAA6B,GACvC,uCAAuC,CAAC;AAE1C,MAAM,MAAM,uCAAuC,GACjD,0BAA0B,CACxB,OAAO,cAAc,EACrB,4BAA4B,CAC7B,CAAC;AAEJ;;GAEG;AACH,MAAM,MAAM,cAAc,GAAG,0CAA0C,CAAC;AAExE;;GAEG;AACH,MAAM,MAAM,aAAa,GACrB,iCAAiC,GACjC,4CAA4C,CAAC;AAEjD;;GAEG;AACH,MAAM,MAAM,gCAAgC,GAAG,mBAAmB,CAChE,OAAO,cAAc,EACrB,8BAA8B,GAAG,cAAc,EAC/C,6BAA6B,GAAG,aAAa,EAC7C,cAAc,CAAC,MAAM,CAAC,EACtB,aAAa,CAAC,MAAM,CAAC,CACtB,CAAC;AAEF;;GAEG;AACH,qBAAa,uBAAwB,SAAQ,cAAc,CACzD,OAAO,cAAc,EACrB,4BAA4B,EAC5B,gCAAgC,CACjC;;IAKC;;;;;;;OAOG;gBACS,EACV,SAAS,EACT,KAAK,EACL,MAAM,GACP,EAAE;QACD,SAAS,EAAE,gCAAgC,CAAC;QAC5C,KAAK,CAAC,EAAE,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC9C,MAAM,CAAC,EAAE,MAAM,CAAC;KACjB;CAwDF"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.mjs b/dist/DeFiPositionsController/DeFiPositionsController.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..cc2be17672f938c4c956957295330206d0abd7ab
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.mjs
@@ -0,0 +1,77 @@
+var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
+    if (kind === "m") throw new TypeError("Private method is not writable");
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
+    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
+};
+var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
+    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
+};
+var _DeFiPositionsController_instances, _DeFiPositionsController_fetchPositions, _DeFiPositionsController_updateAccountPositions;
+import { BaseController } from "@metamask/base-controller";
+import { buildPositionFetcher } from "./fetch-positions.mjs";
+import { groupPositions } from "./group-positions.mjs";
+const controllerName = 'DeFiPositionsController';
+const controllerMetadata = {
+    allDeFiPositions: {
+        persist: false,
+        anonymous: false,
+    },
+};
+export const getDefaultDefiPositionsControllerState = () => {
+    return {
+        allDeFiPositions: {},
+    };
+};
+/**
+ * Controller that stores assets and exposes convenience methods
+ */
+export class DeFiPositionsController extends BaseController {
+    /**
+     * Tokens controller options
+     *
+     * @param options - Constructor options.
+     * @param options.messenger - The controller messenger.
+     * @param options.state - Initial state to set on this controller.
+     * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.
+     */
+    constructor({ messenger, state, apiUrl, }) {
+        super({
+            name: controllerName,
+            metadata: controllerMetadata,
+            messenger,
+            state: {
+                ...getDefaultDefiPositionsControllerState(),
+                ...state,
+            },
+        });
+        _DeFiPositionsController_instances.add(this);
+        _DeFiPositionsController_fetchPositions.set(this, void 0);
+        __classPrivateFieldSet(this, _DeFiPositionsController_fetchPositions, buildPositionFetcher(apiUrl), "f");
+        this.messagingSystem.subscribe('AccountsController:selectedAccountChange', async (selectedAccount) => {
+            console.log('DEFI POSITIONS CONTROLLER EVENT: AccountsController:selectedAccountChange', selectedAccount.address);
+            await __classPrivateFieldGet(this, _DeFiPositionsController_instances, "m", _DeFiPositionsController_updateAccountPositions).call(this, selectedAccount.address);
+        });
+        this.messagingSystem.subscribe('NetworkController:stateChange', async () => {
+            const { address } = this.messagingSystem.call('AccountsController:getSelectedAccount');
+            console.log('DEFI POSITIONS CONTROLLER EVENT: NetworkController:stateChange', address);
+            if (address) {
+                await __classPrivateFieldGet(this, _DeFiPositionsController_instances, "m", _DeFiPositionsController_updateAccountPositions).call(this, address);
+            }
+        });
+    }
+}
+_DeFiPositionsController_fetchPositions = new WeakMap(), _DeFiPositionsController_instances = new WeakSet(), _DeFiPositionsController_updateAccountPositions = async function _DeFiPositionsController_updateAccountPositions(accountAddress) {
+    // TODO: This is done to give the UI a loading effect. Probably not the best way to do this
+    this.update((state) => {
+        state.allDeFiPositions[accountAddress] = null;
+    });
+    const defiPositionsResponse = await __classPrivateFieldGet(this, _DeFiPositionsController_fetchPositions, "f").call(this, accountAddress);
+    const accountPositionsPerChain = groupPositions(defiPositionsResponse);
+    this.update((state) => {
+        state.allDeFiPositions[accountAddress] = accountPositionsPerChain;
+    });
+};
+//# sourceMappingURL=DeFiPositionsController.mjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/DeFiPositionsController.mjs.map b/dist/DeFiPositionsController/DeFiPositionsController.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..88623da95790a77366229ef9fbddd4fdd6db3228
--- /dev/null
+++ b/dist/DeFiPositionsController/DeFiPositionsController.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"DeFiPositionsController.mjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/DeFiPositionsController.ts"],"names":[],"mappings":";;;;;;;;;;;;AAUA,OAAO,EAAE,cAAc,EAAE,kCAAkC;AAK3D,OAAO,EAAE,oBAAoB,EAAE,8BAA0B;AACzD,OAAO,EAAE,cAAc,EAAyB,8BAA0B;AAE1E,MAAM,cAAc,GAAG,yBAAyB,CAAC;AAWjD,MAAM,kBAAkB,GAAgD;IACtE,gBAAgB,EAAE;QAChB,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;KACjB;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,sCAAsC,GACjD,GAAiC,EAAE;IACjC,OAAO;QACL,gBAAgB,EAAE,EAAE;KACrB,CAAC;AACJ,CAAC,CAAC;AA0CJ;;GAEG;AACH,MAAM,OAAO,uBAAwB,SAAQ,cAI5C;IAKC;;;;;;;OAOG;IACH,YAAY,EACV,SAAS,EACT,KAAK,EACL,MAAM,GAKP;QACC,KAAK,CAAC;YACJ,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,kBAAkB;YAC5B,SAAS;YACT,KAAK,EAAE;gBACL,GAAG,sCAAsC,EAAE;gBAC3C,GAAG,KAAK;aACT;SACF,CAAC,CAAC;;QA7BI,0DAE4B;QA6BnC,uBAAA,IAAI,2CAAmB,oBAAoB,CAAC,MAAM,CAAC,MAAA,CAAC;QAEpD,IAAI,CAAC,eAAe,CAAC,SAAS,CAC5B,0CAA0C,EAC1C,KAAK,EAAE,eAAe,EAAE,EAAE;YACxB,OAAO,CAAC,GAAG,CACT,2EAA2E,EAC3E,eAAe,CAAC,OAAO,CACxB,CAAC;YACF,MAAM,uBAAA,IAAI,2FAAwB,MAA5B,IAAI,EAAyB,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAC5B,+BAA+B,EAC/B,KAAK,IAAI,EAAE;YACT,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAC3C,uCAAuC,CACxC,CAAC;YACF,OAAO,CAAC,GAAG,CACT,gEAAgE,EAChE,OAAO,CACR,CAAC;YAEF,IAAI,OAAO,EAAE;gBACX,MAAM,uBAAA,IAAI,2FAAwB,MAA5B,IAAI,EAAyB,OAAO,CAAC,CAAC;aAC7C;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CAgBF;+JAdC,KAAK,0DAAyB,cAAsB;IAClD,2FAA2F;IAC3F,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;QACpB,KAAK,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,MAAM,uBAAA,IAAI,+CAAgB,MAApB,IAAI,EAAiB,cAAc,CAAC,CAAC;IAEzE,MAAM,wBAAwB,GAAG,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAEvE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE;QACpB,KAAK,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,wBAAwB,CAAC;IACpE,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type {\n  AccountsControllerGetSelectedAccountAction,\n  AccountsControllerSelectedAccountChangeEvent,\n} from '@metamask/accounts-controller';\nimport type {\n  ControllerGetStateAction,\n  ControllerStateChangeEvent,\n  RestrictedMessenger,\n  StateMetadata,\n} from '@metamask/base-controller';\nimport { BaseController } from '@metamask/base-controller';\nimport type { NetworkControllerStateChangeEvent } from '@metamask/network-controller';\nimport type { Hex } from '@metamask/utils';\n\nimport type { DefiPositionResponse } from './fetch-positions';\nimport { buildPositionFetcher } from './fetch-positions';\nimport { groupPositions, type GroupedPositions } from './group-positions';\n\nconst controllerName = 'DeFiPositionsController';\n\nexport type DeFiPositionsControllerState = {\n  /**\n   * Object containing DeFi positions per account and network\n   */\n  allDeFiPositions: {\n    [accountAddress: string]: { [chain: Hex]: GroupedPositions } | null;\n  };\n};\n\nconst controllerMetadata: StateMetadata<DeFiPositionsControllerState> = {\n  allDeFiPositions: {\n    persist: false,\n    anonymous: false,\n  },\n};\n\nexport const getDefaultDefiPositionsControllerState =\n  (): DeFiPositionsControllerState => {\n    return {\n      allDeFiPositions: {},\n    };\n  };\n\nexport type DeFiPositionsControllerActions =\n  DeFiPositionsControllerGetStateAction;\n\nexport type DeFiPositionsControllerGetStateAction = ControllerGetStateAction<\n  typeof controllerName,\n  DeFiPositionsControllerState\n>;\n\nexport type DeFiPositionsControllerEvents =\n  DeFiPositionsControllerStateChangeEvent;\n\nexport type DeFiPositionsControllerStateChangeEvent =\n  ControllerStateChangeEvent<\n    typeof controllerName,\n    DeFiPositionsControllerState\n  >;\n\n/**\n * The external actions available to the {@link DeFiPositionsController}.\n */\nexport type AllowedActions = AccountsControllerGetSelectedAccountAction;\n\n/**\n * The external events available to the {@link DeFiPositionsController}.\n */\nexport type AllowedEvents =\n  | NetworkControllerStateChangeEvent\n  | AccountsControllerSelectedAccountChangeEvent;\n\n/**\n * The messenger of the {@link DeFiPositionsController}.\n */\nexport type DeFiPositionsControllerMessenger = RestrictedMessenger<\n  typeof controllerName,\n  DeFiPositionsControllerActions | AllowedActions,\n  DeFiPositionsControllerEvents | AllowedEvents,\n  AllowedActions['type'],\n  AllowedEvents['type']\n>;\n\n/**\n * Controller that stores assets and exposes convenience methods\n */\nexport class DeFiPositionsController extends BaseController<\n  typeof controllerName,\n  DeFiPositionsControllerState,\n  DeFiPositionsControllerMessenger\n> {\n  readonly #fetchPositions: (\n    accountAddress: string,\n  ) => Promise<DefiPositionResponse[]>;\n\n  /**\n   * Tokens controller options\n   *\n   * @param options - Constructor options.\n   * @param options.messenger - The controller messenger.\n   * @param options.state - Initial state to set on this controller.\n   * @param options.apiUrl - Override for theAPI URL to use for fetching DeFi positions.\n   */\n  constructor({\n    messenger,\n    state,\n    apiUrl,\n  }: {\n    messenger: DeFiPositionsControllerMessenger;\n    state?: Partial<DeFiPositionsControllerState>;\n    apiUrl?: string;\n  }) {\n    super({\n      name: controllerName,\n      metadata: controllerMetadata,\n      messenger,\n      state: {\n        ...getDefaultDefiPositionsControllerState(),\n        ...state,\n      },\n    });\n\n    this.#fetchPositions = buildPositionFetcher(apiUrl);\n\n    this.messagingSystem.subscribe(\n      'AccountsController:selectedAccountChange',\n      async (selectedAccount) => {\n        console.log(\n          'DEFI POSITIONS CONTROLLER EVENT: AccountsController:selectedAccountChange',\n          selectedAccount.address,\n        );\n        await this.#updateAccountPositions(selectedAccount.address);\n      },\n    );\n\n    this.messagingSystem.subscribe(\n      'NetworkController:stateChange',\n      async () => {\n        const { address } = this.messagingSystem.call(\n          'AccountsController:getSelectedAccount',\n        );\n        console.log(\n          'DEFI POSITIONS CONTROLLER EVENT: NetworkController:stateChange',\n          address,\n        );\n\n        if (address) {\n          await this.#updateAccountPositions(address);\n        }\n      },\n    );\n  }\n\n  async #updateAccountPositions(accountAddress: string) {\n    // TODO: This is done to give the UI a loading effect. Probably not the best way to do this\n    this.update((state) => {\n      state.allDeFiPositions[accountAddress] = null;\n    });\n\n    const defiPositionsResponse = await this.#fetchPositions(accountAddress);\n\n    const accountPositionsPerChain = groupPositions(defiPositionsResponse);\n\n    this.update((state) => {\n      state.allDeFiPositions[accountAddress] = accountPositionsPerChain;\n    });\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.cjs b/dist/DeFiPositionsController/fetch-positions.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..64d321222a1c7d3913099db754fe88b4557c9cb8
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.cjs
@@ -0,0 +1,22 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.buildPositionFetcher = exports.DEFAULT_DEFI_POSITIONS_API_URL = void 0;
+// TODO: Update with new API URL
+exports.DEFAULT_DEFI_POSITIONS_API_URL = 'https://defi-services.metamask-institutional.io/defi-data/positions';
+/**
+ * Builds a function that fetches DeFi positions for a given account address
+ *
+ * @param apiUrl - The URL of the API to fetch the DeFi positions from
+ * @returns A function that fetches DeFi positions for a given account address
+ */
+function buildPositionFetcher(apiUrl = exports.DEFAULT_DEFI_POSITIONS_API_URL) {
+    return async (accountAddress) => {
+        const defiPositionsResponse = await fetch(`${apiUrl}/${accountAddress}`);
+        if (defiPositionsResponse.status !== 200) {
+            throw new Error(`Unable to fetch defi positions - HTTP ${defiPositionsResponse.status}`);
+        }
+        return (await defiPositionsResponse.json()).data;
+    };
+}
+exports.buildPositionFetcher = buildPositionFetcher;
+//# sourceMappingURL=fetch-positions.cjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.cjs.map b/dist/DeFiPositionsController/fetch-positions.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..41392aad12c6fb20df7239ef82e8dc244264b1ca
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"fetch-positions.cjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/fetch-positions.ts"],"names":[],"mappings":";;;AAwDA,gCAAgC;AACnB,QAAA,8BAA8B,GACzC,qEAAqE,CAAC;AAExE;;;;;GAKG;AACH,SAAgB,oBAAoB,CAClC,SAAiB,sCAA8B;IAE/C,OAAO,KAAK,EAAE,cAAsB,EAAmC,EAAE;QACvE,MAAM,qBAAqB,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,IAAI,cAAc,EAAE,CAAC,CAAC;QAEzE,IAAI,qBAAqB,CAAC,MAAM,KAAK,GAAG,EAAE;YACxC,MAAM,IAAI,KAAK,CACb,yCAAyC,qBAAqB,CAAC,MAAM,EAAE,CACxE,CAAC;SACH;QAED,OAAO,CAAC,MAAM,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC,CAAC;AACJ,CAAC;AAdD,oDAcC","sourcesContent":["export type DefiPositionResponse = AdapterResponse<{\n  tokens: ProtocolToken[];\n}>;\n\ntype ProtocolDetails = {\n  chainId: number;\n  protocolId: string;\n  productId: string;\n  name: string;\n  description: string;\n  iconUrl: string;\n  siteUrl: string;\n  positionType: PositionType;\n  metadata?: {\n    groupPositions?: boolean;\n  };\n};\n\ntype AdapterResponse<ProtocolResponse> =\n  | (ProtocolDetails & {\n      chainName: string;\n    } & (\n        | (ProtocolResponse & { success: true })\n        | (AdapterErrorResponse & { success: false })\n      ))\n  | (AdapterErrorResponse & { success: false });\n\ntype AdapterErrorResponse = {\n  error: {\n    message: string;\n  };\n};\n\nexport type PositionType = 'supply' | 'borrow' | 'stake' | 'reward';\n\nexport type ProtocolToken = Balance & {\n  type: 'protocol';\n  tokenId?: string;\n};\n\nexport type Underlying = Balance & {\n  type: 'underlying' | 'underlying-claimable';\n  iconUrl: string;\n};\n\nexport type Balance = {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n  balanceRaw: string;\n  balance: number;\n  price?: number; // TODO: Confirm this is the case\n  tokens?: Underlying[];\n};\n\n// TODO: Update with new API URL\nexport const DEFAULT_DEFI_POSITIONS_API_URL =\n  'https://defi-services.metamask-institutional.io/defi-data/positions';\n\n/**\n * Builds a function that fetches DeFi positions for a given account address\n *\n * @param apiUrl - The URL of the API to fetch the DeFi positions from\n * @returns A function that fetches DeFi positions for a given account address\n */\nexport function buildPositionFetcher(\n  apiUrl: string = DEFAULT_DEFI_POSITIONS_API_URL,\n) {\n  return async (accountAddress: string): Promise<DefiPositionResponse[]> => {\n    const defiPositionsResponse = await fetch(`${apiUrl}/${accountAddress}`);\n\n    if (defiPositionsResponse.status !== 200) {\n      throw new Error(\n        `Unable to fetch defi positions - HTTP ${defiPositionsResponse.status}`,\n      );\n    }\n\n    return (await defiPositionsResponse.json()).data;\n  };\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.d.cts b/dist/DeFiPositionsController/fetch-positions.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..63b9bf7b483278b788b5c27f4e4e3fff50143f4c
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.d.cts
@@ -0,0 +1,59 @@
+export type DefiPositionResponse = AdapterResponse<{
+    tokens: ProtocolToken[];
+}>;
+type ProtocolDetails = {
+    chainId: number;
+    protocolId: string;
+    productId: string;
+    name: string;
+    description: string;
+    iconUrl: string;
+    siteUrl: string;
+    positionType: PositionType;
+    metadata?: {
+        groupPositions?: boolean;
+    };
+};
+type AdapterResponse<ProtocolResponse> = (ProtocolDetails & {
+    chainName: string;
+} & ((ProtocolResponse & {
+    success: true;
+}) | (AdapterErrorResponse & {
+    success: false;
+}))) | (AdapterErrorResponse & {
+    success: false;
+});
+type AdapterErrorResponse = {
+    error: {
+        message: string;
+    };
+};
+export type PositionType = 'supply' | 'borrow' | 'stake' | 'reward';
+export type ProtocolToken = Balance & {
+    type: 'protocol';
+    tokenId?: string;
+};
+export type Underlying = Balance & {
+    type: 'underlying' | 'underlying-claimable';
+    iconUrl: string;
+};
+export type Balance = {
+    address: string;
+    name: string;
+    symbol: string;
+    decimals: number;
+    balanceRaw: string;
+    balance: number;
+    price?: number;
+    tokens?: Underlying[];
+};
+export declare const DEFAULT_DEFI_POSITIONS_API_URL = "https://defi-services.metamask-institutional.io/defi-data/positions";
+/**
+ * Builds a function that fetches DeFi positions for a given account address
+ *
+ * @param apiUrl - The URL of the API to fetch the DeFi positions from
+ * @returns A function that fetches DeFi positions for a given account address
+ */
+export declare function buildPositionFetcher(apiUrl?: string): (accountAddress: string) => Promise<DefiPositionResponse[]>;
+export {};
+//# sourceMappingURL=fetch-positions.d.cts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.d.cts.map b/dist/DeFiPositionsController/fetch-positions.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..913874aad0410fbe80d48d057a75016a0d3f7345
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"fetch-positions.d.cts","sourceRoot":"","sources":["../../src/DeFiPositionsController/fetch-positions.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,oBAAoB,GAAG,eAAe,CAAC;IACjD,MAAM,EAAE,aAAa,EAAE,CAAC;CACzB,CAAC,CAAC;AAEH,KAAK,eAAe,GAAG;IACrB,OAAO,EAAE,MAAM,CAAC;IAChB,UAAU,EAAE,MAAM,CAAC;IACnB,SAAS,EAAE,MAAM,CAAC;IAClB,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,YAAY,EAAE,YAAY,CAAC;IAC3B,QAAQ,CAAC,EAAE;QACT,cAAc,CAAC,EAAE,OAAO,CAAC;KAC1B,CAAC;CACH,CAAC;AAEF,KAAK,eAAe,CAAC,gBAAgB,IACjC,CAAC,eAAe,GAAG;IACjB,SAAS,EAAE,MAAM,CAAC;CACnB,GAAG,CACE,CAAC,gBAAgB,GAAG;IAAE,OAAO,EAAE,IAAI,CAAA;CAAE,CAAC,GACtC,CAAC,oBAAoB,GAAG;IAAE,OAAO,EAAE,KAAK,CAAA;CAAE,CAAC,CAC9C,CAAC,GACJ,CAAC,oBAAoB,GAAG;IAAE,OAAO,EAAE,KAAK,CAAA;CAAE,CAAC,CAAC;AAEhD,KAAK,oBAAoB,GAAG;IAC1B,KAAK,EAAE;QACL,OAAO,EAAE,MAAM,CAAC;KACjB,CAAC;CACH,CAAC;AAEF,MAAM,MAAM,YAAY,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEpE,MAAM,MAAM,aAAa,GAAG,OAAO,GAAG;IACpC,IAAI,EAAE,UAAU,CAAC;IACjB,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,UAAU,GAAG,OAAO,GAAG;IACjC,IAAI,EAAE,YAAY,GAAG,sBAAsB,CAAC;IAC5C,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,MAAM,MAAM,OAAO,GAAG;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,MAAM,CAAC;IACf,QAAQ,EAAE,MAAM,CAAC;IACjB,UAAU,EAAE,MAAM,CAAC;IACnB,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC;CACvB,CAAC;AAGF,eAAO,MAAM,8BAA8B,wEAC4B,CAAC;AAExE;;;;;GAKG;AACH,wBAAgB,oBAAoB,CAClC,MAAM,GAAE,MAAuC,oBAEjB,MAAM,KAAG,QAAQ,oBAAoB,EAAE,CAAC,CAWvE"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.d.mts b/dist/DeFiPositionsController/fetch-positions.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..923d2fe9767723d8b64cfccf7fd8990e6c90cbab
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.d.mts
@@ -0,0 +1,59 @@
+export type DefiPositionResponse = AdapterResponse<{
+    tokens: ProtocolToken[];
+}>;
+type ProtocolDetails = {
+    chainId: number;
+    protocolId: string;
+    productId: string;
+    name: string;
+    description: string;
+    iconUrl: string;
+    siteUrl: string;
+    positionType: PositionType;
+    metadata?: {
+        groupPositions?: boolean;
+    };
+};
+type AdapterResponse<ProtocolResponse> = (ProtocolDetails & {
+    chainName: string;
+} & ((ProtocolResponse & {
+    success: true;
+}) | (AdapterErrorResponse & {
+    success: false;
+}))) | (AdapterErrorResponse & {
+    success: false;
+});
+type AdapterErrorResponse = {
+    error: {
+        message: string;
+    };
+};
+export type PositionType = 'supply' | 'borrow' | 'stake' | 'reward';
+export type ProtocolToken = Balance & {
+    type: 'protocol';
+    tokenId?: string;
+};
+export type Underlying = Balance & {
+    type: 'underlying' | 'underlying-claimable';
+    iconUrl: string;
+};
+export type Balance = {
+    address: string;
+    name: string;
+    symbol: string;
+    decimals: number;
+    balanceRaw: string;
+    balance: number;
+    price?: number;
+    tokens?: Underlying[];
+};
+export declare const DEFAULT_DEFI_POSITIONS_API_URL = "https://defi-services.metamask-institutional.io/defi-data/positions";
+/**
+ * Builds a function that fetches DeFi positions for a given account address
+ *
+ * @param apiUrl - The URL of the API to fetch the DeFi positions from
+ * @returns A function that fetches DeFi positions for a given account address
+ */
+export declare function buildPositionFetcher(apiUrl?: string): (accountAddress: string) => Promise<DefiPositionResponse[]>;
+export {};
+//# sourceMappingURL=fetch-positions.d.mts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.d.mts.map b/dist/DeFiPositionsController/fetch-positions.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..4b97d6bece570849514fc4ba894b9e295f02d191
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"fetch-positions.d.mts","sourceRoot":"","sources":["../../src/DeFiPositionsController/fetch-positions.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,oBAAoB,GAAG,eAAe,CAAC;IACjD,MAAM,EAAE,aAAa,EAAE,CAAC;CACzB,CAAC,CAAC;AAEH,KAAK,eAAe,GAAG;IACrB,OAAO,EAAE,MAAM,CAAC;IAChB,UAAU,EAAE,MAAM,CAAC;IACnB,SAAS,EAAE,MAAM,CAAC;IAClB,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,YAAY,EAAE,YAAY,CAAC;IAC3B,QAAQ,CAAC,EAAE;QACT,cAAc,CAAC,EAAE,OAAO,CAAC;KAC1B,CAAC;CACH,CAAC;AAEF,KAAK,eAAe,CAAC,gBAAgB,IACjC,CAAC,eAAe,GAAG;IACjB,SAAS,EAAE,MAAM,CAAC;CACnB,GAAG,CACE,CAAC,gBAAgB,GAAG;IAAE,OAAO,EAAE,IAAI,CAAA;CAAE,CAAC,GACtC,CAAC,oBAAoB,GAAG;IAAE,OAAO,EAAE,KAAK,CAAA;CAAE,CAAC,CAC9C,CAAC,GACJ,CAAC,oBAAoB,GAAG;IAAE,OAAO,EAAE,KAAK,CAAA;CAAE,CAAC,CAAC;AAEhD,KAAK,oBAAoB,GAAG;IAC1B,KAAK,EAAE;QACL,OAAO,EAAE,MAAM,CAAC;KACjB,CAAC;CACH,CAAC;AAEF,MAAM,MAAM,YAAY,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEpE,MAAM,MAAM,aAAa,GAAG,OAAO,GAAG;IACpC,IAAI,EAAE,UAAU,CAAC;IACjB,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,UAAU,GAAG,OAAO,GAAG;IACjC,IAAI,EAAE,YAAY,GAAG,sBAAsB,CAAC;IAC5C,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,MAAM,MAAM,OAAO,GAAG;IACpB,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,MAAM,CAAC;IACf,QAAQ,EAAE,MAAM,CAAC;IACjB,UAAU,EAAE,MAAM,CAAC;IACnB,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC;CACvB,CAAC;AAGF,eAAO,MAAM,8BAA8B,wEAC4B,CAAC;AAExE;;;;;GAKG;AACH,wBAAgB,oBAAoB,CAClC,MAAM,GAAE,MAAuC,oBAEjB,MAAM,KAAG,QAAQ,oBAAoB,EAAE,CAAC,CAWvE"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.mjs b/dist/DeFiPositionsController/fetch-positions.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..8094f6df3cc550977429af870c92149d69442f4f
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.mjs
@@ -0,0 +1,18 @@
+// TODO: Update with new API URL
+export const DEFAULT_DEFI_POSITIONS_API_URL = 'https://defi-services.metamask-institutional.io/defi-data/positions';
+/**
+ * Builds a function that fetches DeFi positions for a given account address
+ *
+ * @param apiUrl - The URL of the API to fetch the DeFi positions from
+ * @returns A function that fetches DeFi positions for a given account address
+ */
+export function buildPositionFetcher(apiUrl = DEFAULT_DEFI_POSITIONS_API_URL) {
+    return async (accountAddress) => {
+        const defiPositionsResponse = await fetch(`${apiUrl}/${accountAddress}`);
+        if (defiPositionsResponse.status !== 200) {
+            throw new Error(`Unable to fetch defi positions - HTTP ${defiPositionsResponse.status}`);
+        }
+        return (await defiPositionsResponse.json()).data;
+    };
+}
+//# sourceMappingURL=fetch-positions.mjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/fetch-positions.mjs.map b/dist/DeFiPositionsController/fetch-positions.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..df7beb297e6850dd317c8f48046f1816a448e8f1
--- /dev/null
+++ b/dist/DeFiPositionsController/fetch-positions.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"fetch-positions.mjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/fetch-positions.ts"],"names":[],"mappings":"AAwDA,gCAAgC;AAChC,MAAM,CAAC,MAAM,8BAA8B,GACzC,qEAAqE,CAAC;AAExE;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAClC,SAAiB,8BAA8B;IAE/C,OAAO,KAAK,EAAE,cAAsB,EAAmC,EAAE;QACvE,MAAM,qBAAqB,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,IAAI,cAAc,EAAE,CAAC,CAAC;QAEzE,IAAI,qBAAqB,CAAC,MAAM,KAAK,GAAG,EAAE;YACxC,MAAM,IAAI,KAAK,CACb,yCAAyC,qBAAqB,CAAC,MAAM,EAAE,CACxE,CAAC;SACH;QAED,OAAO,CAAC,MAAM,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["export type DefiPositionResponse = AdapterResponse<{\n  tokens: ProtocolToken[];\n}>;\n\ntype ProtocolDetails = {\n  chainId: number;\n  protocolId: string;\n  productId: string;\n  name: string;\n  description: string;\n  iconUrl: string;\n  siteUrl: string;\n  positionType: PositionType;\n  metadata?: {\n    groupPositions?: boolean;\n  };\n};\n\ntype AdapterResponse<ProtocolResponse> =\n  | (ProtocolDetails & {\n      chainName: string;\n    } & (\n        | (ProtocolResponse & { success: true })\n        | (AdapterErrorResponse & { success: false })\n      ))\n  | (AdapterErrorResponse & { success: false });\n\ntype AdapterErrorResponse = {\n  error: {\n    message: string;\n  };\n};\n\nexport type PositionType = 'supply' | 'borrow' | 'stake' | 'reward';\n\nexport type ProtocolToken = Balance & {\n  type: 'protocol';\n  tokenId?: string;\n};\n\nexport type Underlying = Balance & {\n  type: 'underlying' | 'underlying-claimable';\n  iconUrl: string;\n};\n\nexport type Balance = {\n  address: string;\n  name: string;\n  symbol: string;\n  decimals: number;\n  balanceRaw: string;\n  balance: number;\n  price?: number; // TODO: Confirm this is the case\n  tokens?: Underlying[];\n};\n\n// TODO: Update with new API URL\nexport const DEFAULT_DEFI_POSITIONS_API_URL =\n  'https://defi-services.metamask-institutional.io/defi-data/positions';\n\n/**\n * Builds a function that fetches DeFi positions for a given account address\n *\n * @param apiUrl - The URL of the API to fetch the DeFi positions from\n * @returns A function that fetches DeFi positions for a given account address\n */\nexport function buildPositionFetcher(\n  apiUrl: string = DEFAULT_DEFI_POSITIONS_API_URL,\n) {\n  return async (accountAddress: string): Promise<DefiPositionResponse[]> => {\n    const defiPositionsResponse = await fetch(`${apiUrl}/${accountAddress}`);\n\n    if (defiPositionsResponse.status !== 200) {\n      throw new Error(\n        `Unable to fetch defi positions - HTTP ${defiPositionsResponse.status}`,\n      );\n    }\n\n    return (await defiPositionsResponse.json()).data;\n  };\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.cjs b/dist/DeFiPositionsController/group-positions.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..919f598f0f9cf4e361ef36e2749980c81a0db507
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.cjs
@@ -0,0 +1,99 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.groupPositions = void 0;
+const controller_utils_1 = require("@metamask/controller-utils");
+const lodash_1 = require("lodash");
+/**
+ *
+ * @param defiPositionsResponse - The response from the defi positions API
+ * @returns The grouped positions that get assigned to the state
+ */
+function groupPositions(defiPositionsResponse) {
+    const groupedPositions = {};
+    for (const position of defiPositionsResponse) {
+        if (!position.success) {
+            continue;
+        }
+        const { chainId, protocolId, iconUrl, positionType } = position;
+        const chain = (0, controller_utils_1.toHex)(chainId);
+        if (!groupedPositions[chain]) {
+            groupedPositions[chain] = {
+                aggregatedMarketValue: 0,
+                protocols: {},
+            };
+        }
+        const chainData = groupedPositions[chain];
+        if (!chainData.protocols[protocolId]) {
+            chainData.protocols[protocolId] = {
+                protocolDetails: {
+                    // TODO: Prepare better source for protocol name
+                    name: (0, lodash_1.upperFirst)((0, lodash_1.camelCase)(protocolId)),
+                    // TODO: Picking icon url from the first product position might not be consistent
+                    iconUrl,
+                },
+                aggregatedMarketValue: 0,
+                positionTypes: {},
+            };
+        }
+        const protocolData = chainData.protocols[protocolId];
+        let positionTypeData = protocolData.positionTypes[positionType];
+        if (!positionTypeData) {
+            positionTypeData = {
+                aggregatedMarketValue: 0,
+                positions: [],
+            };
+            protocolData.positionTypes[positionType] = positionTypeData;
+        }
+        for (const protocolToken of position.tokens) {
+            const token = processToken(protocolToken);
+            // If groupPositions is true, we group all positions of the same type
+            if (position.metadata?.groupPositions) {
+                if (positionTypeData.positions.length === 0) {
+                    positionTypeData.positions.push([token]);
+                }
+                else {
+                    positionTypeData.positions[0].push(token);
+                }
+            }
+            else {
+                positionTypeData.positions.push([token]);
+            }
+            if (token.marketValue) {
+                const multiplier = position.positionType === 'borrow' ? -1 : 1;
+                positionTypeData.aggregatedMarketValue += token.marketValue;
+                protocolData.aggregatedMarketValue += token.marketValue * multiplier;
+                chainData.aggregatedMarketValue += token.marketValue * multiplier;
+            }
+        }
+    }
+    return groupedPositions;
+}
+exports.groupPositions = groupPositions;
+/**
+ *
+ * @param tokenBalance - The token balance that is going to be processed
+ * @returns The processed token balance
+ */
+function processToken(tokenBalance) {
+    if (!tokenBalance.tokens) {
+        return {
+            ...tokenBalance,
+            marketValue: tokenBalance.price
+                ? tokenBalance.balance * tokenBalance.price
+                : undefined,
+        };
+    }
+    const processedTokens = tokenBalance.tokens.map((t) => {
+        const { tokens, ...tokenWithoutUnderlyings } = processToken(t);
+        return tokenWithoutUnderlyings;
+    });
+    const marketValue = processedTokens.reduce((acc, t) => acc === undefined || t.marketValue === undefined
+        ? undefined
+        : acc + t.marketValue, 0);
+    return {
+        ...tokenBalance,
+        marketValue,
+        tokens: processedTokens,
+    };
+}
+//# sourceMappingURL=group-positions.cjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.cjs.map b/dist/DeFiPositionsController/group-positions.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..272f2779303a7ddf2fe83a2209f39f0157a2aa42
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"group-positions.cjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/group-positions.ts"],"names":[],"mappings":"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","sourcesContent":["import { toHex } from '@metamask/controller-utils';\nimport type { Hex } from '@metamask/utils';\nimport { upperFirst, camelCase } from 'lodash';\n\nimport type {\n  DefiPositionResponse,\n  PositionType,\n  ProtocolToken,\n  Underlying,\n  Balance,\n} from './fetch-positions';\n\nexport type GroupedPositions = {\n  aggregatedMarketValue: number;\n  protocols: {\n    [protocolId: string]: {\n      protocolDetails: { name: string; iconUrl: string };\n      aggregatedMarketValue: number;\n      positionTypes: {\n        [key in PositionType]?: {\n          aggregatedMarketValue: number;\n          positions: ProtocolTokenWithMarketValue[][];\n        };\n      };\n    };\n  };\n};\n\nexport type ProtocolTokenWithMarketValue = Omit<ProtocolToken, 'tokens'> & {\n  marketValue?: number;\n  tokens: UnderlyingWithMarketValue[];\n};\n\nexport type UnderlyingWithMarketValue = Omit<Underlying, 'tokens'> & {\n  marketValue?: number;\n};\n\n/**\n *\n * @param defiPositionsResponse - The response from the defi positions API\n * @returns The grouped positions that get assigned to the state\n */\nexport function groupPositions(defiPositionsResponse: DefiPositionResponse[]): {\n  [key: Hex]: GroupedPositions;\n} {\n  const groupedPositions: { [key: Hex]: GroupedPositions } = {};\n\n  for (const position of defiPositionsResponse) {\n    if (!position.success) {\n      continue;\n    }\n\n    const { chainId, protocolId, iconUrl, positionType } = position;\n\n    const chain = toHex(chainId);\n\n    if (!groupedPositions[chain]) {\n      groupedPositions[chain] = {\n        aggregatedMarketValue: 0,\n        protocols: {},\n      };\n    }\n\n    const chainData = groupedPositions[chain];\n\n    if (!chainData.protocols[protocolId]) {\n      chainData.protocols[protocolId] = {\n        protocolDetails: {\n          // TODO: Prepare better source for protocol name\n          name: upperFirst(camelCase(protocolId)),\n          // TODO: Picking icon url from the first product position might not be consistent\n          iconUrl,\n        },\n        aggregatedMarketValue: 0,\n        positionTypes: {},\n      };\n    }\n\n    const protocolData = chainData.protocols[protocolId];\n\n    let positionTypeData = protocolData.positionTypes[positionType];\n    if (!positionTypeData) {\n      positionTypeData = {\n        aggregatedMarketValue: 0,\n        positions: [],\n      };\n      protocolData.positionTypes[positionType] = positionTypeData;\n    }\n\n    for (const protocolToken of position.tokens) {\n      const token = processToken(protocolToken) as ProtocolTokenWithMarketValue;\n\n      // If groupPositions is true, we group all positions of the same type\n      if (position.metadata?.groupPositions) {\n        if (positionTypeData.positions.length === 0) {\n          positionTypeData.positions.push([token]);\n        } else {\n          positionTypeData.positions[0].push(token);\n        }\n      } else {\n        positionTypeData.positions.push([token]);\n      }\n\n      if (token.marketValue) {\n        const multiplier = position.positionType === 'borrow' ? -1 : 1;\n\n        positionTypeData.aggregatedMarketValue += token.marketValue;\n        protocolData.aggregatedMarketValue += token.marketValue * multiplier;\n        chainData.aggregatedMarketValue += token.marketValue * multiplier;\n      }\n    }\n  }\n\n  return groupedPositions;\n}\n\n/**\n *\n * @param tokenBalance - The token balance that is going to be processed\n * @returns The processed token balance\n */\nfunction processToken<T extends Balance>(\n  tokenBalance: T,\n): T & {\n  marketValue?: number;\n  tokens?: UnderlyingWithMarketValue[];\n} {\n  if (!tokenBalance.tokens) {\n    return {\n      ...tokenBalance,\n      marketValue: tokenBalance.price\n        ? tokenBalance.balance * tokenBalance.price\n        : undefined,\n    };\n  }\n\n  const processedTokens = tokenBalance.tokens.map((t) => {\n    const { tokens, ...tokenWithoutUnderlyings } = processToken(t);\n\n    return tokenWithoutUnderlyings;\n  });\n\n  const marketValue = processedTokens.reduce(\n    (acc, t) =>\n      acc === undefined || t.marketValue === undefined\n        ? undefined\n        : acc + t.marketValue,\n    0 as number | undefined,\n  );\n\n  return {\n    ...tokenBalance,\n    marketValue,\n    tokens: processedTokens,\n  };\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.d.cts b/dist/DeFiPositionsController/group-positions.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..471ac1c6c5e2b064de1bc3f40d173d782a0c2f56
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.d.cts
@@ -0,0 +1,36 @@
+import type { Hex } from "@metamask/utils";
+import type { DefiPositionResponse, PositionType, ProtocolToken, Underlying } from "./fetch-positions.cjs";
+export type GroupedPositions = {
+    aggregatedMarketValue: number;
+    protocols: {
+        [protocolId: string]: {
+            protocolDetails: {
+                name: string;
+                iconUrl: string;
+            };
+            aggregatedMarketValue: number;
+            positionTypes: {
+                [key in PositionType]?: {
+                    aggregatedMarketValue: number;
+                    positions: ProtocolTokenWithMarketValue[][];
+                };
+            };
+        };
+    };
+};
+export type ProtocolTokenWithMarketValue = Omit<ProtocolToken, 'tokens'> & {
+    marketValue?: number;
+    tokens: UnderlyingWithMarketValue[];
+};
+export type UnderlyingWithMarketValue = Omit<Underlying, 'tokens'> & {
+    marketValue?: number;
+};
+/**
+ *
+ * @param defiPositionsResponse - The response from the defi positions API
+ * @returns The grouped positions that get assigned to the state
+ */
+export declare function groupPositions(defiPositionsResponse: DefiPositionResponse[]): {
+    [key: Hex]: GroupedPositions;
+};
+//# sourceMappingURL=group-positions.d.cts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.d.cts.map b/dist/DeFiPositionsController/group-positions.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..3e30920f40f31530148b7d09a0b2c4a4ddb39802
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"group-positions.d.cts","sourceRoot":"","sources":["../../src/DeFiPositionsController/group-positions.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,GAAG,EAAE,wBAAwB;AAG3C,OAAO,KAAK,EACV,oBAAoB,EACpB,YAAY,EACZ,aAAa,EACb,UAAU,EAEX,8BAA0B;AAE3B,MAAM,MAAM,gBAAgB,GAAG;IAC7B,qBAAqB,EAAE,MAAM,CAAC;IAC9B,SAAS,EAAE;QACT,CAAC,UAAU,EAAE,MAAM,GAAG;YACpB,eAAe,EAAE;gBAAE,IAAI,EAAE,MAAM,CAAC;gBAAC,OAAO,EAAE,MAAM,CAAA;aAAE,CAAC;YACnD,qBAAqB,EAAE,MAAM,CAAC;YAC9B,aAAa,EAAE;iBACZ,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE;oBACtB,qBAAqB,EAAE,MAAM,CAAC;oBAC9B,SAAS,EAAE,4BAA4B,EAAE,EAAE,CAAC;iBAC7C;aACF,CAAC;SACH,CAAC;KACH,CAAC;CACH,CAAC;AAEF,MAAM,MAAM,4BAA4B,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,GAAG;IACzE,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,MAAM,EAAE,yBAAyB,EAAE,CAAC;CACrC,CAAC;AAEF,MAAM,MAAM,yBAAyB,GAAG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG;IACnE,WAAW,CAAC,EAAE,MAAM,CAAC;CACtB,CAAC;AAEF;;;;GAIG;AACH,wBAAgB,cAAc,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,GAAG;IAC7E,CAAC,GAAG,EAAE,GAAG,GAAG,gBAAgB,CAAC;CAC9B,CAsEA"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.d.mts b/dist/DeFiPositionsController/group-positions.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..01339b79d2e35328669c54f1b81f2f62163794ba
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.d.mts
@@ -0,0 +1,36 @@
+import type { Hex } from "@metamask/utils";
+import type { DefiPositionResponse, PositionType, ProtocolToken, Underlying } from "./fetch-positions.mjs";
+export type GroupedPositions = {
+    aggregatedMarketValue: number;
+    protocols: {
+        [protocolId: string]: {
+            protocolDetails: {
+                name: string;
+                iconUrl: string;
+            };
+            aggregatedMarketValue: number;
+            positionTypes: {
+                [key in PositionType]?: {
+                    aggregatedMarketValue: number;
+                    positions: ProtocolTokenWithMarketValue[][];
+                };
+            };
+        };
+    };
+};
+export type ProtocolTokenWithMarketValue = Omit<ProtocolToken, 'tokens'> & {
+    marketValue?: number;
+    tokens: UnderlyingWithMarketValue[];
+};
+export type UnderlyingWithMarketValue = Omit<Underlying, 'tokens'> & {
+    marketValue?: number;
+};
+/**
+ *
+ * @param defiPositionsResponse - The response from the defi positions API
+ * @returns The grouped positions that get assigned to the state
+ */
+export declare function groupPositions(defiPositionsResponse: DefiPositionResponse[]): {
+    [key: Hex]: GroupedPositions;
+};
+//# sourceMappingURL=group-positions.d.mts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.d.mts.map b/dist/DeFiPositionsController/group-positions.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..88464949c02f69839fc9beb6643afec66a323dc5
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"group-positions.d.mts","sourceRoot":"","sources":["../../src/DeFiPositionsController/group-positions.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,GAAG,EAAE,wBAAwB;AAG3C,OAAO,KAAK,EACV,oBAAoB,EACpB,YAAY,EACZ,aAAa,EACb,UAAU,EAEX,8BAA0B;AAE3B,MAAM,MAAM,gBAAgB,GAAG;IAC7B,qBAAqB,EAAE,MAAM,CAAC;IAC9B,SAAS,EAAE;QACT,CAAC,UAAU,EAAE,MAAM,GAAG;YACpB,eAAe,EAAE;gBAAE,IAAI,EAAE,MAAM,CAAC;gBAAC,OAAO,EAAE,MAAM,CAAA;aAAE,CAAC;YACnD,qBAAqB,EAAE,MAAM,CAAC;YAC9B,aAAa,EAAE;iBACZ,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE;oBACtB,qBAAqB,EAAE,MAAM,CAAC;oBAC9B,SAAS,EAAE,4BAA4B,EAAE,EAAE,CAAC;iBAC7C;aACF,CAAC;SACH,CAAC;KACH,CAAC;CACH,CAAC;AAEF,MAAM,MAAM,4BAA4B,GAAG,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,GAAG;IACzE,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,MAAM,EAAE,yBAAyB,EAAE,CAAC;CACrC,CAAC;AAEF,MAAM,MAAM,yBAAyB,GAAG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG;IACnE,WAAW,CAAC,EAAE,MAAM,CAAC;CACtB,CAAC;AAEF;;;;GAIG;AACH,wBAAgB,cAAc,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,GAAG;IAC7E,CAAC,GAAG,EAAE,GAAG,GAAG,gBAAgB,CAAC;CAC9B,CAsEA"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.mjs b/dist/DeFiPositionsController/group-positions.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..4a37d77aaef304d5439a26361307fd50bf5b6067
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.mjs
@@ -0,0 +1,96 @@
+import { toHex } from "@metamask/controller-utils";
+import $lodash from "lodash";
+const { upperFirst, camelCase } = $lodash;
+/**
+ *
+ * @param defiPositionsResponse - The response from the defi positions API
+ * @returns The grouped positions that get assigned to the state
+ */
+export function groupPositions(defiPositionsResponse) {
+    const groupedPositions = {};
+    for (const position of defiPositionsResponse) {
+        if (!position.success) {
+            continue;
+        }
+        const { chainId, protocolId, iconUrl, positionType } = position;
+        const chain = toHex(chainId);
+        if (!groupedPositions[chain]) {
+            groupedPositions[chain] = {
+                aggregatedMarketValue: 0,
+                protocols: {},
+            };
+        }
+        const chainData = groupedPositions[chain];
+        if (!chainData.protocols[protocolId]) {
+            chainData.protocols[protocolId] = {
+                protocolDetails: {
+                    // TODO: Prepare better source for protocol name
+                    name: upperFirst(camelCase(protocolId)),
+                    // TODO: Picking icon url from the first product position might not be consistent
+                    iconUrl,
+                },
+                aggregatedMarketValue: 0,
+                positionTypes: {},
+            };
+        }
+        const protocolData = chainData.protocols[protocolId];
+        let positionTypeData = protocolData.positionTypes[positionType];
+        if (!positionTypeData) {
+            positionTypeData = {
+                aggregatedMarketValue: 0,
+                positions: [],
+            };
+            protocolData.positionTypes[positionType] = positionTypeData;
+        }
+        for (const protocolToken of position.tokens) {
+            const token = processToken(protocolToken);
+            // If groupPositions is true, we group all positions of the same type
+            if (position.metadata?.groupPositions) {
+                if (positionTypeData.positions.length === 0) {
+                    positionTypeData.positions.push([token]);
+                }
+                else {
+                    positionTypeData.positions[0].push(token);
+                }
+            }
+            else {
+                positionTypeData.positions.push([token]);
+            }
+            if (token.marketValue) {
+                const multiplier = position.positionType === 'borrow' ? -1 : 1;
+                positionTypeData.aggregatedMarketValue += token.marketValue;
+                protocolData.aggregatedMarketValue += token.marketValue * multiplier;
+                chainData.aggregatedMarketValue += token.marketValue * multiplier;
+            }
+        }
+    }
+    return groupedPositions;
+}
+/**
+ *
+ * @param tokenBalance - The token balance that is going to be processed
+ * @returns The processed token balance
+ */
+function processToken(tokenBalance) {
+    if (!tokenBalance.tokens) {
+        return {
+            ...tokenBalance,
+            marketValue: tokenBalance.price
+                ? tokenBalance.balance * tokenBalance.price
+                : undefined,
+        };
+    }
+    const processedTokens = tokenBalance.tokens.map((t) => {
+        const { tokens, ...tokenWithoutUnderlyings } = processToken(t);
+        return tokenWithoutUnderlyings;
+    });
+    const marketValue = processedTokens.reduce((acc, t) => acc === undefined || t.marketValue === undefined
+        ? undefined
+        : acc + t.marketValue, 0);
+    return {
+        ...tokenBalance,
+        marketValue,
+        tokens: processedTokens,
+    };
+}
+//# sourceMappingURL=group-positions.mjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/group-positions.mjs.map b/dist/DeFiPositionsController/group-positions.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..acb48cf7780083b59b6f1db3103cbae604a5591a
--- /dev/null
+++ b/dist/DeFiPositionsController/group-positions.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"group-positions.mjs","sourceRoot":"","sources":["../../src/DeFiPositionsController/group-positions.ts"],"names":[],"mappings":"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","sourcesContent":["import { toHex } from '@metamask/controller-utils';\nimport type { Hex } from '@metamask/utils';\nimport { upperFirst, camelCase } from 'lodash';\n\nimport type {\n  DefiPositionResponse,\n  PositionType,\n  ProtocolToken,\n  Underlying,\n  Balance,\n} from './fetch-positions';\n\nexport type GroupedPositions = {\n  aggregatedMarketValue: number;\n  protocols: {\n    [protocolId: string]: {\n      protocolDetails: { name: string; iconUrl: string };\n      aggregatedMarketValue: number;\n      positionTypes: {\n        [key in PositionType]?: {\n          aggregatedMarketValue: number;\n          positions: ProtocolTokenWithMarketValue[][];\n        };\n      };\n    };\n  };\n};\n\nexport type ProtocolTokenWithMarketValue = Omit<ProtocolToken, 'tokens'> & {\n  marketValue?: number;\n  tokens: UnderlyingWithMarketValue[];\n};\n\nexport type UnderlyingWithMarketValue = Omit<Underlying, 'tokens'> & {\n  marketValue?: number;\n};\n\n/**\n *\n * @param defiPositionsResponse - The response from the defi positions API\n * @returns The grouped positions that get assigned to the state\n */\nexport function groupPositions(defiPositionsResponse: DefiPositionResponse[]): {\n  [key: Hex]: GroupedPositions;\n} {\n  const groupedPositions: { [key: Hex]: GroupedPositions } = {};\n\n  for (const position of defiPositionsResponse) {\n    if (!position.success) {\n      continue;\n    }\n\n    const { chainId, protocolId, iconUrl, positionType } = position;\n\n    const chain = toHex(chainId);\n\n    if (!groupedPositions[chain]) {\n      groupedPositions[chain] = {\n        aggregatedMarketValue: 0,\n        protocols: {},\n      };\n    }\n\n    const chainData = groupedPositions[chain];\n\n    if (!chainData.protocols[protocolId]) {\n      chainData.protocols[protocolId] = {\n        protocolDetails: {\n          // TODO: Prepare better source for protocol name\n          name: upperFirst(camelCase(protocolId)),\n          // TODO: Picking icon url from the first product position might not be consistent\n          iconUrl,\n        },\n        aggregatedMarketValue: 0,\n        positionTypes: {},\n      };\n    }\n\n    const protocolData = chainData.protocols[protocolId];\n\n    let positionTypeData = protocolData.positionTypes[positionType];\n    if (!positionTypeData) {\n      positionTypeData = {\n        aggregatedMarketValue: 0,\n        positions: [],\n      };\n      protocolData.positionTypes[positionType] = positionTypeData;\n    }\n\n    for (const protocolToken of position.tokens) {\n      const token = processToken(protocolToken) as ProtocolTokenWithMarketValue;\n\n      // If groupPositions is true, we group all positions of the same type\n      if (position.metadata?.groupPositions) {\n        if (positionTypeData.positions.length === 0) {\n          positionTypeData.positions.push([token]);\n        } else {\n          positionTypeData.positions[0].push(token);\n        }\n      } else {\n        positionTypeData.positions.push([token]);\n      }\n\n      if (token.marketValue) {\n        const multiplier = position.positionType === 'borrow' ? -1 : 1;\n\n        positionTypeData.aggregatedMarketValue += token.marketValue;\n        protocolData.aggregatedMarketValue += token.marketValue * multiplier;\n        chainData.aggregatedMarketValue += token.marketValue * multiplier;\n      }\n    }\n  }\n\n  return groupedPositions;\n}\n\n/**\n *\n * @param tokenBalance - The token balance that is going to be processed\n * @returns The processed token balance\n */\nfunction processToken<T extends Balance>(\n  tokenBalance: T,\n): T & {\n  marketValue?: number;\n  tokens?: UnderlyingWithMarketValue[];\n} {\n  if (!tokenBalance.tokens) {\n    return {\n      ...tokenBalance,\n      marketValue: tokenBalance.price\n        ? tokenBalance.balance * tokenBalance.price\n        : undefined,\n    };\n  }\n\n  const processedTokens = tokenBalance.tokens.map((t) => {\n    const { tokens, ...tokenWithoutUnderlyings } = processToken(t);\n\n    return tokenWithoutUnderlyings;\n  });\n\n  const marketValue = processedTokens.reduce(\n    (acc, t) =>\n      acc === undefined || t.marketValue === undefined\n        ? undefined\n        : acc + t.marketValue,\n    0 as number | undefined,\n  );\n\n  return {\n    ...tokenBalance,\n    marketValue,\n    tokens: processedTokens,\n  };\n}\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.cjs b/dist/DeFiPositionsController/mocks/mock-responses.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..305837077362ebb9ee63b0634461b839cc81b91c
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.cjs
@@ -0,0 +1,600 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.MOCK_DEFI_RESPONSE_COMPLEX = exports.MOCK_DEFI_RESPONSE_BORROW = exports.MOCK_DEFI_RESPONSE_NO_PRICES = exports.MOCK_DEFI_RESPONSE_FAILED_ENTRY = exports.MOCK_DEFI_RESPONSE_MULTI_CHAIN = void 0;
+/**
+ * Entries are from different chains
+ */
+exports.MOCK_DEFI_RESPONSE_MULTI_CHAIN = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 8453,
+        productId: 'a-token',
+        chainName: 'base',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The first entry is a failed entry
+ */
+exports.MOCK_DEFI_RESPONSE_FAILED_ENTRY = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: false,
+        error: {
+            message: 'Failed to fetch positions',
+        },
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The second entry has no price
+ */
+exports.MOCK_DEFI_RESPONSE_NO_PRICES = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: undefined,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The second entry is a borrow position
+ */
+exports.MOCK_DEFI_RESPONSE_BORROW = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: 500,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',
+                name: 'Aave Ethereum Variable Debt USDT',
+                symbol: 'variableDebtEthUSDT',
+                decimals: 6,
+                balanceRaw: '1000000000',
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        type: 'underlying',
+                        balanceRaw: '1000000000',
+                        balance: 1000,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+                balance: 1000,
+            },
+        ],
+    },
+];
+/**
+ * Complex mock with multiple chains, failed entries, borrow positions, etc.
+ */
+exports.MOCK_DEFI_RESPONSE_COMPLEX = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: 500,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',
+                name: 'Aave Ethereum Variable Debt USDT',
+                symbol: 'variableDebtEthUSDT',
+                decimals: 6,
+                balanceRaw: '1000000000',
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        type: 'underlying',
+                        balanceRaw: '1000000000',
+                        balance: 1000,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+                balance: 1000,
+            },
+        ],
+    },
+    {
+        protocolId: 'lido',
+        name: 'Lido wstEth',
+        description: 'Lido defi adapter for wstEth',
+        siteUrl: 'https://stake.lido.fi/wrap',
+        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',
+        positionType: 'stake',
+        chainId: 1,
+        productId: 'wst-eth',
+        chainName: 'ethereum',
+        success: true,
+        tokens: [
+            {
+                address: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',
+                name: 'Wrapped liquid staked Ether 2.0',
+                symbol: 'wstETH',
+                decimals: 18,
+                balanceRaw: '800000000000000000000',
+                balance: 800,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
+                        name: 'Liquid staked Ether 2.0',
+                        symbol: 'stETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '1000000000000000000',
+                        balance: 10,
+                        price: 2000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',
+                        tokens: [
+                            {
+                                address: '0x0000000000000000000000000000000000000000',
+                                name: 'Ethereum',
+                                symbol: 'ETH',
+                                decimals: 18,
+                                type: 'underlying',
+                                balanceRaw: '1000000000000000000',
+                                balance: 10,
+                                price: 2000,
+                                iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png',
+                            },
+                        ],
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'uniswap-v3',
+        name: 'UniswapV3',
+        description: 'UniswapV3 defi adapter',
+        siteUrl: 'https://uniswap.org/',
+        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png',
+        positionType: 'supply',
+        chainId: 8453,
+        productId: 'pool',
+        chainName: 'base',
+        success: true,
+        tokens: [
+            {
+                address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',
+                tokenId: '940758',
+                name: 'GASP / USDT - 0.3%',
+                symbol: 'GASP / USDT - 0.3%',
+                decimals: 18,
+                balanceRaw: '1000000000000000000',
+                balance: 1,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '100000000000000000000',
+                        type: 'underlying',
+                        balance: 100,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '10000000000000000000',
+                        type: 'underlying-claimable',
+                        balance: 10,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '500000000',
+                        type: 'underlying',
+                        balance: 500,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '2000000',
+                        type: 'underlying-claimable',
+                        balance: 2,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',
+                tokenId: '940760',
+                name: 'GASP / USDT - 0.3%',
+                symbol: 'GASP / USDT - 0.3%',
+                decimals: 18,
+                balanceRaw: '2000000000000000000',
+                balance: 2,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '90000000000000000000000',
+                        type: 'underlying',
+                        balance: 90000,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '50000000000000000000',
+                        type: 'underlying-claimable',
+                        balance: 50,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '60000000',
+                        type: 'underlying',
+                        balance: 60,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '2000000',
+                        type: 'underlying-claimable',
+                        balance: 2,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+//# sourceMappingURL=mock-responses.cjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.cjs.map b/dist/DeFiPositionsController/mocks/mock-responses.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..223eb57ddb9d24ef74d4deac1412046b424a62e4
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"mock-responses.cjs","sourceRoot":"","sources":["../../../src/DeFiPositionsController/mocks/mock-responses.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DefiPositionResponse } from '../fetch-positions';\n\n/**\n * Entries are from different chains\n */\nexport const MOCK_DEFI_RESPONSE_MULTI_CHAIN: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 8453,\n    productId: 'a-token',\n    chainName: 'base',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The first entry is a failed entry\n */\nexport const MOCK_DEFI_RESPONSE_FAILED_ENTRY: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: false,\n    error: {\n      message: 'Failed to fetch positions',\n    },\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The second entry has no price\n */\nexport const MOCK_DEFI_RESPONSE_NO_PRICES: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: undefined,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The second entry is a borrow position\n */\nexport const MOCK_DEFI_RESPONSE_BORROW: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: 500,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',\n        name: 'Aave Ethereum Variable Debt USDT',\n        symbol: 'variableDebtEthUSDT',\n        decimals: 6,\n        balanceRaw: '1000000000',\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            type: 'underlying',\n            balanceRaw: '1000000000',\n            balance: 1000,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n        balance: 1000,\n      },\n    ],\n  },\n];\n\n/**\n * Complex mock with multiple chains, failed entries, borrow positions, etc.\n */\nexport const MOCK_DEFI_RESPONSE_COMPLEX: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: 500,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',\n        name: 'Aave Ethereum Variable Debt USDT',\n        symbol: 'variableDebtEthUSDT',\n        decimals: 6,\n        balanceRaw: '1000000000',\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            type: 'underlying',\n            balanceRaw: '1000000000',\n            balance: 1000,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n        balance: 1000,\n      },\n    ],\n  },\n  {\n    protocolId: 'lido',\n    name: 'Lido wstEth',\n    description: 'Lido defi adapter for wstEth',\n    siteUrl: 'https://stake.lido.fi/wrap',\n    iconUrl:\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',\n    positionType: 'stake',\n    chainId: 1,\n    productId: 'wst-eth',\n    chainName: 'ethereum',\n    success: true,\n    tokens: [\n      {\n        address: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',\n        name: 'Wrapped liquid staked Ether 2.0',\n        symbol: 'wstETH',\n        decimals: 18,\n        balanceRaw: '800000000000000000000',\n        balance: 800,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',\n            name: 'Liquid staked Ether 2.0',\n            symbol: 'stETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '1000000000000000000',\n            balance: 10,\n            price: 2000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',\n            tokens: [\n              {\n                address: '0x0000000000000000000000000000000000000000',\n                name: 'Ethereum',\n                symbol: 'ETH',\n                decimals: 18,\n                type: 'underlying',\n                balanceRaw: '1000000000000000000',\n                balance: 10,\n                price: 2000,\n                iconUrl:\n                  'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'uniswap-v3',\n    name: 'UniswapV3',\n    description: 'UniswapV3 defi adapter',\n    siteUrl: 'https://uniswap.org/',\n    iconUrl:\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png',\n    positionType: 'supply',\n    chainId: 8453,\n    productId: 'pool',\n    chainName: 'base',\n    success: true,\n    tokens: [\n      {\n        address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',\n        tokenId: '940758',\n        name: 'GASP / USDT - 0.3%',\n        symbol: 'GASP / USDT - 0.3%',\n        decimals: 18,\n        balanceRaw: '1000000000000000000',\n        balance: 1,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '100000000000000000000',\n            type: 'underlying',\n            balance: 100,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '10000000000000000000',\n            type: 'underlying-claimable',\n            balance: 10,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '500000000',\n            type: 'underlying',\n            balance: 500,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '2000000',\n            type: 'underlying-claimable',\n            balance: 2,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',\n        tokenId: '940760',\n        name: 'GASP / USDT - 0.3%',\n        symbol: 'GASP / USDT - 0.3%',\n        decimals: 18,\n        balanceRaw: '2000000000000000000',\n        balance: 2,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '90000000000000000000000',\n            type: 'underlying',\n            balance: 90000,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '50000000000000000000',\n            type: 'underlying-claimable',\n            balance: 50,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '60000000',\n            type: 'underlying',\n            balance: 60,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '2000000',\n            type: 'underlying-claimable',\n            balance: 2,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n"]}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.d.cts b/dist/DeFiPositionsController/mocks/mock-responses.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..a4d7ec04743fa2585c206d5d54bfd31d5da78446
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.d.cts
@@ -0,0 +1,22 @@
+import type { DefiPositionResponse } from "../fetch-positions.cjs";
+/**
+ * Entries are from different chains
+ */
+export declare const MOCK_DEFI_RESPONSE_MULTI_CHAIN: DefiPositionResponse[];
+/**
+ * The first entry is a failed entry
+ */
+export declare const MOCK_DEFI_RESPONSE_FAILED_ENTRY: DefiPositionResponse[];
+/**
+ * The second entry has no price
+ */
+export declare const MOCK_DEFI_RESPONSE_NO_PRICES: DefiPositionResponse[];
+/**
+ * The second entry is a borrow position
+ */
+export declare const MOCK_DEFI_RESPONSE_BORROW: DefiPositionResponse[];
+/**
+ * Complex mock with multiple chains, failed entries, borrow positions, etc.
+ */
+export declare const MOCK_DEFI_RESPONSE_COMPLEX: DefiPositionResponse[];
+//# sourceMappingURL=mock-responses.d.cts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.d.cts.map b/dist/DeFiPositionsController/mocks/mock-responses.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..fd7a0d117aa0d90cbe98830619105c21b05fb56e
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mock-responses.d.cts","sourceRoot":"","sources":["../../../src/DeFiPositionsController/mocks/mock-responses.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,oBAAoB,EAAE,+BAA2B;AAE/D;;GAEG;AACH,eAAO,MAAM,8BAA8B,EAAE,oBAAoB,EAiFhE,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,+BAA+B,EAAE,oBAAoB,EA2DjE,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,4BAA4B,EAAE,oBAAoB,EAgE9D,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,yBAAyB,EAAE,oBAAoB,EAwG3D,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,0BAA0B,EAAE,oBAAoB,EAmS5D,CAAC"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.d.mts b/dist/DeFiPositionsController/mocks/mock-responses.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..5e2c0b79d1fb01c266d2109321d8d8cedf2ce3cd
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.d.mts
@@ -0,0 +1,22 @@
+import type { DefiPositionResponse } from "../fetch-positions.mjs";
+/**
+ * Entries are from different chains
+ */
+export declare const MOCK_DEFI_RESPONSE_MULTI_CHAIN: DefiPositionResponse[];
+/**
+ * The first entry is a failed entry
+ */
+export declare const MOCK_DEFI_RESPONSE_FAILED_ENTRY: DefiPositionResponse[];
+/**
+ * The second entry has no price
+ */
+export declare const MOCK_DEFI_RESPONSE_NO_PRICES: DefiPositionResponse[];
+/**
+ * The second entry is a borrow position
+ */
+export declare const MOCK_DEFI_RESPONSE_BORROW: DefiPositionResponse[];
+/**
+ * Complex mock with multiple chains, failed entries, borrow positions, etc.
+ */
+export declare const MOCK_DEFI_RESPONSE_COMPLEX: DefiPositionResponse[];
+//# sourceMappingURL=mock-responses.d.mts.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.d.mts.map b/dist/DeFiPositionsController/mocks/mock-responses.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..79454c7700240ad4c174dc0eedede40b01fbec9a
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mock-responses.d.mts","sourceRoot":"","sources":["../../../src/DeFiPositionsController/mocks/mock-responses.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,oBAAoB,EAAE,+BAA2B;AAE/D;;GAEG;AACH,eAAO,MAAM,8BAA8B,EAAE,oBAAoB,EAiFhE,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,+BAA+B,EAAE,oBAAoB,EA2DjE,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,4BAA4B,EAAE,oBAAoB,EAgE9D,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,yBAAyB,EAAE,oBAAoB,EAwG3D,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,0BAA0B,EAAE,oBAAoB,EAmS5D,CAAC"}
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.mjs b/dist/DeFiPositionsController/mocks/mock-responses.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..e59524eae8b502b42118f425a5a8837857e428c3
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.mjs
@@ -0,0 +1,597 @@
+/**
+ * Entries are from different chains
+ */
+export const MOCK_DEFI_RESPONSE_MULTI_CHAIN = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 8453,
+        productId: 'a-token',
+        chainName: 'base',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The first entry is a failed entry
+ */
+export const MOCK_DEFI_RESPONSE_FAILED_ENTRY = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: false,
+        error: {
+            message: 'Failed to fetch positions',
+        },
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '5000000000000000000',
+                balance: 5,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '5000000000000000000',
+                        balance: 5,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The second entry has no price
+ */
+export const MOCK_DEFI_RESPONSE_NO_PRICES = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: undefined,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+/**
+ * The second entry is a borrow position
+ */
+export const MOCK_DEFI_RESPONSE_BORROW = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: 500,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',
+                name: 'Aave Ethereum Variable Debt USDT',
+                symbol: 'variableDebtEthUSDT',
+                decimals: 6,
+                balanceRaw: '1000000000',
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        type: 'underlying',
+                        balanceRaw: '1000000000',
+                        balance: 1000,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+                balance: 1000,
+            },
+        ],
+    },
+];
+/**
+ * Complex mock with multiple chains, failed entries, borrow positions, etc.
+ */
+export const MOCK_DEFI_RESPONSE_COMPLEX = [
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 AToken',
+        description: 'Aave v3 defi adapter for yield-generating token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'supply',
+        chainId: 1,
+        productId: 'a-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',
+                name: 'Aave Ethereum WETH',
+                symbol: 'aEthWETH',
+                decimals: 18,
+                balanceRaw: '40000000000000000',
+                balance: 0.04,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
+                        name: 'Wrapped Ether',
+                        symbol: 'WETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '40000000000000000',
+                        balance: 0.04,
+                        price: 1000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',
+                name: 'Aave Ethereum WBTC',
+                symbol: 'aEthWBTC',
+                decimals: 8,
+                balanceRaw: '300000000',
+                balance: 3,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
+                        name: 'Wrapped BTC',
+                        symbol: 'WBTC',
+                        decimals: 8,
+                        type: 'underlying',
+                        balanceRaw: '300000000',
+                        balance: 3,
+                        price: 500,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'aave-v3',
+        name: 'Aave v3 VariableDebtToken',
+        description: 'Aave v3 defi adapter for variable interest-accruing token',
+        siteUrl: 'https://aave.com/',
+        iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',
+        positionType: 'borrow',
+        chainId: 1,
+        productId: 'variable-debt-token',
+        chainName: 'ethereum',
+        metadata: {
+            groupPositions: true,
+        },
+        success: true,
+        tokens: [
+            {
+                address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',
+                name: 'Aave Ethereum Variable Debt USDT',
+                symbol: 'variableDebtEthUSDT',
+                decimals: 6,
+                balanceRaw: '1000000000',
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        type: 'underlying',
+                        balanceRaw: '1000000000',
+                        balance: 1000,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+                balance: 1000,
+            },
+        ],
+    },
+    {
+        protocolId: 'lido',
+        name: 'Lido wstEth',
+        description: 'Lido defi adapter for wstEth',
+        siteUrl: 'https://stake.lido.fi/wrap',
+        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',
+        positionType: 'stake',
+        chainId: 1,
+        productId: 'wst-eth',
+        chainName: 'ethereum',
+        success: true,
+        tokens: [
+            {
+                address: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',
+                name: 'Wrapped liquid staked Ether 2.0',
+                symbol: 'wstETH',
+                decimals: 18,
+                balanceRaw: '800000000000000000000',
+                balance: 800,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
+                        name: 'Liquid staked Ether 2.0',
+                        symbol: 'stETH',
+                        decimals: 18,
+                        type: 'underlying',
+                        balanceRaw: '1000000000000000000',
+                        balance: 10,
+                        price: 2000,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',
+                        tokens: [
+                            {
+                                address: '0x0000000000000000000000000000000000000000',
+                                name: 'Ethereum',
+                                symbol: 'ETH',
+                                decimals: 18,
+                                type: 'underlying',
+                                balanceRaw: '1000000000000000000',
+                                balance: 10,
+                                price: 2000,
+                                iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png',
+                            },
+                        ],
+                    },
+                ],
+            },
+        ],
+    },
+    {
+        protocolId: 'uniswap-v3',
+        name: 'UniswapV3',
+        description: 'UniswapV3 defi adapter',
+        siteUrl: 'https://uniswap.org/',
+        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png',
+        positionType: 'supply',
+        chainId: 8453,
+        productId: 'pool',
+        chainName: 'base',
+        success: true,
+        tokens: [
+            {
+                address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',
+                tokenId: '940758',
+                name: 'GASP / USDT - 0.3%',
+                symbol: 'GASP / USDT - 0.3%',
+                decimals: 18,
+                balanceRaw: '1000000000000000000',
+                balance: 1,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '100000000000000000000',
+                        type: 'underlying',
+                        balance: 100,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '10000000000000000000',
+                        type: 'underlying-claimable',
+                        balance: 10,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '500000000',
+                        type: 'underlying',
+                        balance: 500,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '2000000',
+                        type: 'underlying-claimable',
+                        balance: 2,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+            },
+            {
+                address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',
+                tokenId: '940760',
+                name: 'GASP / USDT - 0.3%',
+                symbol: 'GASP / USDT - 0.3%',
+                decimals: 18,
+                balanceRaw: '2000000000000000000',
+                balance: 2,
+                type: 'protocol',
+                tokens: [
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '90000000000000000000000',
+                        type: 'underlying',
+                        balance: 90000,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',
+                        name: 'GASP',
+                        symbol: 'GASP',
+                        decimals: 18,
+                        balanceRaw: '50000000000000000000',
+                        type: 'underlying-claimable',
+                        balance: 50,
+                        price: 0.1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '60000000',
+                        type: 'underlying',
+                        balance: 60,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                    {
+                        address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
+                        name: 'Tether USD',
+                        symbol: 'USDT',
+                        decimals: 6,
+                        balanceRaw: '2000000',
+                        type: 'underlying-claimable',
+                        balance: 2,
+                        price: 1,
+                        iconUrl: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',
+                    },
+                ],
+            },
+        ],
+    },
+];
+//# sourceMappingURL=mock-responses.mjs.map
\ No newline at end of file
diff --git a/dist/DeFiPositionsController/mocks/mock-responses.mjs.map b/dist/DeFiPositionsController/mocks/mock-responses.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..0e2c87e09fb76cc6a5db85f0fca256b63afa2502
--- /dev/null
+++ b/dist/DeFiPositionsController/mocks/mock-responses.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"mock-responses.mjs","sourceRoot":"","sources":["../../../src/DeFiPositionsController/mocks/mock-responses.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DefiPositionResponse } from '../fetch-positions';\n\n/**\n * Entries are from different chains\n */\nexport const MOCK_DEFI_RESPONSE_MULTI_CHAIN: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 8453,\n    productId: 'a-token',\n    chainName: 'base',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The first entry is a failed entry\n */\nexport const MOCK_DEFI_RESPONSE_FAILED_ENTRY: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: false,\n    error: {\n      message: 'Failed to fetch positions',\n    },\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '5000000000000000000',\n        balance: 5,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '5000000000000000000',\n            balance: 5,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The second entry has no price\n */\nexport const MOCK_DEFI_RESPONSE_NO_PRICES: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: undefined,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n/**\n * The second entry is a borrow position\n */\nexport const MOCK_DEFI_RESPONSE_BORROW: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: 500,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',\n        name: 'Aave Ethereum Variable Debt USDT',\n        symbol: 'variableDebtEthUSDT',\n        decimals: 6,\n        balanceRaw: '1000000000',\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            type: 'underlying',\n            balanceRaw: '1000000000',\n            balance: 1000,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n        balance: 1000,\n      },\n    ],\n  },\n];\n\n/**\n * Complex mock with multiple chains, failed entries, borrow positions, etc.\n */\nexport const MOCK_DEFI_RESPONSE_COMPLEX: DefiPositionResponse[] = [\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 AToken',\n    description: 'Aave v3 defi adapter for yield-generating token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'supply',\n    chainId: 1,\n    productId: 'a-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8',\n        name: 'Aave Ethereum WETH',\n        symbol: 'aEthWETH',\n        decimals: 18,\n        balanceRaw: '40000000000000000',\n        balance: 0.04,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n            name: 'Wrapped Ether',\n            symbol: 'WETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '40000000000000000',\n            balance: 0.04,\n            price: 1000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8',\n        name: 'Aave Ethereum WBTC',\n        symbol: 'aEthWBTC',\n        decimals: 8,\n        balanceRaw: '300000000',\n        balance: 3,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n            name: 'Wrapped BTC',\n            symbol: 'WBTC',\n            decimals: 8,\n            type: 'underlying',\n            balanceRaw: '300000000',\n            balance: 3,\n            price: 500,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'aave-v3',\n    name: 'Aave v3 VariableDebtToken',\n    description: 'Aave v3 defi adapter for variable interest-accruing token',\n    siteUrl: 'https://aave.com/',\n    iconUrl: 'https://cryptologos.cc/logos/aave-aave-logo.png',\n    positionType: 'borrow',\n    chainId: 1,\n    productId: 'variable-debt-token',\n    chainName: 'ethereum',\n    metadata: {\n      groupPositions: true,\n    },\n    success: true,\n    tokens: [\n      {\n        address: '0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8',\n        name: 'Aave Ethereum Variable Debt USDT',\n        symbol: 'variableDebtEthUSDT',\n        decimals: 6,\n        balanceRaw: '1000000000',\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            type: 'underlying',\n            balanceRaw: '1000000000',\n            balance: 1000,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n        balance: 1000,\n      },\n    ],\n  },\n  {\n    protocolId: 'lido',\n    name: 'Lido wstEth',\n    description: 'Lido defi adapter for wstEth',\n    siteUrl: 'https://stake.lido.fi/wrap',\n    iconUrl:\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',\n    positionType: 'stake',\n    chainId: 1,\n    productId: 'wst-eth',\n    chainName: 'ethereum',\n    success: true,\n    tokens: [\n      {\n        address: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',\n        name: 'Wrapped liquid staked Ether 2.0',\n        symbol: 'wstETH',\n        decimals: 18,\n        balanceRaw: '800000000000000000000',\n        balance: 800,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',\n            name: 'Liquid staked Ether 2.0',\n            symbol: 'stETH',\n            decimals: 18,\n            type: 'underlying',\n            balanceRaw: '1000000000000000000',\n            balance: 10,\n            price: 2000,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84/logo.png',\n            tokens: [\n              {\n                address: '0x0000000000000000000000000000000000000000',\n                name: 'Ethereum',\n                symbol: 'ETH',\n                decimals: 18,\n                type: 'underlying',\n                balanceRaw: '1000000000000000000',\n                balance: 10,\n                price: 2000,\n                iconUrl:\n                  'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    protocolId: 'uniswap-v3',\n    name: 'UniswapV3',\n    description: 'UniswapV3 defi adapter',\n    siteUrl: 'https://uniswap.org/',\n    iconUrl:\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png',\n    positionType: 'supply',\n    chainId: 8453,\n    productId: 'pool',\n    chainName: 'base',\n    success: true,\n    tokens: [\n      {\n        address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',\n        tokenId: '940758',\n        name: 'GASP / USDT - 0.3%',\n        symbol: 'GASP / USDT - 0.3%',\n        decimals: 18,\n        balanceRaw: '1000000000000000000',\n        balance: 1,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '100000000000000000000',\n            type: 'underlying',\n            balance: 100,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '10000000000000000000',\n            type: 'underlying-claimable',\n            balance: 10,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '500000000',\n            type: 'underlying',\n            balance: 500,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '2000000',\n            type: 'underlying-claimable',\n            balance: 2,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n      },\n      {\n        address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88',\n        tokenId: '940760',\n        name: 'GASP / USDT - 0.3%',\n        symbol: 'GASP / USDT - 0.3%',\n        decimals: 18,\n        balanceRaw: '2000000000000000000',\n        balance: 2,\n        type: 'protocol',\n        tokens: [\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '90000000000000000000000',\n            type: 'underlying',\n            balance: 90000,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E',\n            name: 'GASP',\n            symbol: 'GASP',\n            decimals: 18,\n            balanceRaw: '50000000000000000000',\n            type: 'underlying-claimable',\n            balance: 50,\n            price: 0.1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x736ECc5237B31eDec6f1aB9a396FaE2416b1d96E/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '60000000',\n            type: 'underlying',\n            balance: 60,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n          {\n            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n            name: 'Tether USD',\n            symbol: 'USDT',\n            decimals: 6,\n            balanceRaw: '2000000',\n            type: 'underlying-claimable',\n            balance: 2,\n            price: 1,\n            iconUrl:\n              'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n          },\n        ],\n      },\n    ],\n  },\n];\n"]}
\ No newline at end of file
diff --git a/dist/assetsUtil.cjs b/dist/assetsUtil.cjs
index 0eb212b5eb9a9ef2f61c44b9e5f04b14d5571865..033449f962d11cc67ccd7219873fd7f33b5df6e1 100644
--- a/dist/assetsUtil.cjs
+++ b/dist/assetsUtil.cjs
@@ -1,12 +1,48 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.getKeyByValue = exports.fetchTokenContractExchangeRates = exports.reduceInBatchesSerially = exports.divideIntoBatches = exports.ethersBigNumberToBN = exports.addUrlProtocolPrefix = exports.getFormattedIpfsUrl = exports.getIpfsCIDv1AndPath = exports.removeIpfsProtocolPrefix = exports.isTokenListSupportedForNetwork = exports.isTokenDetectionSupportedForNetwork = exports.SupportedStakedBalanceNetworks = exports.SupportedTokenDetectionNetworks = exports.formatIconUrlWithProxy = exports.formatAggregatorNames = exports.hasNewCollectionFields = exports.compareNftMetadata = exports.TOKEN_PRICES_BATCH_SIZE = void 0;
-const controller_utils_1 = require("@metamask/controller-utils");
-const utils_1 = require("@metamask/utils");
-const bn_js_1 = __importDefault(require("bn.js"));
+'use strict';
+var __importDefault =
+  (this && this.__importDefault) ||
+  function (mod) {
+    return mod && mod.__esModule ? mod : { default: mod };
+  };
+Object.defineProperty(exports, '__esModule', { value: true });
+function _interopRequireWildcard(obj) {
+  if (obj && obj.__esModule) {
+    return obj;
+  } else {
+    var newObj = {};
+    if (obj != null) {
+      for (var key in obj) {
+        if (Object.prototype.hasOwnProperty.call(obj, key)) {
+          newObj[key] = obj[key];
+        }
+      }
+    }
+    newObj.default = obj;
+    return newObj;
+  }
+}
+exports.getKeyByValue =
+  exports.fetchTokenContractExchangeRates =
+  exports.reduceInBatchesSerially =
+  exports.divideIntoBatches =
+  exports.ethersBigNumberToBN =
+  exports.addUrlProtocolPrefix =
+  exports.getFormattedIpfsUrl =
+  exports.getIpfsCIDv1AndPath =
+  exports.removeIpfsProtocolPrefix =
+  exports.isTokenListSupportedForNetwork =
+  exports.isTokenDetectionSupportedForNetwork =
+  exports.SupportedStakedBalanceNetworks =
+  exports.SupportedTokenDetectionNetworks =
+  exports.formatIconUrlWithProxy =
+  exports.formatAggregatorNames =
+  exports.hasNewCollectionFields =
+  exports.compareNftMetadata =
+  exports.TOKEN_PRICES_BATCH_SIZE =
+    void 0;
+const controller_utils_1 = require('@metamask/controller-utils');
+const utils_1 = require('@metamask/utils');
+const bn_js_1 = __importDefault(require('bn.js'));
 /**
  * The maximum number of token addresses that should be sent to the Price API in
  * a single request.
@@ -22,25 +58,25 @@ exports.TOKEN_PRICES_BATCH_SIZE = 30;
  * @returns Whether there are differences.
  */
 function compareNftMetadata(newNftMetadata, nft) {
-    const keys = [
-        'image',
-        'backgroundColor',
-        'imagePreview',
-        'imageThumbnail',
-        'imageOriginal',
-        'animation',
-        'animationOriginal',
-        'externalLink',
-        'tokenURI',
-        'chainId',
-    ];
-    const differentValues = keys.reduce((value, key) => {
-        if (newNftMetadata[key] && newNftMetadata[key] !== nft[key]) {
-            return value + 1;
-        }
-        return value;
-    }, 0);
-    return differentValues > 0;
+  const keys = [
+    'image',
+    'backgroundColor',
+    'imagePreview',
+    'imageThumbnail',
+    'imageOriginal',
+    'animation',
+    'animationOriginal',
+    'externalLink',
+    'tokenURI',
+    'chainId',
+  ];
+  const differentValues = keys.reduce((value, key) => {
+    if (newNftMetadata[key] && newNftMetadata[key] !== nft[key]) {
+      return value + 1;
+    }
+    return value;
+  }, 0);
+  return differentValues > 0;
 }
 exports.compareNftMetadata = compareNftMetadata;
 /**
@@ -50,38 +86,38 @@ exports.compareNftMetadata = compareNftMetadata;
  * @returns Whether the existing nft object has all the new keys from the new Nft metadata object
  */
 function hasNewCollectionFields(newNftMetadata, nft) {
-    const keysNewNftMetadata = Object.keys(newNftMetadata.collection ?? {});
-    const keysExistingNft = new Set(Object.keys(nft.collection ?? {}));
-    return keysNewNftMetadata.some((key) => !keysExistingNft.has(key));
+  const keysNewNftMetadata = Object.keys(newNftMetadata.collection ?? {});
+  const keysExistingNft = new Set(Object.keys(nft.collection ?? {}));
+  return keysNewNftMetadata.some((key) => !keysExistingNft.has(key));
 }
 exports.hasNewCollectionFields = hasNewCollectionFields;
 const aggregatorNameByKey = {
-    aave: 'Aave',
-    bancor: 'Bancor',
-    cmc: 'CMC',
-    cryptocom: 'Crypto.com',
-    coinGecko: 'CoinGecko',
-    oneInch: '1inch',
-    paraswap: 'Paraswap',
-    pmm: 'PMM',
-    zapper: 'Zapper',
-    zerion: 'Zerion',
-    zeroEx: '0x',
-    synthetix: 'Synthetix',
-    yearn: 'Yearn',
-    apeswap: 'ApeSwap',
-    binanceDex: 'BinanceDex',
-    pancakeTop100: 'PancakeTop100',
-    pancakeExtended: 'PancakeExtended',
-    balancer: 'Balancer',
-    quickswap: 'QuickSwap',
-    matcha: 'Matcha',
-    pangolinDex: 'PangolinDex',
-    pangolinDexStableCoin: 'PangolinDexStableCoin',
-    pangolinDexAvaxBridge: 'PangolinDexAvaxBridge',
-    traderJoe: 'TraderJoe',
-    airswapLight: 'AirswapLight',
-    kleros: 'Kleros',
+  aave: 'Aave',
+  bancor: 'Bancor',
+  cmc: 'CMC',
+  cryptocom: 'Crypto.com',
+  coinGecko: 'CoinGecko',
+  oneInch: '1inch',
+  paraswap: 'Paraswap',
+  pmm: 'PMM',
+  zapper: 'Zapper',
+  zerion: 'Zerion',
+  zeroEx: '0x',
+  synthetix: 'Synthetix',
+  yearn: 'Yearn',
+  apeswap: 'ApeSwap',
+  binanceDex: 'BinanceDex',
+  pancakeTop100: 'PancakeTop100',
+  pancakeExtended: 'PancakeExtended',
+  balancer: 'Balancer',
+  quickswap: 'QuickSwap',
+  matcha: 'Matcha',
+  pangolinDex: 'PangolinDex',
+  pangolinDexStableCoin: 'PangolinDexStableCoin',
+  pangolinDexAvaxBridge: 'PangolinDexAvaxBridge',
+  traderJoe: 'TraderJoe',
+  airswapLight: 'AirswapLight',
+  kleros: 'Kleros',
 };
 /**
  * Formats aggregator names to presentable format.
@@ -90,8 +126,11 @@ const aggregatorNameByKey = {
  * @returns Formatted aggregator names.
  */
 const formatAggregatorNames = (aggregators) => {
-    return aggregators.map((key) => aggregatorNameByKey[key] ||
-        `${key[0].toUpperCase()}${key.substring(1, key.length)}`);
+  return aggregators.map(
+    (key) =>
+      aggregatorNameByKey[key] ||
+      `${key[0].toUpperCase()}${key.substring(1, key.length)}`
+  );
 };
 exports.formatAggregatorNames = formatAggregatorNames;
 /**
@@ -102,11 +141,13 @@ exports.formatAggregatorNames = formatAggregatorNames;
  * @param params.tokenAddress - Address of token in mixed or lowercase.
  * @returns Formatted image url
  */
-const formatIconUrlWithProxy = ({ chainId, tokenAddress, }) => {
-    const chainIdDecimal = (0, controller_utils_1.convertHexToDecimal)(chainId).toString();
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
-    return `https://static.cx.metamask.io/api/v1/tokenIcons/${chainIdDecimal}/${tokenAddress.toLowerCase()}.png`;
+const formatIconUrlWithProxy = ({ chainId, tokenAddress }) => {
+  const chainIdDecimal = (0, controller_utils_1.convertHexToDecimal)(
+    chainId
+  ).toString();
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
+  return `https://static.cx.metamask.io/api/v1/tokenIcons/${chainIdDecimal}/${tokenAddress.toLowerCase()}.png`;
 };
 exports.formatIconUrlWithProxy = formatIconUrlWithProxy;
 /**
@@ -114,73 +155,81 @@ exports.formatIconUrlWithProxy = formatIconUrlWithProxy;
  */
 var SupportedTokenDetectionNetworks;
 (function (SupportedTokenDetectionNetworks) {
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["mainnet"] = "0x1";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["bsc"] = "0x38";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["polygon"] = "0x89";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["avax"] = "0xa86a";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["aurora"] = "0x4e454152";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["linea_goerli"] = "0xe704";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["linea_mainnet"] = "0xe708";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["arbitrum"] = "0xa4b1";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["optimism"] = "0xa";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["base"] = "0x2105";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["zksync"] = "0x144";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["cronos"] = "0x19";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["celo"] = "0xa4ec";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["gnosis"] = "0x64";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["fantom"] = "0xfa";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["polygon_zkevm"] = "0x44d";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["moonbeam"] = "0x504";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedTokenDetectionNetworks["moonriver"] = "0x505";
-})(SupportedTokenDetectionNetworks || (exports.SupportedTokenDetectionNetworks = SupportedTokenDetectionNetworks = {}));
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['mainnet'] = '0x1';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['bsc'] = '0x38';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['polygon'] = '0x89';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['avax'] = '0xa86a';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['aurora'] = '0x4e454152';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['linea_goerli'] = '0xe704';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['linea_mainnet'] = '0xe708';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['arbitrum'] = '0xa4b1';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['optimism'] = '0xa';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['base'] = '0x2105';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['zksync'] = '0x144';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['cronos'] = '0x19';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['celo'] = '0xa4ec';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['gnosis'] = '0x64';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['fantom'] = '0xfa';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['polygon_zkevm'] = '0x44d';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['moonbeam'] = '0x504';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedTokenDetectionNetworks['moonriver'] = '0x505';
+})(
+  SupportedTokenDetectionNetworks ||
+    (exports.SupportedTokenDetectionNetworks = SupportedTokenDetectionNetworks =
+      {})
+);
 /**
  * Networks where staked balance is supported - Values are in hex format
  */
 var SupportedStakedBalanceNetworks;
 (function (SupportedStakedBalanceNetworks) {
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedStakedBalanceNetworks["mainnet"] = "0x1";
-    // TODO: Either fix this lint violation or explain why it's necessary to ignore.
-    // eslint-disable-next-line @typescript-eslint/naming-convention
-    SupportedStakedBalanceNetworks["holesky"] = "0x4268";
-})(SupportedStakedBalanceNetworks || (exports.SupportedStakedBalanceNetworks = SupportedStakedBalanceNetworks = {}));
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedStakedBalanceNetworks['mainnet'] = '0x1';
+  // TODO: Either fix this lint violation or explain why it's necessary to ignore.
+  // eslint-disable-next-line @typescript-eslint/naming-convention
+  SupportedStakedBalanceNetworks['holesky'] = '0x4268';
+})(
+  SupportedStakedBalanceNetworks ||
+    (exports.SupportedStakedBalanceNetworks = SupportedStakedBalanceNetworks =
+      {})
+);
 /**
  * Check if token detection is enabled for certain networks.
  *
@@ -188,9 +237,10 @@ var SupportedStakedBalanceNetworks;
  * @returns Whether the current network supports token detection
  */
 function isTokenDetectionSupportedForNetwork(chainId) {
-    return Object.values(SupportedTokenDetectionNetworks).includes(chainId);
+  return Object.values(SupportedTokenDetectionNetworks).includes(chainId);
 }
-exports.isTokenDetectionSupportedForNetwork = isTokenDetectionSupportedForNetwork;
+exports.isTokenDetectionSupportedForNetwork =
+  isTokenDetectionSupportedForNetwork;
 /**
  * Check if token list polling is enabled for a given network.
  * Currently this method is used to support e2e testing for consumers of this package.
@@ -199,7 +249,7 @@ exports.isTokenDetectionSupportedForNetwork = isTokenDetectionSupportedForNetwor
  * @returns Whether the current network supports tokenlists
  */
 function isTokenListSupportedForNetwork(chainId) {
-    return isTokenDetectionSupportedForNetwork(chainId);
+  return isTokenDetectionSupportedForNetwork(chainId);
 }
 exports.isTokenListSupportedForNetwork = isTokenListSupportedForNetwork;
 /**
@@ -210,14 +260,13 @@ exports.isTokenListSupportedForNetwork = isTokenListSupportedForNetwork;
  * @throws Will throw if the url passed is not IPFS.
  */
 function removeIpfsProtocolPrefix(ipfsUrl) {
-    if (ipfsUrl.startsWith('ipfs://ipfs/')) {
-        return ipfsUrl.replace('ipfs://ipfs/', '');
-    }
-    else if (ipfsUrl.startsWith('ipfs://')) {
-        return ipfsUrl.replace('ipfs://', '');
-    }
-    // this method should not be used with non-ipfs urls (i.e. startsWith('ipfs://') === true)
-    throw new Error('this method should not be used with non ipfs urls');
+  if (ipfsUrl.startsWith('ipfs://ipfs/')) {
+    return ipfsUrl.replace('ipfs://ipfs/', '');
+  } else if (ipfsUrl.startsWith('ipfs://')) {
+    return ipfsUrl.replace('ipfs://', '');
+  }
+  // this method should not be used with non-ipfs urls (i.e. startsWith('ipfs://') === true)
+  throw new Error('this method should not be used with non ipfs urls');
 }
 exports.removeIpfsProtocolPrefix = removeIpfsProtocolPrefix;
 /**
@@ -228,19 +277,19 @@ exports.removeIpfsProtocolPrefix = removeIpfsProtocolPrefix;
  * @throws Will throw if the url passed is not ipfs.
  */
 async function getIpfsCIDv1AndPath(ipfsUrl) {
-    const url = removeIpfsProtocolPrefix(ipfsUrl);
-    // check if there is a path
-    // (CID is everything preceding first forward slash, path is everything after)
-    const index = url.indexOf('/');
-    const cid = index !== -1 ? url.substring(0, index) : url;
-    const path = index !== -1 ? url.substring(index) : undefined;
-    const { CID } = await import("multiformats");
-    // We want to ensure that the CID is v1 (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats)
-    // because most cid v0s appear to be incompatible with IPFS subdomains
-    return {
-        cid: CID.parse(cid).toV1().toString(),
-        path,
-    };
+  const url = removeIpfsProtocolPrefix(ipfsUrl);
+  // check if there is a path
+  // (CID is everything preceding first forward slash, path is everything after)
+  const index = url.indexOf('/');
+  const cid = index !== -1 ? url.substring(0, index) : url;
+  const path = index !== -1 ? url.substring(index) : undefined;
+  const { CID } = _interopRequireWildcard(require('multiformats'));
+  // We want to ensure that the CID is v1 (https://docs.ipfs.io/concepts/content-addressing/#identifier-formats)
+  // because most cid v0s appear to be incompatible with IPFS subdomains
+  return {
+    cid: CID.parse(cid).toV1().toString(),
+    path,
+  };
 }
 exports.getIpfsCIDv1AndPath = getIpfsCIDv1AndPath;
 /**
@@ -252,13 +301,13 @@ exports.getIpfsCIDv1AndPath = getIpfsCIDv1AndPath;
  * @returns A formatted URL, with the user's preferred IPFS gateway and format (subdomain or not), pointing to an asset hosted on IPFS.
  */
 async function getFormattedIpfsUrl(ipfsGateway, ipfsUrl, subdomainSupported) {
-    const { host, protocol, origin } = new URL(addUrlProtocolPrefix(ipfsGateway));
-    if (subdomainSupported) {
-        const { cid, path } = await getIpfsCIDv1AndPath(ipfsUrl);
-        return `${protocol}//${cid}.ipfs.${host}${path ?? ''}`;
-    }
-    const cidAndPath = removeIpfsProtocolPrefix(ipfsUrl);
-    return `${origin}/ipfs/${cidAndPath}`;
+  const { host, protocol, origin } = new URL(addUrlProtocolPrefix(ipfsGateway));
+  if (subdomainSupported) {
+    const { cid, path } = await getIpfsCIDv1AndPath(ipfsUrl);
+    return `${protocol}//${cid}.ipfs.${host}${path ?? ''}`;
+  }
+  const cidAndPath = removeIpfsProtocolPrefix(ipfsUrl);
+  return `${origin}/ipfs/${cidAndPath}`;
 }
 exports.getFormattedIpfsUrl = getFormattedIpfsUrl;
 /**
@@ -268,10 +317,10 @@ exports.getFormattedIpfsUrl = getFormattedIpfsUrl;
  * @returns A URL with a https:// prepended.
  */
 function addUrlProtocolPrefix(urlString) {
-    if (!urlString.match(/(^http:\/\/)|(^https:\/\/)/u)) {
-        return `https://${urlString}`;
-    }
-    return urlString;
+  if (!urlString.match(/(^http:\/\/)|(^https:\/\/)/u)) {
+    return `https://${urlString}`;
+  }
+  return urlString;
 }
 exports.addUrlProtocolPrefix = addUrlProtocolPrefix;
 /**
@@ -281,7 +330,10 @@ exports.addUrlProtocolPrefix = addUrlProtocolPrefix;
  * @returns A BN object.
  */
 function ethersBigNumberToBN(bigNumber) {
-    return new bn_js_1.default((0, utils_1.remove0x)(bigNumber.toHexString()), 'hex');
+  return new bn_js_1.default(
+    (0, utils_1.remove0x)(bigNumber.toHexString()),
+    'hex'
+  );
 }
 exports.ethersBigNumberToBN = ethersBigNumberToBN;
 /**
@@ -294,11 +346,11 @@ exports.ethersBigNumberToBN = ethersBigNumberToBN;
  * @returns The list of batches.
  */
 function divideIntoBatches(values, { batchSize }) {
-    const batches = [];
-    for (let i = 0; i < values.length; i += batchSize) {
-        batches.push(values.slice(i, i + batchSize));
-    }
-    return batches;
+  const batches = [];
+  for (let i = 0; i < values.length; i += batchSize) {
+    batches.push(values.slice(i, i + batchSize));
+  }
+  return batches;
 }
 exports.divideIntoBatches = divideIntoBatches;
 /**
@@ -316,16 +368,21 @@ exports.divideIntoBatches = divideIntoBatches;
  * i.e., the value that will be fed into the first call of `eachBatch`.
  * @returns The built result.
  */
-async function reduceInBatchesSerially({ values, batchSize, eachBatch, initialResult, }) {
-    const batches = divideIntoBatches(values, { batchSize });
-    let workingResult = initialResult;
-    for (const [index, batch] of batches.entries()) {
-        workingResult = await eachBatch(workingResult, batch, index);
-    }
-    // There's no way around this — we have to assume that in the end, the result
-    // matches the intended type.
-    const finalResult = workingResult;
-    return finalResult;
+async function reduceInBatchesSerially({
+  values,
+  batchSize,
+  eachBatch,
+  initialResult,
+}) {
+  const batches = divideIntoBatches(values, { batchSize });
+  let workingResult = initialResult;
+  for (const [index, batch] of batches.entries()) {
+    workingResult = await eachBatch(workingResult, batch, index);
+  }
+  // There's no way around this — we have to assume that in the end, the result
+  // matches the intended type.
+  const finalResult = workingResult;
+  return finalResult;
 }
 exports.reduceInBatchesSerially = reduceInBatchesSerially;
 /**
@@ -338,34 +395,46 @@ exports.reduceInBatchesSerially = reduceInBatchesSerially;
  * @param args.chainId - The chainId of the tokens.
  * @returns The prices for the requested tokens.
  */
-async function fetchTokenContractExchangeRates({ tokenPricesService, nativeCurrency, tokenAddresses, chainId, }) {
-    const isChainIdSupported = tokenPricesService.validateChainIdSupported(chainId);
-    const isCurrencySupported = tokenPricesService.validateCurrencySupported(nativeCurrency);
-    if (!isChainIdSupported || !isCurrencySupported) {
-        return {};
-    }
-    const tokenPricesByTokenAddress = await reduceInBatchesSerially({
-        values: [...tokenAddresses].sort(),
-        batchSize: exports.TOKEN_PRICES_BATCH_SIZE,
-        eachBatch: async (allTokenPricesByTokenAddress, batch) => {
-            const tokenPricesByTokenAddressForBatch = await tokenPricesService.fetchTokenPrices({
-                tokenAddresses: batch,
-                chainId,
-                currency: nativeCurrency,
-            });
-            return {
-                ...allTokenPricesByTokenAddress,
-                ...tokenPricesByTokenAddressForBatch,
-            };
-        },
-        initialResult: {},
-    });
-    return Object.entries(tokenPricesByTokenAddress).reduce((obj, [tokenAddress, tokenPrice]) => {
-        return {
-            ...obj,
-            [(0, controller_utils_1.toChecksumHexAddress)(tokenAddress)]: tokenPrice?.price,
-        };
-    }, {});
+async function fetchTokenContractExchangeRates({
+  tokenPricesService,
+  nativeCurrency,
+  tokenAddresses,
+  chainId,
+}) {
+  const isChainIdSupported =
+    tokenPricesService.validateChainIdSupported(chainId);
+  const isCurrencySupported =
+    tokenPricesService.validateCurrencySupported(nativeCurrency);
+  if (!isChainIdSupported || !isCurrencySupported) {
+    return {};
+  }
+  const tokenPricesByTokenAddress = await reduceInBatchesSerially({
+    values: [...tokenAddresses].sort(),
+    batchSize: exports.TOKEN_PRICES_BATCH_SIZE,
+    eachBatch: async (allTokenPricesByTokenAddress, batch) => {
+      const tokenPricesByTokenAddressForBatch =
+        await tokenPricesService.fetchTokenPrices({
+          tokenAddresses: batch,
+          chainId,
+          currency: nativeCurrency,
+        });
+      return {
+        ...allTokenPricesByTokenAddress,
+        ...tokenPricesByTokenAddressForBatch,
+      };
+    },
+    initialResult: {},
+  });
+  return Object.entries(tokenPricesByTokenAddress).reduce(
+    (obj, [tokenAddress, tokenPrice]) => {
+      return {
+        ...obj,
+        [(0, controller_utils_1.toChecksumHexAddress)(tokenAddress)]:
+          tokenPrice?.price,
+      };
+    },
+    {}
+  );
 }
 exports.fetchTokenContractExchangeRates = fetchTokenContractExchangeRates;
 /**
@@ -375,12 +444,12 @@ exports.fetchTokenContractExchangeRates = fetchTokenContractExchangeRates;
  * @returns returns key that corresponds to the value
  */
 function getKeyByValue(map, value) {
-    for (const [key, val] of map.entries()) {
-        if (val === value) {
-            return key;
-        }
+  for (const [key, val] of map.entries()) {
+    if (val === value) {
+      return key;
     }
-    return null; // Return null if no match is found
+  }
+  return null; // Return null if no match is found
 }
 exports.getKeyByValue = getKeyByValue;
 //# sourceMappingURL=assetsUtil.cjs.map
diff --git a/dist/index.cjs b/dist/index.cjs
index fb237a6bd5bfbc6f6e7d598dcda1af9568ffd873..27b39cd52d845d0f961b99cbb0c1ebc248859184 100644
--- a/dist/index.cjs
+++ b/dist/index.cjs
@@ -14,7 +14,7 @@ var __exportStar = (this && this.__exportStar) || function(m, exports) {
     for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.TokenSearchDiscoveryDataController = exports.getDefaultMultichainAssetsRatesControllerState = exports.MultichainAssetsRatesController = exports.getDefaultMultichainAssetsControllerState = exports.MultichainAssetsController = exports.MultichainBalancesController = exports.Cryptocurrency = exports.RatesController = exports.getNativeTokenAddress = exports.SUPPORTED_CHAIN_IDS = exports.CodefiTokenPricesServiceV2 = exports.getKeyByValue = exports.fetchTokenContractExchangeRates = exports.getFormattedIpfsUrl = exports.formatIconUrlWithProxy = exports.isTokenDetectionSupportedForNetwork = exports.TokensController = exports.TokenRatesController = exports.getDefaultTokenRatesControllerState = exports.TokenListController = exports.TokenDetectionController = exports.TokenBalancesController = exports.NftDetectionController = exports.NftController = exports.getDefaultNftControllerState = exports.AssetsContractController = exports.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID = exports.AccountTrackerController = void 0;
+exports.DeFiPositionsController = exports.TokenSearchDiscoveryDataController = exports.getDefaultMultichainAssetsRatesControllerState = exports.MultichainAssetsRatesController = exports.getDefaultMultichainAssetsControllerState = exports.MultichainAssetsController = exports.MultichainBalancesController = exports.Cryptocurrency = exports.RatesController = exports.getNativeTokenAddress = exports.SUPPORTED_CHAIN_IDS = exports.CodefiTokenPricesServiceV2 = exports.getKeyByValue = exports.fetchTokenContractExchangeRates = exports.getFormattedIpfsUrl = exports.formatIconUrlWithProxy = exports.isTokenDetectionSupportedForNetwork = exports.TokensController = exports.TokenRatesController = exports.getDefaultTokenRatesControllerState = exports.TokenListController = exports.TokenDetectionController = exports.TokenBalancesController = exports.NftDetectionController = exports.NftController = exports.getDefaultNftControllerState = exports.AssetsContractController = exports.SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID = exports.AccountTrackerController = void 0;
 var AccountTrackerController_1 = require("./AccountTrackerController.cjs");
 Object.defineProperty(exports, "AccountTrackerController", { enumerable: true, get: function () { return AccountTrackerController_1.AccountTrackerController; } });
 var AssetsContractController_1 = require("./AssetsContractController.cjs");
@@ -60,4 +60,6 @@ Object.defineProperty(exports, "MultichainAssetsRatesController", { enumerable:
 Object.defineProperty(exports, "getDefaultMultichainAssetsRatesControllerState", { enumerable: true, get: function () { return MultichainAssetsRatesController_1.getDefaultMultichainAssetsRatesControllerState; } });
 var TokenSearchDiscoveryDataController_1 = require("./TokenSearchDiscoveryDataController/index.cjs");
 Object.defineProperty(exports, "TokenSearchDiscoveryDataController", { enumerable: true, get: function () { return TokenSearchDiscoveryDataController_1.TokenSearchDiscoveryDataController; } });
+var DeFiPositionsController_1 = require("./DeFiPositionsController/DeFiPositionsController.cjs");
+Object.defineProperty(exports, "DeFiPositionsController", { enumerable: true, get: function () { return DeFiPositionsController_1.DeFiPositionsController; } });
 //# sourceMappingURL=index.cjs.map
\ No newline at end of file
diff --git a/dist/index.cjs.map b/dist/index.cjs.map
index 2c75f84d5ebbe3e4c6ec54a83683753f81a7c267..e30d50dd0251aafa0272cf6b4cd430fc88e106da 100644
--- a/dist/index.cjs.map
+++ b/dist/index.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASA,2EAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AAuBjC,2EAGoC;AAFlC,mJAAA,uCAAuC,OAAA;AACvC,oIAAA,wBAAwB,OAAA;AAE1B,+DAAyC;AAYzC,qDAA8E;AAArE,6HAAA,4BAA4B,OAAA;AAAE,8GAAA,aAAa,OAAA;AAwBpD,uEAAkE;AAAzD,gIAAA,sBAAsB,OAAA;AAS/B,yEAAoE;AAA3D,kIAAA,uBAAuB,OAAA;AAQhC,2EAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AAWjC,iEAA4D;AAAnD,0HAAA,mBAAmB,OAAA;AAa5B,mEAGgC;AAF9B,2IAAA,mCAAmC,OAAA;AACnC,4HAAA,oBAAoB,OAAA;AAWtB,2DAAsD;AAA7C,oHAAA,gBAAgB,OAAA;AACzB,+CAMsB;AALpB,iIAAA,mCAAmC,OAAA;AACnC,oHAAA,sBAAsB,OAAA;AACtB,iHAAA,mBAAmB,OAAA;AACnB,6HAAA,+BAA+B,OAAA;AAC/B,2GAAA,aAAa,OAAA;AAEf,yEAIgC;AAH9B,kIAAA,0BAA0B,OAAA;AAC1B,2HAAA,mBAAmB,OAAA;AACnB,6HAAA,qBAAqB,OAAA;AAEvB,+DAAoE;AAA3D,kHAAA,eAAe,OAAA;AAAE,iHAAA,cAAc,OAAA;AAWxC,yFAA8E;AAArE,4IAAA,4BAA4B,OAAA;AAUrC,qFAGsC;AAFpC,wIAAA,0BAA0B,OAAA;AAC1B,uJAAA,yCAAyC,OAAA;AAY3C,+FAG2C;AAFzC,kJAAA,+BAA+B,OAAA;AAC/B,iKAAA,8CAA8C,OAAA;AAWhD,qGAA0F;AAAjF,wJAAA,kCAAkC,OAAA","sourcesContent":["export type {\n  AccountInformation,\n  AccountTrackerControllerMessenger,\n  AccountTrackerControllerState,\n  AccountTrackerControllerActions,\n  AccountTrackerControllerGetStateAction,\n  AccountTrackerControllerStateChangeEvent,\n  AccountTrackerControllerEvents,\n} from './AccountTrackerController';\nexport { AccountTrackerController } from './AccountTrackerController';\nexport type {\n  AssetsContractControllerActions,\n  AssetsContractControllerEvents,\n  AssetsContractControllerGetERC20StandardAction,\n  AssetsContractControllerGetERC721StandardAction,\n  AssetsContractControllerGetERC1155StandardAction,\n  AssetsContractControllerGetERC20BalanceOfAction,\n  AssetsContractControllerGetERC20TokenDecimalsAction,\n  AssetsContractControllerGetERC20TokenNameAction,\n  AssetsContractControllerGetERC721NftTokenIdAction,\n  AssetsContractControllerGetERC721TokenURIAction,\n  AssetsContractControllerGetERC721AssetNameAction,\n  AssetsContractControllerGetERC721AssetSymbolAction,\n  AssetsContractControllerGetERC721OwnerOfAction,\n  AssetsContractControllerGetERC1155TokenURIAction,\n  AssetsContractControllerGetERC1155BalanceOfAction,\n  AssetsContractControllerTransferSingleERC1155Action,\n  AssetsContractControllerGetTokenStandardAndDetailsAction,\n  AssetsContractControllerGetBalancesInSingleCallAction,\n  AssetsContractControllerMessenger,\n  BalanceMap,\n} from './AssetsContractController';\nexport {\n  SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID,\n  AssetsContractController,\n} from './AssetsContractController';\nexport * from './CurrencyRateController';\nexport type {\n  NftControllerState,\n  NftControllerMessenger,\n  NftControllerActions,\n  NftControllerGetStateAction,\n  NftControllerEvents,\n  NftControllerStateChangeEvent,\n  Nft,\n  NftContract,\n  NftMetadata,\n} from './NftController';\nexport { getDefaultNftControllerState, NftController } from './NftController';\nexport type {\n  NftDetectionControllerMessenger,\n  ApiNft,\n  ApiNftContract,\n  ApiNftLastSale,\n  ApiNftCreator,\n  ReservoirResponse,\n  TokensResponse,\n  BlockaidResultType,\n  Blockaid,\n  Market,\n  TokenResponse,\n  TopBid,\n  LastSale,\n  FeeBreakdown,\n  Attributes,\n  Collection,\n  Royalties,\n  Ownership,\n  FloorAsk,\n  Price,\n  Metadata,\n} from './NftDetectionController';\nexport { NftDetectionController } from './NftDetectionController';\nexport type {\n  TokenBalancesControllerMessenger,\n  TokenBalancesControllerActions,\n  TokenBalancesControllerGetStateAction,\n  TokenBalancesControllerEvents,\n  TokenBalancesControllerStateChangeEvent,\n  TokenBalancesControllerState,\n} from './TokenBalancesController';\nexport { TokenBalancesController } from './TokenBalancesController';\nexport type {\n  TokenDetectionControllerMessenger,\n  TokenDetectionControllerActions,\n  TokenDetectionControllerGetStateAction,\n  TokenDetectionControllerEvents,\n  TokenDetectionControllerStateChangeEvent,\n} from './TokenDetectionController';\nexport { TokenDetectionController } from './TokenDetectionController';\nexport type {\n  TokenListState,\n  TokenListToken,\n  TokenListMap,\n  TokenListStateChange,\n  TokenListControllerEvents,\n  GetTokenListState,\n  TokenListControllerActions,\n  TokenListControllerMessenger,\n} from './TokenListController';\nexport { TokenListController } from './TokenListController';\nexport type {\n  ContractExchangeRates,\n  ContractMarketData,\n  Token,\n  TokenRatesControllerActions,\n  TokenRatesControllerEvents,\n  TokenRatesControllerGetStateAction,\n  TokenRatesControllerMessenger,\n  TokenRatesControllerState,\n  TokenRatesControllerStateChangeEvent,\n  MarketDataDetails,\n} from './TokenRatesController';\nexport {\n  getDefaultTokenRatesControllerState,\n  TokenRatesController,\n} from './TokenRatesController';\nexport type {\n  TokensControllerState,\n  TokensControllerActions,\n  TokensControllerGetStateAction,\n  TokensControllerAddDetectedTokensAction,\n  TokensControllerEvents,\n  TokensControllerStateChangeEvent,\n  TokensControllerMessenger,\n} from './TokensController';\nexport { TokensController } from './TokensController';\nexport {\n  isTokenDetectionSupportedForNetwork,\n  formatIconUrlWithProxy,\n  getFormattedIpfsUrl,\n  fetchTokenContractExchangeRates,\n  getKeyByValue,\n} from './assetsUtil';\nexport {\n  CodefiTokenPricesServiceV2,\n  SUPPORTED_CHAIN_IDS,\n  getNativeTokenAddress,\n} from './token-prices-service';\nexport { RatesController, Cryptocurrency } from './RatesController';\nexport type {\n  RatesControllerState,\n  RatesControllerEvents,\n  RatesControllerActions,\n  RatesControllerMessenger,\n  RatesControllerGetStateAction,\n  RatesControllerStateChangeEvent,\n  RatesControllerPollingStartedEvent,\n  RatesControllerPollingStoppedEvent,\n} from './RatesController';\nexport { MultichainBalancesController } from './MultichainBalancesController';\nexport type {\n  MultichainBalancesControllerState,\n  MultichainBalancesControllerGetStateAction,\n  MultichainBalancesControllerStateChange,\n  MultichainBalancesControllerActions,\n  MultichainBalancesControllerEvents,\n  MultichainBalancesControllerMessenger,\n} from './MultichainBalancesController';\n\nexport {\n  MultichainAssetsController,\n  getDefaultMultichainAssetsControllerState,\n} from './MultichainAssetsController';\n\nexport type {\n  MultichainAssetsControllerState,\n  MultichainAssetsControllerGetStateAction,\n  MultichainAssetsControllerStateChangeEvent,\n  MultichainAssetsControllerActions,\n  MultichainAssetsControllerEvents,\n  MultichainAssetsControllerMessenger,\n} from './MultichainAssetsController';\n\nexport {\n  MultichainAssetsRatesController,\n  getDefaultMultichainAssetsRatesControllerState,\n} from './MultichainAssetsRatesController';\n\nexport type {\n  MultichainAssetsRatesControllerState,\n  MultichainAssetsRatesControllerActions,\n  MultichainAssetsRatesControllerEvents,\n  MultichainAssetsRatesControllerGetStateAction,\n  MultichainAssetsRatesControllerStateChange,\n  MultichainAssetsRatesControllerMessenger,\n} from './MultichainAssetsRatesController';\nexport { TokenSearchDiscoveryDataController } from './TokenSearchDiscoveryDataController';\nexport type {\n  TokenDisplayData,\n  TokenSearchDiscoveryDataControllerState,\n  TokenSearchDiscoveryDataControllerGetStateAction,\n  TokenSearchDiscoveryDataControllerEvents,\n  TokenSearchDiscoveryDataControllerStateChangeEvent,\n  TokenSearchDiscoveryDataControllerActions,\n  TokenSearchDiscoveryDataControllerMessenger,\n} from './TokenSearchDiscoveryDataController';\n"]}
\ No newline at end of file
+{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASA,2EAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AAuBjC,2EAGoC;AAFlC,mJAAA,uCAAuC,OAAA;AACvC,oIAAA,wBAAwB,OAAA;AAE1B,+DAAyC;AAYzC,qDAA8E;AAArE,6HAAA,4BAA4B,OAAA;AAAE,8GAAA,aAAa,OAAA;AAwBpD,uEAAkE;AAAzD,gIAAA,sBAAsB,OAAA;AAS/B,yEAAoE;AAA3D,kIAAA,uBAAuB,OAAA;AAQhC,2EAAsE;AAA7D,oIAAA,wBAAwB,OAAA;AAWjC,iEAA4D;AAAnD,0HAAA,mBAAmB,OAAA;AAa5B,mEAGgC;AAF9B,2IAAA,mCAAmC,OAAA;AACnC,4HAAA,oBAAoB,OAAA;AAWtB,2DAAsD;AAA7C,oHAAA,gBAAgB,OAAA;AACzB,+CAMsB;AALpB,iIAAA,mCAAmC,OAAA;AACnC,oHAAA,sBAAsB,OAAA;AACtB,iHAAA,mBAAmB,OAAA;AACnB,6HAAA,+BAA+B,OAAA;AAC/B,2GAAA,aAAa,OAAA;AAEf,yEAIgC;AAH9B,kIAAA,0BAA0B,OAAA;AAC1B,2HAAA,mBAAmB,OAAA;AACnB,6HAAA,qBAAqB,OAAA;AAEvB,+DAAoE;AAA3D,kHAAA,eAAe,OAAA;AAAE,iHAAA,cAAc,OAAA;AAWxC,yFAA8E;AAArE,4IAAA,4BAA4B,OAAA;AAUrC,qFAGsC;AAFpC,wIAAA,0BAA0B,OAAA;AAC1B,uJAAA,yCAAyC,OAAA;AAY3C,+FAG2C;AAFzC,kJAAA,+BAA+B,OAAA;AAC/B,iKAAA,8CAA8C,OAAA;AAWhD,qGAA0F;AAAjF,wJAAA,kCAAkC,OAAA;AAU3C,iGAA4F;AAAnF,kIAAA,uBAAuB,OAAA","sourcesContent":["export type {\n  AccountInformation,\n  AccountTrackerControllerMessenger,\n  AccountTrackerControllerState,\n  AccountTrackerControllerActions,\n  AccountTrackerControllerGetStateAction,\n  AccountTrackerControllerStateChangeEvent,\n  AccountTrackerControllerEvents,\n} from './AccountTrackerController';\nexport { AccountTrackerController } from './AccountTrackerController';\nexport type {\n  AssetsContractControllerActions,\n  AssetsContractControllerEvents,\n  AssetsContractControllerGetERC20StandardAction,\n  AssetsContractControllerGetERC721StandardAction,\n  AssetsContractControllerGetERC1155StandardAction,\n  AssetsContractControllerGetERC20BalanceOfAction,\n  AssetsContractControllerGetERC20TokenDecimalsAction,\n  AssetsContractControllerGetERC20TokenNameAction,\n  AssetsContractControllerGetERC721NftTokenIdAction,\n  AssetsContractControllerGetERC721TokenURIAction,\n  AssetsContractControllerGetERC721AssetNameAction,\n  AssetsContractControllerGetERC721AssetSymbolAction,\n  AssetsContractControllerGetERC721OwnerOfAction,\n  AssetsContractControllerGetERC1155TokenURIAction,\n  AssetsContractControllerGetERC1155BalanceOfAction,\n  AssetsContractControllerTransferSingleERC1155Action,\n  AssetsContractControllerGetTokenStandardAndDetailsAction,\n  AssetsContractControllerGetBalancesInSingleCallAction,\n  AssetsContractControllerMessenger,\n  BalanceMap,\n} from './AssetsContractController';\nexport {\n  SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID,\n  AssetsContractController,\n} from './AssetsContractController';\nexport * from './CurrencyRateController';\nexport type {\n  NftControllerState,\n  NftControllerMessenger,\n  NftControllerActions,\n  NftControllerGetStateAction,\n  NftControllerEvents,\n  NftControllerStateChangeEvent,\n  Nft,\n  NftContract,\n  NftMetadata,\n} from './NftController';\nexport { getDefaultNftControllerState, NftController } from './NftController';\nexport type {\n  NftDetectionControllerMessenger,\n  ApiNft,\n  ApiNftContract,\n  ApiNftLastSale,\n  ApiNftCreator,\n  ReservoirResponse,\n  TokensResponse,\n  BlockaidResultType,\n  Blockaid,\n  Market,\n  TokenResponse,\n  TopBid,\n  LastSale,\n  FeeBreakdown,\n  Attributes,\n  Collection,\n  Royalties,\n  Ownership,\n  FloorAsk,\n  Price,\n  Metadata,\n} from './NftDetectionController';\nexport { NftDetectionController } from './NftDetectionController';\nexport type {\n  TokenBalancesControllerMessenger,\n  TokenBalancesControllerActions,\n  TokenBalancesControllerGetStateAction,\n  TokenBalancesControllerEvents,\n  TokenBalancesControllerStateChangeEvent,\n  TokenBalancesControllerState,\n} from './TokenBalancesController';\nexport { TokenBalancesController } from './TokenBalancesController';\nexport type {\n  TokenDetectionControllerMessenger,\n  TokenDetectionControllerActions,\n  TokenDetectionControllerGetStateAction,\n  TokenDetectionControllerEvents,\n  TokenDetectionControllerStateChangeEvent,\n} from './TokenDetectionController';\nexport { TokenDetectionController } from './TokenDetectionController';\nexport type {\n  TokenListState,\n  TokenListToken,\n  TokenListMap,\n  TokenListStateChange,\n  TokenListControllerEvents,\n  GetTokenListState,\n  TokenListControllerActions,\n  TokenListControllerMessenger,\n} from './TokenListController';\nexport { TokenListController } from './TokenListController';\nexport type {\n  ContractExchangeRates,\n  ContractMarketData,\n  Token,\n  TokenRatesControllerActions,\n  TokenRatesControllerEvents,\n  TokenRatesControllerGetStateAction,\n  TokenRatesControllerMessenger,\n  TokenRatesControllerState,\n  TokenRatesControllerStateChangeEvent,\n  MarketDataDetails,\n} from './TokenRatesController';\nexport {\n  getDefaultTokenRatesControllerState,\n  TokenRatesController,\n} from './TokenRatesController';\nexport type {\n  TokensControllerState,\n  TokensControllerActions,\n  TokensControllerGetStateAction,\n  TokensControllerAddDetectedTokensAction,\n  TokensControllerEvents,\n  TokensControllerStateChangeEvent,\n  TokensControllerMessenger,\n} from './TokensController';\nexport { TokensController } from './TokensController';\nexport {\n  isTokenDetectionSupportedForNetwork,\n  formatIconUrlWithProxy,\n  getFormattedIpfsUrl,\n  fetchTokenContractExchangeRates,\n  getKeyByValue,\n} from './assetsUtil';\nexport {\n  CodefiTokenPricesServiceV2,\n  SUPPORTED_CHAIN_IDS,\n  getNativeTokenAddress,\n} from './token-prices-service';\nexport { RatesController, Cryptocurrency } from './RatesController';\nexport type {\n  RatesControllerState,\n  RatesControllerEvents,\n  RatesControllerActions,\n  RatesControllerMessenger,\n  RatesControllerGetStateAction,\n  RatesControllerStateChangeEvent,\n  RatesControllerPollingStartedEvent,\n  RatesControllerPollingStoppedEvent,\n} from './RatesController';\nexport { MultichainBalancesController } from './MultichainBalancesController';\nexport type {\n  MultichainBalancesControllerState,\n  MultichainBalancesControllerGetStateAction,\n  MultichainBalancesControllerStateChange,\n  MultichainBalancesControllerActions,\n  MultichainBalancesControllerEvents,\n  MultichainBalancesControllerMessenger,\n} from './MultichainBalancesController';\n\nexport {\n  MultichainAssetsController,\n  getDefaultMultichainAssetsControllerState,\n} from './MultichainAssetsController';\n\nexport type {\n  MultichainAssetsControllerState,\n  MultichainAssetsControllerGetStateAction,\n  MultichainAssetsControllerStateChangeEvent,\n  MultichainAssetsControllerActions,\n  MultichainAssetsControllerEvents,\n  MultichainAssetsControllerMessenger,\n} from './MultichainAssetsController';\n\nexport {\n  MultichainAssetsRatesController,\n  getDefaultMultichainAssetsRatesControllerState,\n} from './MultichainAssetsRatesController';\n\nexport type {\n  MultichainAssetsRatesControllerState,\n  MultichainAssetsRatesControllerActions,\n  MultichainAssetsRatesControllerEvents,\n  MultichainAssetsRatesControllerGetStateAction,\n  MultichainAssetsRatesControllerStateChange,\n  MultichainAssetsRatesControllerMessenger,\n} from './MultichainAssetsRatesController';\nexport { TokenSearchDiscoveryDataController } from './TokenSearchDiscoveryDataController';\nexport type {\n  TokenDisplayData,\n  TokenSearchDiscoveryDataControllerState,\n  TokenSearchDiscoveryDataControllerGetStateAction,\n  TokenSearchDiscoveryDataControllerEvents,\n  TokenSearchDiscoveryDataControllerStateChangeEvent,\n  TokenSearchDiscoveryDataControllerActions,\n  TokenSearchDiscoveryDataControllerMessenger,\n} from './TokenSearchDiscoveryDataController';\nexport { DeFiPositionsController } from './DeFiPositionsController/DeFiPositionsController';\nexport type {\n  DeFiPositionsControllerState,\n  DeFiPositionsControllerActions,\n  DeFiPositionsControllerEvents,\n  DeFiPositionsControllerGetStateAction,\n  DeFiPositionsControllerStateChangeEvent,\n  DeFiPositionsControllerMessenger,\n} from './DeFiPositionsController/DeFiPositionsController';\nexport type { GroupedPositions } from './DeFiPositionsController/group-positions';\n"]}
\ No newline at end of file
diff --git a/dist/index.d.cts b/dist/index.d.cts
index b6fe487ca02c3d662f8303d4501e3f65d0ba74b3..1f7893482315c72c37e4d8972800c201152b3b5a 100644
--- a/dist/index.d.cts
+++ b/dist/index.d.cts
@@ -29,4 +29,7 @@ export { MultichainAssetsRatesController, getDefaultMultichainAssetsRatesControl
 export type { MultichainAssetsRatesControllerState, MultichainAssetsRatesControllerActions, MultichainAssetsRatesControllerEvents, MultichainAssetsRatesControllerGetStateAction, MultichainAssetsRatesControllerStateChange, MultichainAssetsRatesControllerMessenger, } from "./MultichainAssetsRatesController/index.cjs";
 export { TokenSearchDiscoveryDataController } from "./TokenSearchDiscoveryDataController/index.cjs";
 export type { TokenDisplayData, TokenSearchDiscoveryDataControllerState, TokenSearchDiscoveryDataControllerGetStateAction, TokenSearchDiscoveryDataControllerEvents, TokenSearchDiscoveryDataControllerStateChangeEvent, TokenSearchDiscoveryDataControllerActions, TokenSearchDiscoveryDataControllerMessenger, } from "./TokenSearchDiscoveryDataController/index.cjs";
+export { DeFiPositionsController } from "./DeFiPositionsController/DeFiPositionsController.cjs";
+export type { DeFiPositionsControllerState, DeFiPositionsControllerActions, DeFiPositionsControllerEvents, DeFiPositionsControllerGetStateAction, DeFiPositionsControllerStateChangeEvent, DeFiPositionsControllerMessenger, } from "./DeFiPositionsController/DeFiPositionsController.cjs";
+export type { GroupedPositions } from "./DeFiPositionsController/group-positions.cjs";
 //# sourceMappingURL=index.d.cts.map
\ No newline at end of file
diff --git a/dist/index.d.cts.map b/dist/index.d.cts.map
index d9167106f50d5298b457b13d592593977a251da4..d07bd8226ffacd1f6ac3a294598f3e65d90b8cd8 100644
--- a/dist/index.d.cts.map
+++ b/dist/index.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.cts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.d.cts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/index.d.mts b/dist/index.d.mts
index 76fa4bf2d76680ff34e16b7b4cd3f7beb3db5d56..a099a4bdebbe54c023f35efcbe2e64795bcd5af0 100644
--- a/dist/index.d.mts
+++ b/dist/index.d.mts
@@ -29,4 +29,7 @@ export { MultichainAssetsRatesController, getDefaultMultichainAssetsRatesControl
 export type { MultichainAssetsRatesControllerState, MultichainAssetsRatesControllerActions, MultichainAssetsRatesControllerEvents, MultichainAssetsRatesControllerGetStateAction, MultichainAssetsRatesControllerStateChange, MultichainAssetsRatesControllerMessenger, } from "./MultichainAssetsRatesController/index.mjs";
 export { TokenSearchDiscoveryDataController } from "./TokenSearchDiscoveryDataController/index.mjs";
 export type { TokenDisplayData, TokenSearchDiscoveryDataControllerState, TokenSearchDiscoveryDataControllerGetStateAction, TokenSearchDiscoveryDataControllerEvents, TokenSearchDiscoveryDataControllerStateChangeEvent, TokenSearchDiscoveryDataControllerActions, TokenSearchDiscoveryDataControllerMessenger, } from "./TokenSearchDiscoveryDataController/index.mjs";
+export { DeFiPositionsController } from "./DeFiPositionsController/DeFiPositionsController.mjs";
+export type { DeFiPositionsControllerState, DeFiPositionsControllerActions, DeFiPositionsControllerEvents, DeFiPositionsControllerGetStateAction, DeFiPositionsControllerStateChangeEvent, DeFiPositionsControllerMessenger, } from "./DeFiPositionsController/DeFiPositionsController.mjs";
+export type { GroupedPositions } from "./DeFiPositionsController/group-positions.mjs";
 //# sourceMappingURL=index.d.mts.map
\ No newline at end of file
diff --git a/dist/index.d.mts.map b/dist/index.d.mts.map
index d165b406f0677b93ad02156a58c3f2cf2c5f4d4b..14fe1d7fbc58faa6ceefb691c900c6f8379a0fb4 100644
--- a/dist/index.d.mts.map
+++ b/dist/index.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.mts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,YAAY,EACV,kBAAkB,EAClB,iCAAiC,EACjC,6BAA6B,EAC7B,+BAA+B,EAC/B,sCAAsC,EACtC,wCAAwC,EACxC,8BAA8B,GAC/B,uCAAmC;AACpC,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AACtE,YAAY,EACV,+BAA+B,EAC/B,8BAA8B,EAC9B,8CAA8C,EAC9C,+CAA+C,EAC/C,gDAAgD,EAChD,+CAA+C,EAC/C,mDAAmD,EACnD,+CAA+C,EAC/C,iDAAiD,EACjD,+CAA+C,EAC/C,gDAAgD,EAChD,kDAAkD,EAClD,8CAA8C,EAC9C,gDAAgD,EAChD,iDAAiD,EACjD,mDAAmD,EACnD,wDAAwD,EACxD,qDAAqD,EACrD,iCAAiC,EACjC,UAAU,GACX,uCAAmC;AACpC,OAAO,EACL,uCAAuC,EACvC,wBAAwB,GACzB,uCAAmC;AACpC,6CAAyC;AACzC,YAAY,EACV,kBAAkB,EAClB,sBAAsB,EACtB,oBAAoB,EACpB,2BAA2B,EAC3B,mBAAmB,EACnB,6BAA6B,EAC7B,GAAG,EACH,WAAW,EACX,WAAW,GACZ,4BAAwB;AACzB,OAAO,EAAE,4BAA4B,EAAE,aAAa,EAAE,4BAAwB;AAC9E,YAAY,EACV,+BAA+B,EAC/B,MAAM,EACN,cAAc,EACd,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,cAAc,EACd,kBAAkB,EAClB,QAAQ,EACR,MAAM,EACN,aAAa,EACb,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,UAAU,EACV,UAAU,EACV,SAAS,EACT,SAAS,EACT,QAAQ,EACR,KAAK,EACL,QAAQ,GACT,qCAAiC;AAClC,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AAClE,YAAY,EACV,gCAAgC,EAChC,8BAA8B,EAC9B,qCAAqC,EACrC,6BAA6B,EAC7B,uCAAuC,EACvC,4BAA4B,GAC7B,sCAAkC;AACnC,OAAO,EAAE,uBAAuB,EAAE,sCAAkC;AACpE,YAAY,EACV,iCAAiC,EACjC,+BAA+B,EAC/B,sCAAsC,EACtC,8BAA8B,EAC9B,wCAAwC,GACzC,uCAAmC;AACpC,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AACtE,YAAY,EACV,cAAc,EACd,cAAc,EACd,YAAY,EACZ,oBAAoB,EACpB,yBAAyB,EACzB,iBAAiB,EACjB,0BAA0B,EAC1B,4BAA4B,GAC7B,kCAA8B;AAC/B,OAAO,EAAE,mBAAmB,EAAE,kCAA8B;AAC5D,YAAY,EACV,qBAAqB,EACrB,kBAAkB,EAClB,KAAK,EACL,2BAA2B,EAC3B,0BAA0B,EAC1B,kCAAkC,EAClC,6BAA6B,EAC7B,yBAAyB,EACzB,oCAAoC,EACpC,iBAAiB,GAClB,mCAA+B;AAChC,OAAO,EACL,mCAAmC,EACnC,oBAAoB,GACrB,mCAA+B;AAChC,YAAY,EACV,qBAAqB,EACrB,uBAAuB,EACvB,8BAA8B,EAC9B,uCAAuC,EACvC,sBAAsB,EACtB,gCAAgC,EAChC,yBAAyB,GAC1B,+BAA2B;AAC5B,OAAO,EAAE,gBAAgB,EAAE,+BAA2B;AACtD,OAAO,EACL,mCAAmC,EACnC,sBAAsB,EACtB,mBAAmB,EACnB,+BAA+B,EAC/B,aAAa,GACd,yBAAqB;AACtB,OAAO,EACL,0BAA0B,EAC1B,mBAAmB,EACnB,qBAAqB,GACtB,yCAA+B;AAChC,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,oCAA0B;AACpE,YAAY,EACV,oBAAoB,EACpB,qBAAqB,EACrB,sBAAsB,EACtB,wBAAwB,EACxB,6BAA6B,EAC7B,+BAA+B,EAC/B,kCAAkC,EAClC,kCAAkC,GACnC,oCAA0B;AAC3B,OAAO,EAAE,4BAA4B,EAAE,iDAAuC;AAC9E,YAAY,EACV,iCAAiC,EACjC,0CAA0C,EAC1C,uCAAuC,EACvC,mCAAmC,EACnC,kCAAkC,EAClC,qCAAqC,GACtC,iDAAuC;AAExC,OAAO,EACL,0BAA0B,EAC1B,yCAAyC,GAC1C,+CAAqC;AAEtC,YAAY,EACV,+BAA+B,EAC/B,wCAAwC,EACxC,0CAA0C,EAC1C,iCAAiC,EACjC,gCAAgC,EAChC,mCAAmC,GACpC,+CAAqC;AAEtC,OAAO,EACL,+BAA+B,EAC/B,8CAA8C,GAC/C,oDAA0C;AAE3C,YAAY,EACV,oCAAoC,EACpC,sCAAsC,EACtC,qCAAqC,EACrC,6CAA6C,EAC7C,0CAA0C,EAC1C,wCAAwC,GACzC,oDAA0C;AAC3C,OAAO,EAAE,kCAAkC,EAAE,uDAA6C;AAC1F,YAAY,EACV,gBAAgB,EAChB,uCAAuC,EACvC,gDAAgD,EAChD,wCAAwC,EACxC,kDAAkD,EAClD,yCAAyC,EACzC,2CAA2C,GAC5C,uDAA6C"}
\ No newline at end of file
+{"version":3,"file":"index.d.mts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/index.mjs b/dist/index.mjs
index 2db38aad9bc3d30fbdb072ba6bf3a8b273eb1793..900128d2c297f8673e94bb171d7cd3544dc5bcde 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -15,4 +15,5 @@ export { MultichainBalancesController } from "./MultichainBalancesController/ind
 export { MultichainAssetsController, getDefaultMultichainAssetsControllerState } from "./MultichainAssetsController/index.mjs";
 export { MultichainAssetsRatesController, getDefaultMultichainAssetsRatesControllerState } from "./MultichainAssetsRatesController/index.mjs";
 export { TokenSearchDiscoveryDataController } from "./TokenSearchDiscoveryDataController/index.mjs";
+export { DeFiPositionsController } from "./DeFiPositionsController/DeFiPositionsController.mjs";
 //# sourceMappingURL=index.mjs.map
\ No newline at end of file
diff --git a/dist/index.mjs.map b/dist/index.mjs.map
index be6b76e53d95c8d9254c6de6f60b338e1e899c8f..1215005c9ac701394166ee641fc918bae7c8e0f4 100644
--- a/dist/index.mjs.map
+++ b/dist/index.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"index.mjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AAuBtE,OAAO,EACL,uCAAuC,EACvC,wBAAwB,EACzB,uCAAmC;AACpC,6CAAyC;AAYzC,OAAO,EAAE,4BAA4B,EAAE,aAAa,EAAE,4BAAwB;AAwB9E,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AASlE,OAAO,EAAE,uBAAuB,EAAE,sCAAkC;AAQpE,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AAWtE,OAAO,EAAE,mBAAmB,EAAE,kCAA8B;AAa5D,OAAO,EACL,mCAAmC,EACnC,oBAAoB,EACrB,mCAA+B;AAUhC,OAAO,EAAE,gBAAgB,EAAE,+BAA2B;AACtD,OAAO,EACL,mCAAmC,EACnC,sBAAsB,EACtB,mBAAmB,EACnB,+BAA+B,EAC/B,aAAa,EACd,yBAAqB;AACtB,OAAO,EACL,0BAA0B,EAC1B,mBAAmB,EACnB,qBAAqB,EACtB,yCAA+B;AAChC,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,oCAA0B;AAWpE,OAAO,EAAE,4BAA4B,EAAE,iDAAuC;AAU9E,OAAO,EACL,0BAA0B,EAC1B,yCAAyC,EAC1C,+CAAqC;AAWtC,OAAO,EACL,+BAA+B,EAC/B,8CAA8C,EAC/C,oDAA0C;AAU3C,OAAO,EAAE,kCAAkC,EAAE,uDAA6C","sourcesContent":["export type {\n  AccountInformation,\n  AccountTrackerControllerMessenger,\n  AccountTrackerControllerState,\n  AccountTrackerControllerActions,\n  AccountTrackerControllerGetStateAction,\n  AccountTrackerControllerStateChangeEvent,\n  AccountTrackerControllerEvents,\n} from './AccountTrackerController';\nexport { AccountTrackerController } from './AccountTrackerController';\nexport type {\n  AssetsContractControllerActions,\n  AssetsContractControllerEvents,\n  AssetsContractControllerGetERC20StandardAction,\n  AssetsContractControllerGetERC721StandardAction,\n  AssetsContractControllerGetERC1155StandardAction,\n  AssetsContractControllerGetERC20BalanceOfAction,\n  AssetsContractControllerGetERC20TokenDecimalsAction,\n  AssetsContractControllerGetERC20TokenNameAction,\n  AssetsContractControllerGetERC721NftTokenIdAction,\n  AssetsContractControllerGetERC721TokenURIAction,\n  AssetsContractControllerGetERC721AssetNameAction,\n  AssetsContractControllerGetERC721AssetSymbolAction,\n  AssetsContractControllerGetERC721OwnerOfAction,\n  AssetsContractControllerGetERC1155TokenURIAction,\n  AssetsContractControllerGetERC1155BalanceOfAction,\n  AssetsContractControllerTransferSingleERC1155Action,\n  AssetsContractControllerGetTokenStandardAndDetailsAction,\n  AssetsContractControllerGetBalancesInSingleCallAction,\n  AssetsContractControllerMessenger,\n  BalanceMap,\n} from './AssetsContractController';\nexport {\n  SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID,\n  AssetsContractController,\n} from './AssetsContractController';\nexport * from './CurrencyRateController';\nexport type {\n  NftControllerState,\n  NftControllerMessenger,\n  NftControllerActions,\n  NftControllerGetStateAction,\n  NftControllerEvents,\n  NftControllerStateChangeEvent,\n  Nft,\n  NftContract,\n  NftMetadata,\n} from './NftController';\nexport { getDefaultNftControllerState, NftController } from './NftController';\nexport type {\n  NftDetectionControllerMessenger,\n  ApiNft,\n  ApiNftContract,\n  ApiNftLastSale,\n  ApiNftCreator,\n  ReservoirResponse,\n  TokensResponse,\n  BlockaidResultType,\n  Blockaid,\n  Market,\n  TokenResponse,\n  TopBid,\n  LastSale,\n  FeeBreakdown,\n  Attributes,\n  Collection,\n  Royalties,\n  Ownership,\n  FloorAsk,\n  Price,\n  Metadata,\n} from './NftDetectionController';\nexport { NftDetectionController } from './NftDetectionController';\nexport type {\n  TokenBalancesControllerMessenger,\n  TokenBalancesControllerActions,\n  TokenBalancesControllerGetStateAction,\n  TokenBalancesControllerEvents,\n  TokenBalancesControllerStateChangeEvent,\n  TokenBalancesControllerState,\n} from './TokenBalancesController';\nexport { TokenBalancesController } from './TokenBalancesController';\nexport type {\n  TokenDetectionControllerMessenger,\n  TokenDetectionControllerActions,\n  TokenDetectionControllerGetStateAction,\n  TokenDetectionControllerEvents,\n  TokenDetectionControllerStateChangeEvent,\n} from './TokenDetectionController';\nexport { TokenDetectionController } from './TokenDetectionController';\nexport type {\n  TokenListState,\n  TokenListToken,\n  TokenListMap,\n  TokenListStateChange,\n  TokenListControllerEvents,\n  GetTokenListState,\n  TokenListControllerActions,\n  TokenListControllerMessenger,\n} from './TokenListController';\nexport { TokenListController } from './TokenListController';\nexport type {\n  ContractExchangeRates,\n  ContractMarketData,\n  Token,\n  TokenRatesControllerActions,\n  TokenRatesControllerEvents,\n  TokenRatesControllerGetStateAction,\n  TokenRatesControllerMessenger,\n  TokenRatesControllerState,\n  TokenRatesControllerStateChangeEvent,\n  MarketDataDetails,\n} from './TokenRatesController';\nexport {\n  getDefaultTokenRatesControllerState,\n  TokenRatesController,\n} from './TokenRatesController';\nexport type {\n  TokensControllerState,\n  TokensControllerActions,\n  TokensControllerGetStateAction,\n  TokensControllerAddDetectedTokensAction,\n  TokensControllerEvents,\n  TokensControllerStateChangeEvent,\n  TokensControllerMessenger,\n} from './TokensController';\nexport { TokensController } from './TokensController';\nexport {\n  isTokenDetectionSupportedForNetwork,\n  formatIconUrlWithProxy,\n  getFormattedIpfsUrl,\n  fetchTokenContractExchangeRates,\n  getKeyByValue,\n} from './assetsUtil';\nexport {\n  CodefiTokenPricesServiceV2,\n  SUPPORTED_CHAIN_IDS,\n  getNativeTokenAddress,\n} from './token-prices-service';\nexport { RatesController, Cryptocurrency } from './RatesController';\nexport type {\n  RatesControllerState,\n  RatesControllerEvents,\n  RatesControllerActions,\n  RatesControllerMessenger,\n  RatesControllerGetStateAction,\n  RatesControllerStateChangeEvent,\n  RatesControllerPollingStartedEvent,\n  RatesControllerPollingStoppedEvent,\n} from './RatesController';\nexport { MultichainBalancesController } from './MultichainBalancesController';\nexport type {\n  MultichainBalancesControllerState,\n  MultichainBalancesControllerGetStateAction,\n  MultichainBalancesControllerStateChange,\n  MultichainBalancesControllerActions,\n  MultichainBalancesControllerEvents,\n  MultichainBalancesControllerMessenger,\n} from './MultichainBalancesController';\n\nexport {\n  MultichainAssetsController,\n  getDefaultMultichainAssetsControllerState,\n} from './MultichainAssetsController';\n\nexport type {\n  MultichainAssetsControllerState,\n  MultichainAssetsControllerGetStateAction,\n  MultichainAssetsControllerStateChangeEvent,\n  MultichainAssetsControllerActions,\n  MultichainAssetsControllerEvents,\n  MultichainAssetsControllerMessenger,\n} from './MultichainAssetsController';\n\nexport {\n  MultichainAssetsRatesController,\n  getDefaultMultichainAssetsRatesControllerState,\n} from './MultichainAssetsRatesController';\n\nexport type {\n  MultichainAssetsRatesControllerState,\n  MultichainAssetsRatesControllerActions,\n  MultichainAssetsRatesControllerEvents,\n  MultichainAssetsRatesControllerGetStateAction,\n  MultichainAssetsRatesControllerStateChange,\n  MultichainAssetsRatesControllerMessenger,\n} from './MultichainAssetsRatesController';\nexport { TokenSearchDiscoveryDataController } from './TokenSearchDiscoveryDataController';\nexport type {\n  TokenDisplayData,\n  TokenSearchDiscoveryDataControllerState,\n  TokenSearchDiscoveryDataControllerGetStateAction,\n  TokenSearchDiscoveryDataControllerEvents,\n  TokenSearchDiscoveryDataControllerStateChangeEvent,\n  TokenSearchDiscoveryDataControllerActions,\n  TokenSearchDiscoveryDataControllerMessenger,\n} from './TokenSearchDiscoveryDataController';\n"]}
\ No newline at end of file
+{"version":3,"file":"index.mjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AAuBtE,OAAO,EACL,uCAAuC,EACvC,wBAAwB,EACzB,uCAAmC;AACpC,6CAAyC;AAYzC,OAAO,EAAE,4BAA4B,EAAE,aAAa,EAAE,4BAAwB;AAwB9E,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AASlE,OAAO,EAAE,uBAAuB,EAAE,sCAAkC;AAQpE,OAAO,EAAE,wBAAwB,EAAE,uCAAmC;AAWtE,OAAO,EAAE,mBAAmB,EAAE,kCAA8B;AAa5D,OAAO,EACL,mCAAmC,EACnC,oBAAoB,EACrB,mCAA+B;AAUhC,OAAO,EAAE,gBAAgB,EAAE,+BAA2B;AACtD,OAAO,EACL,mCAAmC,EACnC,sBAAsB,EACtB,mBAAmB,EACnB,+BAA+B,EAC/B,aAAa,EACd,yBAAqB;AACtB,OAAO,EACL,0BAA0B,EAC1B,mBAAmB,EACnB,qBAAqB,EACtB,yCAA+B;AAChC,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,oCAA0B;AAWpE,OAAO,EAAE,4BAA4B,EAAE,iDAAuC;AAU9E,OAAO,EACL,0BAA0B,EAC1B,yCAAyC,EAC1C,+CAAqC;AAWtC,OAAO,EACL,+BAA+B,EAC/B,8CAA8C,EAC/C,oDAA0C;AAU3C,OAAO,EAAE,kCAAkC,EAAE,uDAA6C;AAU1F,OAAO,EAAE,uBAAuB,EAAE,8DAA0D","sourcesContent":["export type {\n  AccountInformation,\n  AccountTrackerControllerMessenger,\n  AccountTrackerControllerState,\n  AccountTrackerControllerActions,\n  AccountTrackerControllerGetStateAction,\n  AccountTrackerControllerStateChangeEvent,\n  AccountTrackerControllerEvents,\n} from './AccountTrackerController';\nexport { AccountTrackerController } from './AccountTrackerController';\nexport type {\n  AssetsContractControllerActions,\n  AssetsContractControllerEvents,\n  AssetsContractControllerGetERC20StandardAction,\n  AssetsContractControllerGetERC721StandardAction,\n  AssetsContractControllerGetERC1155StandardAction,\n  AssetsContractControllerGetERC20BalanceOfAction,\n  AssetsContractControllerGetERC20TokenDecimalsAction,\n  AssetsContractControllerGetERC20TokenNameAction,\n  AssetsContractControllerGetERC721NftTokenIdAction,\n  AssetsContractControllerGetERC721TokenURIAction,\n  AssetsContractControllerGetERC721AssetNameAction,\n  AssetsContractControllerGetERC721AssetSymbolAction,\n  AssetsContractControllerGetERC721OwnerOfAction,\n  AssetsContractControllerGetERC1155TokenURIAction,\n  AssetsContractControllerGetERC1155BalanceOfAction,\n  AssetsContractControllerTransferSingleERC1155Action,\n  AssetsContractControllerGetTokenStandardAndDetailsAction,\n  AssetsContractControllerGetBalancesInSingleCallAction,\n  AssetsContractControllerMessenger,\n  BalanceMap,\n} from './AssetsContractController';\nexport {\n  SINGLE_CALL_BALANCES_ADDRESS_BY_CHAINID,\n  AssetsContractController,\n} from './AssetsContractController';\nexport * from './CurrencyRateController';\nexport type {\n  NftControllerState,\n  NftControllerMessenger,\n  NftControllerActions,\n  NftControllerGetStateAction,\n  NftControllerEvents,\n  NftControllerStateChangeEvent,\n  Nft,\n  NftContract,\n  NftMetadata,\n} from './NftController';\nexport { getDefaultNftControllerState, NftController } from './NftController';\nexport type {\n  NftDetectionControllerMessenger,\n  ApiNft,\n  ApiNftContract,\n  ApiNftLastSale,\n  ApiNftCreator,\n  ReservoirResponse,\n  TokensResponse,\n  BlockaidResultType,\n  Blockaid,\n  Market,\n  TokenResponse,\n  TopBid,\n  LastSale,\n  FeeBreakdown,\n  Attributes,\n  Collection,\n  Royalties,\n  Ownership,\n  FloorAsk,\n  Price,\n  Metadata,\n} from './NftDetectionController';\nexport { NftDetectionController } from './NftDetectionController';\nexport type {\n  TokenBalancesControllerMessenger,\n  TokenBalancesControllerActions,\n  TokenBalancesControllerGetStateAction,\n  TokenBalancesControllerEvents,\n  TokenBalancesControllerStateChangeEvent,\n  TokenBalancesControllerState,\n} from './TokenBalancesController';\nexport { TokenBalancesController } from './TokenBalancesController';\nexport type {\n  TokenDetectionControllerMessenger,\n  TokenDetectionControllerActions,\n  TokenDetectionControllerGetStateAction,\n  TokenDetectionControllerEvents,\n  TokenDetectionControllerStateChangeEvent,\n} from './TokenDetectionController';\nexport { TokenDetectionController } from './TokenDetectionController';\nexport type {\n  TokenListState,\n  TokenListToken,\n  TokenListMap,\n  TokenListStateChange,\n  TokenListControllerEvents,\n  GetTokenListState,\n  TokenListControllerActions,\n  TokenListControllerMessenger,\n} from './TokenListController';\nexport { TokenListController } from './TokenListController';\nexport type {\n  ContractExchangeRates,\n  ContractMarketData,\n  Token,\n  TokenRatesControllerActions,\n  TokenRatesControllerEvents,\n  TokenRatesControllerGetStateAction,\n  TokenRatesControllerMessenger,\n  TokenRatesControllerState,\n  TokenRatesControllerStateChangeEvent,\n  MarketDataDetails,\n} from './TokenRatesController';\nexport {\n  getDefaultTokenRatesControllerState,\n  TokenRatesController,\n} from './TokenRatesController';\nexport type {\n  TokensControllerState,\n  TokensControllerActions,\n  TokensControllerGetStateAction,\n  TokensControllerAddDetectedTokensAction,\n  TokensControllerEvents,\n  TokensControllerStateChangeEvent,\n  TokensControllerMessenger,\n} from './TokensController';\nexport { TokensController } from './TokensController';\nexport {\n  isTokenDetectionSupportedForNetwork,\n  formatIconUrlWithProxy,\n  getFormattedIpfsUrl,\n  fetchTokenContractExchangeRates,\n  getKeyByValue,\n} from './assetsUtil';\nexport {\n  CodefiTokenPricesServiceV2,\n  SUPPORTED_CHAIN_IDS,\n  getNativeTokenAddress,\n} from './token-prices-service';\nexport { RatesController, Cryptocurrency } from './RatesController';\nexport type {\n  RatesControllerState,\n  RatesControllerEvents,\n  RatesControllerActions,\n  RatesControllerMessenger,\n  RatesControllerGetStateAction,\n  RatesControllerStateChangeEvent,\n  RatesControllerPollingStartedEvent,\n  RatesControllerPollingStoppedEvent,\n} from './RatesController';\nexport { MultichainBalancesController } from './MultichainBalancesController';\nexport type {\n  MultichainBalancesControllerState,\n  MultichainBalancesControllerGetStateAction,\n  MultichainBalancesControllerStateChange,\n  MultichainBalancesControllerActions,\n  MultichainBalancesControllerEvents,\n  MultichainBalancesControllerMessenger,\n} from './MultichainBalancesController';\n\nexport {\n  MultichainAssetsController,\n  getDefaultMultichainAssetsControllerState,\n} from './MultichainAssetsController';\n\nexport type {\n  MultichainAssetsControllerState,\n  MultichainAssetsControllerGetStateAction,\n  MultichainAssetsControllerStateChangeEvent,\n  MultichainAssetsControllerActions,\n  MultichainAssetsControllerEvents,\n  MultichainAssetsControllerMessenger,\n} from './MultichainAssetsController';\n\nexport {\n  MultichainAssetsRatesController,\n  getDefaultMultichainAssetsRatesControllerState,\n} from './MultichainAssetsRatesController';\n\nexport type {\n  MultichainAssetsRatesControllerState,\n  MultichainAssetsRatesControllerActions,\n  MultichainAssetsRatesControllerEvents,\n  MultichainAssetsRatesControllerGetStateAction,\n  MultichainAssetsRatesControllerStateChange,\n  MultichainAssetsRatesControllerMessenger,\n} from './MultichainAssetsRatesController';\nexport { TokenSearchDiscoveryDataController } from './TokenSearchDiscoveryDataController';\nexport type {\n  TokenDisplayData,\n  TokenSearchDiscoveryDataControllerState,\n  TokenSearchDiscoveryDataControllerGetStateAction,\n  TokenSearchDiscoveryDataControllerEvents,\n  TokenSearchDiscoveryDataControllerStateChangeEvent,\n  TokenSearchDiscoveryDataControllerActions,\n  TokenSearchDiscoveryDataControllerMessenger,\n} from './TokenSearchDiscoveryDataController';\nexport { DeFiPositionsController } from './DeFiPositionsController/DeFiPositionsController';\nexport type {\n  DeFiPositionsControllerState,\n  DeFiPositionsControllerActions,\n  DeFiPositionsControllerEvents,\n  DeFiPositionsControllerGetStateAction,\n  DeFiPositionsControllerStateChangeEvent,\n  DeFiPositionsControllerMessenger,\n} from './DeFiPositionsController/DeFiPositionsController';\nexport type { GroupedPositions } from './DeFiPositionsController/group-positions';\n"]}
\ No newline at end of file
