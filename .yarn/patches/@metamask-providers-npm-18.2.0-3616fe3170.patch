diff --git a/dist/BaseProvider.cjs b/dist/BaseProvider.cjs
index bcb7967af0b6369cc843a159e1c369e5d8a91f12..e476b71774dd89b580f74a5598413bd96c248d26 100644
--- a/dist/BaseProvider.cjs
+++ b/dist/BaseProvider.cjs
@@ -161,6 +161,7 @@ class BaseProvider extends safe_event_emitter_1.default {
      * @param initialState.chainId - The chain ID.
      * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.
      * @param initialState.networkVersion - The network version.
+     * @param initialState.isConnected - Whether the network is available.
      * @fires BaseProvider#_initialized - If `initialState` is defined.
      * @fires BaseProvider#connect - If `initialState` is defined.
      */
@@ -169,10 +170,10 @@ class BaseProvider extends safe_event_emitter_1.default {
             throw new Error('Provider already initialized.');
         }
         if (initialState) {
-            const { accounts, chainId, isUnlocked, networkVersion } = initialState;
+            const { accounts, chainId, isUnlocked, networkVersion, isConnected } = initialState;
             // EIP-1193 connect
-            this._handleConnect(chainId);
-            this._handleChainChanged({ chainId, networkVersion });
+            this._handleConnect({ chainId, isConnected });
+            this._handleChainChanged({ chainId, networkVersion, isConnected });
             this._handleUnlockStateChanged({ accounts, isUnlocked });
             this._handleAccountsChanged(accounts);
         }
@@ -211,11 +212,13 @@ class BaseProvider extends safe_event_emitter_1.default {
      * When the provider becomes connected, updates internal state and emits
      * required events. Idempotent.
      *
-     * @param chainId - The ID of the newly connected chain.
+     * @param networkInfo - The options object.
+     * @param networkInfo.chainId - The ID of the newly connected chain.
+     * @param networkInfo.isConnected - Whether the network is available.
      * @fires MetaMaskInpageProvider#connect
      */
-    _handleConnect(chainId) {
-        if (!this._state.isConnected) {
+    _handleConnect({ chainId, isConnected, }) {
+        if (!this._state.isConnected && isConnected) {
             this._state.isConnected = true;
             this.emit('connect', { chainId });
             this._log.debug(messages_1.default.info.connected(chainId));
@@ -266,13 +269,14 @@ class BaseProvider extends safe_event_emitter_1.default {
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, } = {}) {
+    _handleChainChanged({ chainId, isConnected, } = {}) {
         if (!(0, utils_1.isValidChainId)(chainId)) {
             this._log.error(messages_1.default.errors.invalidNetworkParams(), { chainId });
             return;
         }
-        this._handleConnect(chainId);
+        this._handleConnect({ chainId, isConnected });
         if (chainId !== __classPrivateFieldGet(this, _BaseProvider_chainId, "f")) {
             __classPrivateFieldSet(this, _BaseProvider_chainId, chainId, "f");
             if (this._state.initialized) {
diff --git a/dist/BaseProvider.cjs.map b/dist/BaseProvider.cjs.map
index 14b1303e2ad0e18c703db24c6ef086d6f6b4fafa..b21ebfa0ab7e7735945c5f86291e5d228cfe20a1 100644
--- a/dist/BaseProvider.cjs.map
+++ b/dist/BaseProvider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"BaseProvider.cjs","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { JsonRpcEngine } from '@metamask/json-rpc-engine';\nimport { rpcErrors, JsonRpcError } from '@metamask/rpc-errors';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type {\n  JsonRpcRequest,\n  JsonRpcId,\n  JsonRpcVersion2,\n  JsonRpcSuccess,\n  JsonRpcParams,\n  Json,\n} from '@metamask/utils';\nimport dequal from 'fast-deep-equal';\n\nimport messages from './messages';\nimport type { ConsoleLike, Maybe } from './utils';\nimport { getRpcPromiseCallback, isValidChainId } from './utils';\n\nexport type UnvalidatedJsonRpcRequest = {\n  id?: JsonRpcId;\n  jsonrpc?: JsonRpcVersion2;\n  method: string;\n  params?: unknown;\n};\n\nexport type BaseProviderOptions = {\n  /**\n   * The logging API to use.\n   */\n  logger?: ConsoleLike;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n\n  /**\n   * `@metamask/json-rpc-engine` middleware. The middleware will be inserted in the given\n   * order immediately after engine initialization.\n   */\n  rpcMiddleware?: JsonRpcMiddleware<JsonRpcParams, Json>[];\n};\n\nexport type RequestArguments = {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n};\n\nexport type BaseProviderState = {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n};\n\n/**\n * An abstract class implementing the EIP-1193 interface. Implementers must:\n *\n * 1. At initialization, push a middleware to the internal `_rpcEngine` that\n * hands off requests to the server and receives responses in return.\n * 2. At initialization, retrieve initial state and call\n * {@link BaseProvider._initializeState} **once**.\n * 3. Ensure that the provider's state is synchronized with the wallet.\n * 4. Ensure that notifications are received and emitted as appropriate.\n */\nexport abstract class BaseProvider extends SafeEventEmitter {\n  protected readonly _log: ConsoleLike;\n\n  protected _state: BaseProviderState;\n\n  protected _rpcEngine: JsonRpcEngine;\n\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  #chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  #selectedAddress: string | null;\n\n  /**\n   * Create a new instance of the provider.\n   *\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack. Default: [].\n   */\n  constructor({\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = [],\n  }: BaseProviderOptions = {}) {\n    super();\n\n    this._log = logger;\n\n    this.setMaxListeners(maxEventListeners);\n\n    // Private state\n    this._state = {\n      ...BaseProvider._defaultState,\n    };\n\n    // Public state\n    this.#selectedAddress = null;\n    this.#chainId = null;\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this.request = this.request.bind(this);\n\n    // Handle RPC requests via dapp-side RPC engine.\n    //\n    // ATTN: Implementers must push a middleware that hands off requests to\n    // the server.\n    const rpcEngine = new JsonRpcEngine();\n    rpcMiddleware.forEach((middleware) => rpcEngine.push(middleware));\n    this._rpcEngine = rpcEngine;\n  }\n\n  //====================\n  // Public Properties\n  //====================\n\n  get chainId(): string | null {\n    return this.#chainId;\n  }\n\n  get selectedAddress(): string | null {\n    return this.#selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Returns whether the provider can process RPC requests.\n   *\n   * @returns Whether the provider can process RPC requests.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @param args.method - The RPC method name.\n   * @param args.params - The parameters for the RPC method.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<Type>(args: RequestArguments): Promise<Maybe<Type>> {\n    if (!args || typeof args !== 'object' || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== 'string' || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (\n      params !== undefined &&\n      !Array.isArray(params) &&\n      (typeof params !== 'object' || params === null)\n    ) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    const payload =\n      params === undefined || params === null\n        ? {\n            method,\n          }\n        : {\n            method,\n            params,\n          };\n\n    return new Promise<Type>((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Sets initial state if provided and marks this provider as initialized.\n   * Throws if called more than once.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @param initialState - The provider's initial state.\n   * @param initialState.accounts - The user's accounts.\n   * @param initialState.chainId - The chain ID.\n   * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.\n   * @param initialState.networkVersion - The network version.\n   * @fires BaseProvider#_initialized - If `initialState` is defined.\n   * @fires BaseProvider#connect - If `initialState` is defined.\n   */\n  protected _initializeState(initialState?: {\n    accounts: string[];\n    chainId: string;\n    isUnlocked: boolean;\n    networkVersion?: string;\n  }) {\n    if (this._state.initialized) {\n      throw new Error('Provider already initialized.');\n    }\n\n    if (initialState) {\n      const { accounts, chainId, isUnlocked, networkVersion } = initialState;\n\n      // EIP-1193 connect\n      this._handleConnect(chainId);\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    }\n\n    // Mark provider as initialized regardless of whether initial state was\n    // retrieved.\n    this._state.initialized = true;\n    this.emit('_initialized');\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @returns The result of the RPC request.\n   */\n  protected _rpcRequest(\n    payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[],\n    callback: (...args: any[]) => void,\n  ) {\n    let callbackWrapper = callback;\n\n    if (!Array.isArray(payload)) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = '2.0';\n      }\n\n      if (\n        payload.method === 'eth_accounts' ||\n        payload.method === 'eth_requestAccounts'\n      ) {\n        // handle accounts changing\n        callbackWrapper = (\n          error: Error,\n          response: JsonRpcSuccess<string[]>,\n        ) => {\n          this._handleAccountsChanged(\n            response.result ?? [],\n            payload.method === 'eth_accounts',\n          );\n          callback(error, response);\n        };\n      }\n      return this._rpcEngine.handle(payload as JsonRpcRequest, callbackWrapper);\n    }\n    return this._rpcEngine.handle(payload as JsonRpcRequest[], callbackWrapper);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * @fires MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit('connect', { chainId });\n      this._log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    if (\n      this._state.isConnected ||\n      (!this._state.isPermanentlyDisconnected && !isRecoverable)\n    ) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new JsonRpcError(\n          1013, // Try again later\n          errorMessage ?? messages.errors.disconnected(),\n        );\n        this._log.debug(error);\n      } else {\n        error = new JsonRpcError(\n          1011, // Internal error\n          errorMessage ?? messages.errors.permanentlyDisconnected(),\n        );\n        this._log.error(error);\n        this.#chainId = null;\n        this._state.accounts = null;\n        this.#selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit('disconnect', error);\n    }\n  }\n\n  /**\n   * Upon receipt of a new `chainId`, emits the corresponding event and sets\n   * and sets relevant public state. Does nothing if the given `chainId` is\n   * equivalent to the existing value.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n  }:\n    | { chainId?: string | undefined; networkVersion?: string | undefined }\n    | undefined = {}) {\n    if (!isValidChainId(chainId)) {\n      this._log.error(messages.errors.invalidNetworkParams(), { chainId });\n      return;\n    }\n\n    this._handleConnect(chainId);\n\n    if (chainId !== this.#chainId) {\n      this.#chainId = chainId;\n      if (this._state.initialized) {\n        this.emit('chainChanged', this.#chainId);\n      }\n    }\n  }\n\n  /**\n   * Called when accounts may have changed. Diffs the new accounts value with\n   * the current one, updates all state as necessary, and emits the\n   * accountsChanged event.\n   *\n   * @param accounts - The new accounts value.\n   * @param isEthAccounts - Whether the accounts value was returned by\n   * a call to eth_accounts.\n   */\n  protected _handleAccountsChanged(\n    accounts: unknown[],\n    isEthAccounts = false,\n  ): void {\n    let _accounts = accounts;\n\n    if (!Array.isArray(accounts)) {\n      this._log.error(\n        'MetaMask: Received invalid accounts parameter. Please report this bug.',\n        accounts,\n      );\n      _accounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== 'string') {\n        this._log.error(\n          'MetaMask: Received non-string account. Please report this bug.',\n          accounts,\n        );\n        _accounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, _accounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns\n      if (isEthAccounts && this._state.accounts !== null) {\n        this._log.error(\n          `MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.`,\n          _accounts,\n        );\n      }\n\n      this._state.accounts = _accounts as string[];\n\n      // handle selectedAddress\n      if (this.#selectedAddress !== _accounts[0]) {\n        this.#selectedAddress = (_accounts[0] as string) || null;\n      }\n\n      // finally, after all state has been updated, emit the event\n      if (this._state.initialized) {\n        const _nextAccounts = [..._accounts];\n        this.emit('accountsChanged', _nextAccounts);\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   * @param opts.accounts - The exposed accounts, if any.\n   * @param opts.isUnlocked - The latest isUnlocked value.\n   */\n  protected _handleUnlockStateChanged({\n    accounts,\n    isUnlocked,\n  }: { accounts?: string[]; isUnlocked?: boolean } = {}) {\n    if (typeof isUnlocked !== 'boolean') {\n      this._log.error(\n        'MetaMask: Received invalid isUnlocked parameter. Please report this bug.',\n      );\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts ?? []);\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"BaseProvider.cjs","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { JsonRpcEngine } from '@metamask/json-rpc-engine';\nimport { rpcErrors, JsonRpcError } from '@metamask/rpc-errors';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type {\n  JsonRpcRequest,\n  JsonRpcId,\n  JsonRpcVersion2,\n  JsonRpcSuccess,\n  JsonRpcParams,\n  Json,\n} from '@metamask/utils';\nimport dequal from 'fast-deep-equal';\n\nimport messages from './messages';\nimport type { ConsoleLike, Maybe } from './utils';\nimport { getRpcPromiseCallback, isValidChainId } from './utils';\n\nexport type UnvalidatedJsonRpcRequest = {\n  id?: JsonRpcId;\n  jsonrpc?: JsonRpcVersion2;\n  method: string;\n  params?: unknown;\n};\n\nexport type BaseProviderOptions = {\n  /**\n   * The logging API to use.\n   */\n  logger?: ConsoleLike;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n\n  /**\n   * `@metamask/json-rpc-engine` middleware. The middleware will be inserted in the given\n   * order immediately after engine initialization.\n   */\n  rpcMiddleware?: JsonRpcMiddleware<JsonRpcParams, Json>[];\n};\n\nexport type RequestArguments = {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n};\n\nexport type BaseProviderState = {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n};\n\n/**\n * An abstract class implementing the EIP-1193 interface. Implementers must:\n *\n * 1. At initialization, push a middleware to the internal `_rpcEngine` that\n * hands off requests to the server and receives responses in return.\n * 2. At initialization, retrieve initial state and call\n * {@link BaseProvider._initializeState} **once**.\n * 3. Ensure that the provider's state is synchronized with the wallet.\n * 4. Ensure that notifications are received and emitted as appropriate.\n */\nexport abstract class BaseProvider extends SafeEventEmitter {\n  protected readonly _log: ConsoleLike;\n\n  protected _state: BaseProviderState;\n\n  protected _rpcEngine: JsonRpcEngine;\n\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  #chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  #selectedAddress: string | null;\n\n  /**\n   * Create a new instance of the provider.\n   *\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack. Default: [].\n   */\n  constructor({\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = [],\n  }: BaseProviderOptions = {}) {\n    super();\n\n    this._log = logger;\n\n    this.setMaxListeners(maxEventListeners);\n\n    // Private state\n    this._state = {\n      ...BaseProvider._defaultState,\n    };\n\n    // Public state\n    this.#selectedAddress = null;\n    this.#chainId = null;\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this.request = this.request.bind(this);\n\n    // Handle RPC requests via dapp-side RPC engine.\n    //\n    // ATTN: Implementers must push a middleware that hands off requests to\n    // the server.\n    const rpcEngine = new JsonRpcEngine();\n    rpcMiddleware.forEach((middleware) => rpcEngine.push(middleware));\n    this._rpcEngine = rpcEngine;\n  }\n\n  //====================\n  // Public Properties\n  //====================\n\n  get chainId(): string | null {\n    return this.#chainId;\n  }\n\n  get selectedAddress(): string | null {\n    return this.#selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Returns whether the provider can process RPC requests.\n   *\n   * @returns Whether the provider can process RPC requests.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @param args.method - The RPC method name.\n   * @param args.params - The parameters for the RPC method.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<Type>(args: RequestArguments): Promise<Maybe<Type>> {\n    if (!args || typeof args !== 'object' || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== 'string' || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (\n      params !== undefined &&\n      !Array.isArray(params) &&\n      (typeof params !== 'object' || params === null)\n    ) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    const payload =\n      params === undefined || params === null\n        ? {\n            method,\n          }\n        : {\n            method,\n            params,\n          };\n\n    return new Promise<Type>((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Sets initial state if provided and marks this provider as initialized.\n   * Throws if called more than once.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @param initialState - The provider's initial state.\n   * @param initialState.accounts - The user's accounts.\n   * @param initialState.chainId - The chain ID.\n   * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.\n   * @param initialState.networkVersion - The network version.\n   * @param initialState.isConnected - Whether the network is available.\n   * @fires BaseProvider#_initialized - If `initialState` is defined.\n   * @fires BaseProvider#connect - If `initialState` is defined.\n   */\n  protected _initializeState(initialState?: {\n    accounts: string[];\n    chainId: string;\n    isUnlocked: boolean;\n    networkVersion?: string;\n    isConnected?: boolean;\n  }) {\n    if (this._state.initialized) {\n      throw new Error('Provider already initialized.');\n    }\n\n    if (initialState) {\n      const { accounts, chainId, isUnlocked, networkVersion, isConnected } =\n        initialState;\n\n      // EIP-1193 connect\n      this._handleConnect({ chainId, isConnected });\n      this._handleChainChanged({ chainId, networkVersion, isConnected });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    }\n\n    // Mark provider as initialized regardless of whether initial state was\n    // retrieved.\n    this._state.initialized = true;\n    this.emit('_initialized');\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @returns The result of the RPC request.\n   */\n  protected _rpcRequest(\n    payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[],\n    callback: (...args: any[]) => void,\n  ) {\n    let callbackWrapper = callback;\n\n    if (!Array.isArray(payload)) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = '2.0';\n      }\n\n      if (\n        payload.method === 'eth_accounts' ||\n        payload.method === 'eth_requestAccounts'\n      ) {\n        // handle accounts changing\n        callbackWrapper = (\n          error: Error,\n          response: JsonRpcSuccess<string[]>,\n        ) => {\n          this._handleAccountsChanged(\n            response.result ?? [],\n            payload.method === 'eth_accounts',\n          );\n          callback(error, response);\n        };\n      }\n      return this._rpcEngine.handle(payload as JsonRpcRequest, callbackWrapper);\n    }\n    return this._rpcEngine.handle(payload as JsonRpcRequest[], callbackWrapper);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param networkInfo - The options object.\n   * @param networkInfo.chainId - The ID of the newly connected chain.\n   * @param networkInfo.isConnected - Whether the network is available.\n   * @fires MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect({\n    chainId,\n    isConnected,\n  }: {\n    chainId: string;\n    isConnected?: boolean | undefined;\n  }) {\n    if (!this._state.isConnected && isConnected) {\n      this._state.isConnected = true;\n      this.emit('connect', { chainId });\n      this._log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    if (\n      this._state.isConnected ||\n      (!this._state.isPermanentlyDisconnected && !isRecoverable)\n    ) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new JsonRpcError(\n          1013, // Try again later\n          errorMessage ?? messages.errors.disconnected(),\n        );\n        this._log.debug(error);\n      } else {\n        error = new JsonRpcError(\n          1011, // Internal error\n          errorMessage ?? messages.errors.permanentlyDisconnected(),\n        );\n        this._log.error(error);\n        this.#chainId = null;\n        this._state.accounts = null;\n        this.#selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit('disconnect', error);\n    }\n  }\n\n  /**\n   * Upon receipt of a new `chainId`, emits the corresponding event and sets\n   * and sets relevant public state. Does nothing if the given `chainId` is\n   * equivalent to the existing value.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    isConnected,\n  }:\n    | {\n        chainId?: string;\n        networkVersion?: string | undefined;\n        isConnected?: boolean | undefined;\n      }\n    | undefined = {}) {\n    if (!isValidChainId(chainId)) {\n      this._log.error(messages.errors.invalidNetworkParams(), { chainId });\n      return;\n    }\n\n    this._handleConnect({ chainId, isConnected });\n\n    if (chainId !== this.#chainId) {\n      this.#chainId = chainId;\n      if (this._state.initialized) {\n        this.emit('chainChanged', this.#chainId);\n      }\n    }\n  }\n\n  /**\n   * Called when accounts may have changed. Diffs the new accounts value with\n   * the current one, updates all state as necessary, and emits the\n   * accountsChanged event.\n   *\n   * @param accounts - The new accounts value.\n   * @param isEthAccounts - Whether the accounts value was returned by\n   * a call to eth_accounts.\n   */\n  protected _handleAccountsChanged(\n    accounts: unknown[],\n    isEthAccounts = false,\n  ): void {\n    let _accounts = accounts;\n\n    if (!Array.isArray(accounts)) {\n      this._log.error(\n        'MetaMask: Received invalid accounts parameter. Please report this bug.',\n        accounts,\n      );\n      _accounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== 'string') {\n        this._log.error(\n          'MetaMask: Received non-string account. Please report this bug.',\n          accounts,\n        );\n        _accounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, _accounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns\n      if (isEthAccounts && this._state.accounts !== null) {\n        this._log.error(\n          `MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.`,\n          _accounts,\n        );\n      }\n\n      this._state.accounts = _accounts as string[];\n\n      // handle selectedAddress\n      if (this.#selectedAddress !== _accounts[0]) {\n        this.#selectedAddress = (_accounts[0] as string) || null;\n      }\n\n      // finally, after all state has been updated, emit the event\n      if (this._state.initialized) {\n        const _nextAccounts = [..._accounts];\n        this.emit('accountsChanged', _nextAccounts);\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   * @param opts.accounts - The exposed accounts, if any.\n   * @param opts.isUnlocked - The latest isUnlocked value.\n   */\n  protected _handleUnlockStateChanged({\n    accounts,\n    isUnlocked,\n  }: { accounts?: string[]; isUnlocked?: boolean } = {}) {\n    if (typeof isUnlocked !== 'boolean') {\n      this._log.error(\n        'MetaMask: Received invalid isUnlocked parameter. Please report this bug.',\n      );\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts ?? []);\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/BaseProvider.d.cts b/dist/BaseProvider.d.cts
index 97187da7014911da7913f52893e6f754b1a46a2a..f729aef27f0c79dd7fbc8030200dd32f7cc95309 100644
--- a/dist/BaseProvider.d.cts
+++ b/dist/BaseProvider.d.cts
@@ -96,6 +96,7 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * @param initialState.chainId - The chain ID.
      * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.
      * @param initialState.networkVersion - The network version.
+     * @param initialState.isConnected - Whether the network is available.
      * @fires BaseProvider#_initialized - If `initialState` is defined.
      * @fires BaseProvider#connect - If `initialState` is defined.
      */
@@ -104,6 +105,7 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
         chainId: string;
         isUnlocked: boolean;
         networkVersion?: string;
+        isConnected?: boolean;
     }): void;
     /**
      * Internal RPC method. Forwards requests to background via the RPC engine.
@@ -118,10 +120,15 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * When the provider becomes connected, updates internal state and emits
      * required events. Idempotent.
      *
-     * @param chainId - The ID of the newly connected chain.
+     * @param networkInfo - The options object.
+     * @param networkInfo.chainId - The ID of the newly connected chain.
+     * @param networkInfo.isConnected - Whether the network is available.
      * @fires MetaMaskInpageProvider#connect
      */
-    protected _handleConnect(chainId: string): void;
+    protected _handleConnect({ chainId, isConnected, }: {
+        chainId: string;
+        isConnected?: boolean | undefined;
+    }): void;
     /**
      * When the provider becomes disconnected, updates internal state and emits
      * required events. Idempotent with respect to the isRecoverable parameter.
@@ -145,10 +152,12 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, }?: {
-        chainId?: string | undefined;
+    protected _handleChainChanged({ chainId, isConnected, }?: {
+        chainId?: string;
         networkVersion?: string | undefined;
+        isConnected?: boolean | undefined;
     } | undefined): void;
     /**
      * Called when accounts may have changed. Diffs the new accounts value with
diff --git a/dist/BaseProvider.d.cts.map b/dist/BaseProvider.d.cts.map
index 9026d2115feee2d102e1367fab7084614c63b102..36543d383d3f8cbf6ad69652c59334e90471ebb6 100644
--- a/dist/BaseProvider.d.cts.map
+++ b/dist/BaseProvider.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"BaseProvider.d.cts","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"BaseProvider.d.cts","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AACnE,OAAO,EAAE,aAAa,EAAE,kCAAkC;AAE1D,OAAO,gBAAgB,qCAAqC;AAC5D,OAAO,KAAK,EAEV,SAAS,EACT,eAAe,EAEf,aAAa,EACb,IAAI,EACL,wBAAwB;AAIzB,OAAO,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,oBAAgB;AAGlD,MAAM,MAAM,yBAAyB,GAAG;IACtC,EAAE,CAAC,EAAE,SAAS,CAAC;IACf,OAAO,CAAC,EAAE,eAAe,CAAC;IAC1B,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,EAAE,OAAO,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,mBAAmB,GAAG;IAChC;;OAEG;IACH,MAAM,CAAC,EAAE,WAAW,CAAC;IAErB;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,CAAC;IAE3B;;;OAGG;IACH,aAAa,CAAC,EAAE,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC;CAC1D,CAAC;AAEF,MAAM,MAAM,gBAAgB,GAAG;IAC7B,iCAAiC;IACjC,MAAM,EAAE,MAAM,CAAC;IAEf,4CAA4C;IAC5C,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;CAC9C,CAAC;AAEF,MAAM,MAAM,iBAAiB,GAAG;IAC9B,QAAQ,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC;IAC1B,WAAW,EAAE,OAAO,CAAC;IACrB,UAAU,EAAE,OAAO,CAAC;IACpB,WAAW,EAAE,OAAO,CAAC;IACrB,yBAAyB,EAAE,OAAO,CAAC;CACpC,CAAC;AAEF;;;;;;;;;GASG;AACH,8BAAsB,YAAa,SAAQ,gBAAgB;;IACzD,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,CAAC;IAErC,SAAS,CAAC,MAAM,EAAE,iBAAiB,CAAC;IAEpC,SAAS,CAAC,UAAU,EAAE,aAAa,CAAC;IAEpC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,iBAAiB,CAM/C;IAeF;;;;;;;;OAQG;gBACS,EACV,MAAgB,EAChB,iBAAuB,EACvB,aAAkB,GACnB,GAAE,mBAAwB;IAsC3B,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,CAE3B;IAED,IAAI,eAAe,IAAI,MAAM,GAAG,IAAI,CAEnC;IAMD;;;;OAIG;IACH,WAAW,IAAI,OAAO;IAItB;;;;;;;;;OASG;IACG,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IA+CjE;;;;;;;;;;;;;;;;;OAiBG;IACH,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE;QACxC,QAAQ,EAAE,MAAM,EAAE,CAAC;QACnB,OAAO,EAAE,MAAM,CAAC;QAChB,UAAU,EAAE,OAAO,CAAC;QACpB,cAAc,CAAC,EAAE,MAAM,CAAC;QACxB,WAAW,CAAC,EAAE,OAAO,CAAC;KACvB;IAsBD;;;;;;;OAOG;IACH,SAAS,CAAC,WAAW,CACnB,OAAO,EAAE,yBAAyB,GAAG,yBAAyB,EAAE,EAChE,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,IAAI;IA8BpC;;;;;;;;OAQG;IACH,SAAS,CAAC,cAAc,CAAC,EACvB,OAAO,EACP,WAAW,GACZ,EAAE;QACD,OAAO,EAAE,MAAM,CAAC;QAChB,WAAW,CAAC,EAAE,OAAO,GAAG,SAAS,CAAC;KACnC;IAQD;;;;;;;;;;OAUG;IACH,SAAS,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE,MAAM;IA+BzE;;;;;;;;;;;;OAYG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,WAAW,GACZ,GACG;QACE,OAAO,CAAC,EAAE,MAAM,CAAC;QACjB,cAAc,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QACpC,WAAW,CAAC,EAAE,OAAO,GAAG,SAAS,CAAC;KACnC,GACD,SAAc;IAgBlB;;;;;;;;OAQG;IACH,SAAS,CAAC,sBAAsB,CAC9B,QAAQ,EAAE,OAAO,EAAE,EACnB,aAAa,UAAQ,GACpB,IAAI;IAgDP;;;;;;;;;;;OAWG;IACH,SAAS,CAAC,yBAAyB,CAAC,EAClC,QAAQ,EACR,UAAU,GACX,GAAE;QAAE,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC;QAAC,UAAU,CAAC,EAAE,OAAO,CAAA;KAAO;CAatD"}
\ No newline at end of file
diff --git a/dist/BaseProvider.d.mts b/dist/BaseProvider.d.mts
index 98b6fae43b78c76d100452d5f53d129630672ed6..522ea6d7ed80856ef63c70e9c8fb9645a6f2ee10 100644
--- a/dist/BaseProvider.d.mts
+++ b/dist/BaseProvider.d.mts
@@ -96,6 +96,7 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * @param initialState.chainId - The chain ID.
      * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.
      * @param initialState.networkVersion - The network version.
+     * @param initialState.isConnected - Whether the network is available.
      * @fires BaseProvider#_initialized - If `initialState` is defined.
      * @fires BaseProvider#connect - If `initialState` is defined.
      */
@@ -104,6 +105,7 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
         chainId: string;
         isUnlocked: boolean;
         networkVersion?: string;
+        isConnected?: boolean;
     }): void;
     /**
      * Internal RPC method. Forwards requests to background via the RPC engine.
@@ -118,10 +120,15 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * When the provider becomes connected, updates internal state and emits
      * required events. Idempotent.
      *
-     * @param chainId - The ID of the newly connected chain.
+     * @param networkInfo - The options object.
+     * @param networkInfo.chainId - The ID of the newly connected chain.
+     * @param networkInfo.isConnected - Whether the network is available.
      * @fires MetaMaskInpageProvider#connect
      */
-    protected _handleConnect(chainId: string): void;
+    protected _handleConnect({ chainId, isConnected, }: {
+        chainId: string;
+        isConnected?: boolean | undefined;
+    }): void;
     /**
      * When the provider becomes disconnected, updates internal state and emits
      * required events. Idempotent with respect to the isRecoverable parameter.
@@ -145,10 +152,12 @@ export declare abstract class BaseProvider extends SafeEventEmitter {
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, }?: {
-        chainId?: string | undefined;
+    protected _handleChainChanged({ chainId, isConnected, }?: {
+        chainId?: string;
         networkVersion?: string | undefined;
+        isConnected?: boolean | undefined;
     } | undefined): void;
     /**
      * Called when accounts may have changed. Diffs the new accounts value with
diff --git a/dist/BaseProvider.d.mts.map b/dist/BaseProvider.d.mts.map
index a3f28b3fa7ff6f8d79235e5dbe9ee1d4ec7a03c7..22ecc4cadb232efdf9b4502e6e286750c7131a88 100644
--- a/dist/BaseProvider.d.mts.map
+++ b/dist/BaseProvider.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"BaseProvider.d.mts","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"BaseProvider.d.mts","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/BaseProvider.mjs b/dist/BaseProvider.mjs
index 2a88b945be89d73d04a075508d6f2858a8c45feb..7bceb5f91ef9ce13c26145e190c29a092dc3f253 100644
--- a/dist/BaseProvider.mjs
+++ b/dist/BaseProvider.mjs
@@ -162,6 +162,7 @@ export class BaseProvider extends SafeEventEmitter {
      * @param initialState.chainId - The chain ID.
      * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.
      * @param initialState.networkVersion - The network version.
+     * @param initialState.isConnected - Whether the network is available.
      * @fires BaseProvider#_initialized - If `initialState` is defined.
      * @fires BaseProvider#connect - If `initialState` is defined.
      */
@@ -170,10 +171,10 @@ export class BaseProvider extends SafeEventEmitter {
             throw new Error('Provider already initialized.');
         }
         if (initialState) {
-            const { accounts, chainId, isUnlocked, networkVersion } = initialState;
+            const { accounts, chainId, isUnlocked, networkVersion, isConnected } = initialState;
             // EIP-1193 connect
-            this._handleConnect(chainId);
-            this._handleChainChanged({ chainId, networkVersion });
+            this._handleConnect({ chainId, isConnected });
+            this._handleChainChanged({ chainId, networkVersion, isConnected });
             this._handleUnlockStateChanged({ accounts, isUnlocked });
             this._handleAccountsChanged(accounts);
         }
@@ -212,11 +213,13 @@ export class BaseProvider extends SafeEventEmitter {
      * When the provider becomes connected, updates internal state and emits
      * required events. Idempotent.
      *
-     * @param chainId - The ID of the newly connected chain.
+     * @param networkInfo - The options object.
+     * @param networkInfo.chainId - The ID of the newly connected chain.
+     * @param networkInfo.isConnected - Whether the network is available.
      * @fires MetaMaskInpageProvider#connect
      */
-    _handleConnect(chainId) {
-        if (!this._state.isConnected) {
+    _handleConnect({ chainId, isConnected, }) {
+        if (!this._state.isConnected && isConnected) {
             this._state.isConnected = true;
             this.emit('connect', { chainId });
             this._log.debug(messages.info.connected(chainId));
@@ -267,13 +270,14 @@ export class BaseProvider extends SafeEventEmitter {
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, } = {}) {
+    _handleChainChanged({ chainId, isConnected, } = {}) {
         if (!isValidChainId(chainId)) {
             this._log.error(messages.errors.invalidNetworkParams(), { chainId });
             return;
         }
-        this._handleConnect(chainId);
+        this._handleConnect({ chainId, isConnected });
         if (chainId !== __classPrivateFieldGet(this, _BaseProvider_chainId, "f")) {
             __classPrivateFieldSet(this, _BaseProvider_chainId, chainId, "f");
             if (this._state.initialized) {
diff --git a/dist/BaseProvider.mjs.map b/dist/BaseProvider.mjs.map
index c7b8596ea0a3dbad9937a4f242fe9f28cfe999ee..463c46c2907b0f2ea09519b01123fc1a673ffd2b 100644
--- a/dist/BaseProvider.mjs.map
+++ b/dist/BaseProvider.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"BaseProvider.mjs","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { JsonRpcEngine } from '@metamask/json-rpc-engine';\nimport { rpcErrors, JsonRpcError } from '@metamask/rpc-errors';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type {\n  JsonRpcRequest,\n  JsonRpcId,\n  JsonRpcVersion2,\n  JsonRpcSuccess,\n  JsonRpcParams,\n  Json,\n} from '@metamask/utils';\nimport dequal from 'fast-deep-equal';\n\nimport messages from './messages';\nimport type { ConsoleLike, Maybe } from './utils';\nimport { getRpcPromiseCallback, isValidChainId } from './utils';\n\nexport type UnvalidatedJsonRpcRequest = {\n  id?: JsonRpcId;\n  jsonrpc?: JsonRpcVersion2;\n  method: string;\n  params?: unknown;\n};\n\nexport type BaseProviderOptions = {\n  /**\n   * The logging API to use.\n   */\n  logger?: ConsoleLike;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n\n  /**\n   * `@metamask/json-rpc-engine` middleware. The middleware will be inserted in the given\n   * order immediately after engine initialization.\n   */\n  rpcMiddleware?: JsonRpcMiddleware<JsonRpcParams, Json>[];\n};\n\nexport type RequestArguments = {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n};\n\nexport type BaseProviderState = {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n};\n\n/**\n * An abstract class implementing the EIP-1193 interface. Implementers must:\n *\n * 1. At initialization, push a middleware to the internal `_rpcEngine` that\n * hands off requests to the server and receives responses in return.\n * 2. At initialization, retrieve initial state and call\n * {@link BaseProvider._initializeState} **once**.\n * 3. Ensure that the provider's state is synchronized with the wallet.\n * 4. Ensure that notifications are received and emitted as appropriate.\n */\nexport abstract class BaseProvider extends SafeEventEmitter {\n  protected readonly _log: ConsoleLike;\n\n  protected _state: BaseProviderState;\n\n  protected _rpcEngine: JsonRpcEngine;\n\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  #chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  #selectedAddress: string | null;\n\n  /**\n   * Create a new instance of the provider.\n   *\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack. Default: [].\n   */\n  constructor({\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = [],\n  }: BaseProviderOptions = {}) {\n    super();\n\n    this._log = logger;\n\n    this.setMaxListeners(maxEventListeners);\n\n    // Private state\n    this._state = {\n      ...BaseProvider._defaultState,\n    };\n\n    // Public state\n    this.#selectedAddress = null;\n    this.#chainId = null;\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this.request = this.request.bind(this);\n\n    // Handle RPC requests via dapp-side RPC engine.\n    //\n    // ATTN: Implementers must push a middleware that hands off requests to\n    // the server.\n    const rpcEngine = new JsonRpcEngine();\n    rpcMiddleware.forEach((middleware) => rpcEngine.push(middleware));\n    this._rpcEngine = rpcEngine;\n  }\n\n  //====================\n  // Public Properties\n  //====================\n\n  get chainId(): string | null {\n    return this.#chainId;\n  }\n\n  get selectedAddress(): string | null {\n    return this.#selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Returns whether the provider can process RPC requests.\n   *\n   * @returns Whether the provider can process RPC requests.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @param args.method - The RPC method name.\n   * @param args.params - The parameters for the RPC method.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<Type>(args: RequestArguments): Promise<Maybe<Type>> {\n    if (!args || typeof args !== 'object' || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== 'string' || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (\n      params !== undefined &&\n      !Array.isArray(params) &&\n      (typeof params !== 'object' || params === null)\n    ) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    const payload =\n      params === undefined || params === null\n        ? {\n            method,\n          }\n        : {\n            method,\n            params,\n          };\n\n    return new Promise<Type>((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Sets initial state if provided and marks this provider as initialized.\n   * Throws if called more than once.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @param initialState - The provider's initial state.\n   * @param initialState.accounts - The user's accounts.\n   * @param initialState.chainId - The chain ID.\n   * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.\n   * @param initialState.networkVersion - The network version.\n   * @fires BaseProvider#_initialized - If `initialState` is defined.\n   * @fires BaseProvider#connect - If `initialState` is defined.\n   */\n  protected _initializeState(initialState?: {\n    accounts: string[];\n    chainId: string;\n    isUnlocked: boolean;\n    networkVersion?: string;\n  }) {\n    if (this._state.initialized) {\n      throw new Error('Provider already initialized.');\n    }\n\n    if (initialState) {\n      const { accounts, chainId, isUnlocked, networkVersion } = initialState;\n\n      // EIP-1193 connect\n      this._handleConnect(chainId);\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    }\n\n    // Mark provider as initialized regardless of whether initial state was\n    // retrieved.\n    this._state.initialized = true;\n    this.emit('_initialized');\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @returns The result of the RPC request.\n   */\n  protected _rpcRequest(\n    payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[],\n    callback: (...args: any[]) => void,\n  ) {\n    let callbackWrapper = callback;\n\n    if (!Array.isArray(payload)) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = '2.0';\n      }\n\n      if (\n        payload.method === 'eth_accounts' ||\n        payload.method === 'eth_requestAccounts'\n      ) {\n        // handle accounts changing\n        callbackWrapper = (\n          error: Error,\n          response: JsonRpcSuccess<string[]>,\n        ) => {\n          this._handleAccountsChanged(\n            response.result ?? [],\n            payload.method === 'eth_accounts',\n          );\n          callback(error, response);\n        };\n      }\n      return this._rpcEngine.handle(payload as JsonRpcRequest, callbackWrapper);\n    }\n    return this._rpcEngine.handle(payload as JsonRpcRequest[], callbackWrapper);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * @fires MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit('connect', { chainId });\n      this._log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    if (\n      this._state.isConnected ||\n      (!this._state.isPermanentlyDisconnected && !isRecoverable)\n    ) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new JsonRpcError(\n          1013, // Try again later\n          errorMessage ?? messages.errors.disconnected(),\n        );\n        this._log.debug(error);\n      } else {\n        error = new JsonRpcError(\n          1011, // Internal error\n          errorMessage ?? messages.errors.permanentlyDisconnected(),\n        );\n        this._log.error(error);\n        this.#chainId = null;\n        this._state.accounts = null;\n        this.#selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit('disconnect', error);\n    }\n  }\n\n  /**\n   * Upon receipt of a new `chainId`, emits the corresponding event and sets\n   * and sets relevant public state. Does nothing if the given `chainId` is\n   * equivalent to the existing value.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n  }:\n    | { chainId?: string | undefined; networkVersion?: string | undefined }\n    | undefined = {}) {\n    if (!isValidChainId(chainId)) {\n      this._log.error(messages.errors.invalidNetworkParams(), { chainId });\n      return;\n    }\n\n    this._handleConnect(chainId);\n\n    if (chainId !== this.#chainId) {\n      this.#chainId = chainId;\n      if (this._state.initialized) {\n        this.emit('chainChanged', this.#chainId);\n      }\n    }\n  }\n\n  /**\n   * Called when accounts may have changed. Diffs the new accounts value with\n   * the current one, updates all state as necessary, and emits the\n   * accountsChanged event.\n   *\n   * @param accounts - The new accounts value.\n   * @param isEthAccounts - Whether the accounts value was returned by\n   * a call to eth_accounts.\n   */\n  protected _handleAccountsChanged(\n    accounts: unknown[],\n    isEthAccounts = false,\n  ): void {\n    let _accounts = accounts;\n\n    if (!Array.isArray(accounts)) {\n      this._log.error(\n        'MetaMask: Received invalid accounts parameter. Please report this bug.',\n        accounts,\n      );\n      _accounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== 'string') {\n        this._log.error(\n          'MetaMask: Received non-string account. Please report this bug.',\n          accounts,\n        );\n        _accounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, _accounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns\n      if (isEthAccounts && this._state.accounts !== null) {\n        this._log.error(\n          `MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.`,\n          _accounts,\n        );\n      }\n\n      this._state.accounts = _accounts as string[];\n\n      // handle selectedAddress\n      if (this.#selectedAddress !== _accounts[0]) {\n        this.#selectedAddress = (_accounts[0] as string) || null;\n      }\n\n      // finally, after all state has been updated, emit the event\n      if (this._state.initialized) {\n        const _nextAccounts = [..._accounts];\n        this.emit('accountsChanged', _nextAccounts);\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   * @param opts.accounts - The exposed accounts, if any.\n   * @param opts.isUnlocked - The latest isUnlocked value.\n   */\n  protected _handleUnlockStateChanged({\n    accounts,\n    isUnlocked,\n  }: { accounts?: string[]; isUnlocked?: boolean } = {}) {\n    if (typeof isUnlocked !== 'boolean') {\n      this._log.error(\n        'MetaMask: Received invalid isUnlocked parameter. Please report this bug.',\n      );\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts ?? []);\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"BaseProvider.mjs","sourceRoot":"","sources":["../src/BaseProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { JsonRpcEngine } from '@metamask/json-rpc-engine';\nimport { rpcErrors, JsonRpcError } from '@metamask/rpc-errors';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type {\n  JsonRpcRequest,\n  JsonRpcId,\n  JsonRpcVersion2,\n  JsonRpcSuccess,\n  JsonRpcParams,\n  Json,\n} from '@metamask/utils';\nimport dequal from 'fast-deep-equal';\n\nimport messages from './messages';\nimport type { ConsoleLike, Maybe } from './utils';\nimport { getRpcPromiseCallback, isValidChainId } from './utils';\n\nexport type UnvalidatedJsonRpcRequest = {\n  id?: JsonRpcId;\n  jsonrpc?: JsonRpcVersion2;\n  method: string;\n  params?: unknown;\n};\n\nexport type BaseProviderOptions = {\n  /**\n   * The logging API to use.\n   */\n  logger?: ConsoleLike;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n\n  /**\n   * `@metamask/json-rpc-engine` middleware. The middleware will be inserted in the given\n   * order immediately after engine initialization.\n   */\n  rpcMiddleware?: JsonRpcMiddleware<JsonRpcParams, Json>[];\n};\n\nexport type RequestArguments = {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n};\n\nexport type BaseProviderState = {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n};\n\n/**\n * An abstract class implementing the EIP-1193 interface. Implementers must:\n *\n * 1. At initialization, push a middleware to the internal `_rpcEngine` that\n * hands off requests to the server and receives responses in return.\n * 2. At initialization, retrieve initial state and call\n * {@link BaseProvider._initializeState} **once**.\n * 3. Ensure that the provider's state is synchronized with the wallet.\n * 4. Ensure that notifications are received and emitted as appropriate.\n */\nexport abstract class BaseProvider extends SafeEventEmitter {\n  protected readonly _log: ConsoleLike;\n\n  protected _state: BaseProviderState;\n\n  protected _rpcEngine: JsonRpcEngine;\n\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  #chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  #selectedAddress: string | null;\n\n  /**\n   * Create a new instance of the provider.\n   *\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack. Default: [].\n   */\n  constructor({\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = [],\n  }: BaseProviderOptions = {}) {\n    super();\n\n    this._log = logger;\n\n    this.setMaxListeners(maxEventListeners);\n\n    // Private state\n    this._state = {\n      ...BaseProvider._defaultState,\n    };\n\n    // Public state\n    this.#selectedAddress = null;\n    this.#chainId = null;\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this.request = this.request.bind(this);\n\n    // Handle RPC requests via dapp-side RPC engine.\n    //\n    // ATTN: Implementers must push a middleware that hands off requests to\n    // the server.\n    const rpcEngine = new JsonRpcEngine();\n    rpcMiddleware.forEach((middleware) => rpcEngine.push(middleware));\n    this._rpcEngine = rpcEngine;\n  }\n\n  //====================\n  // Public Properties\n  //====================\n\n  get chainId(): string | null {\n    return this.#chainId;\n  }\n\n  get selectedAddress(): string | null {\n    return this.#selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Returns whether the provider can process RPC requests.\n   *\n   * @returns Whether the provider can process RPC requests.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @param args.method - The RPC method name.\n   * @param args.params - The parameters for the RPC method.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<Type>(args: RequestArguments): Promise<Maybe<Type>> {\n    if (!args || typeof args !== 'object' || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== 'string' || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (\n      params !== undefined &&\n      !Array.isArray(params) &&\n      (typeof params !== 'object' || params === null)\n    ) {\n      throw rpcErrors.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    const payload =\n      params === undefined || params === null\n        ? {\n            method,\n          }\n        : {\n            method,\n            params,\n          };\n\n    return new Promise<Type>((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Sets initial state if provided and marks this provider as initialized.\n   * Throws if called more than once.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @param initialState - The provider's initial state.\n   * @param initialState.accounts - The user's accounts.\n   * @param initialState.chainId - The chain ID.\n   * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.\n   * @param initialState.networkVersion - The network version.\n   * @param initialState.isConnected - Whether the network is available.\n   * @fires BaseProvider#_initialized - If `initialState` is defined.\n   * @fires BaseProvider#connect - If `initialState` is defined.\n   */\n  protected _initializeState(initialState?: {\n    accounts: string[];\n    chainId: string;\n    isUnlocked: boolean;\n    networkVersion?: string;\n    isConnected?: boolean;\n  }) {\n    if (this._state.initialized) {\n      throw new Error('Provider already initialized.');\n    }\n\n    if (initialState) {\n      const { accounts, chainId, isUnlocked, networkVersion, isConnected } =\n        initialState;\n\n      // EIP-1193 connect\n      this._handleConnect({ chainId, isConnected });\n      this._handleChainChanged({ chainId, networkVersion, isConnected });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    }\n\n    // Mark provider as initialized regardless of whether initial state was\n    // retrieved.\n    this._state.initialized = true;\n    this.emit('_initialized');\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @returns The result of the RPC request.\n   */\n  protected _rpcRequest(\n    payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[],\n    callback: (...args: any[]) => void,\n  ) {\n    let callbackWrapper = callback;\n\n    if (!Array.isArray(payload)) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = '2.0';\n      }\n\n      if (\n        payload.method === 'eth_accounts' ||\n        payload.method === 'eth_requestAccounts'\n      ) {\n        // handle accounts changing\n        callbackWrapper = (\n          error: Error,\n          response: JsonRpcSuccess<string[]>,\n        ) => {\n          this._handleAccountsChanged(\n            response.result ?? [],\n            payload.method === 'eth_accounts',\n          );\n          callback(error, response);\n        };\n      }\n      return this._rpcEngine.handle(payload as JsonRpcRequest, callbackWrapper);\n    }\n    return this._rpcEngine.handle(payload as JsonRpcRequest[], callbackWrapper);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param networkInfo - The options object.\n   * @param networkInfo.chainId - The ID of the newly connected chain.\n   * @param networkInfo.isConnected - Whether the network is available.\n   * @fires MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect({\n    chainId,\n    isConnected,\n  }: {\n    chainId: string;\n    isConnected?: boolean | undefined;\n  }) {\n    if (!this._state.isConnected && isConnected) {\n      this._state.isConnected = true;\n      this.emit('connect', { chainId });\n      this._log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    if (\n      this._state.isConnected ||\n      (!this._state.isPermanentlyDisconnected && !isRecoverable)\n    ) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new JsonRpcError(\n          1013, // Try again later\n          errorMessage ?? messages.errors.disconnected(),\n        );\n        this._log.debug(error);\n      } else {\n        error = new JsonRpcError(\n          1011, // Internal error\n          errorMessage ?? messages.errors.permanentlyDisconnected(),\n        );\n        this._log.error(error);\n        this.#chainId = null;\n        this._state.accounts = null;\n        this.#selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit('disconnect', error);\n    }\n  }\n\n  /**\n   * Upon receipt of a new `chainId`, emits the corresponding event and sets\n   * and sets relevant public state. Does nothing if the given `chainId` is\n   * equivalent to the existing value.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    isConnected,\n  }:\n    | {\n        chainId?: string;\n        networkVersion?: string | undefined;\n        isConnected?: boolean | undefined;\n      }\n    | undefined = {}) {\n    if (!isValidChainId(chainId)) {\n      this._log.error(messages.errors.invalidNetworkParams(), { chainId });\n      return;\n    }\n\n    this._handleConnect({ chainId, isConnected });\n\n    if (chainId !== this.#chainId) {\n      this.#chainId = chainId;\n      if (this._state.initialized) {\n        this.emit('chainChanged', this.#chainId);\n      }\n    }\n  }\n\n  /**\n   * Called when accounts may have changed. Diffs the new accounts value with\n   * the current one, updates all state as necessary, and emits the\n   * accountsChanged event.\n   *\n   * @param accounts - The new accounts value.\n   * @param isEthAccounts - Whether the accounts value was returned by\n   * a call to eth_accounts.\n   */\n  protected _handleAccountsChanged(\n    accounts: unknown[],\n    isEthAccounts = false,\n  ): void {\n    let _accounts = accounts;\n\n    if (!Array.isArray(accounts)) {\n      this._log.error(\n        'MetaMask: Received invalid accounts parameter. Please report this bug.',\n        accounts,\n      );\n      _accounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== 'string') {\n        this._log.error(\n          'MetaMask: Received non-string account. Please report this bug.',\n          accounts,\n        );\n        _accounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, _accounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns\n      if (isEthAccounts && this._state.accounts !== null) {\n        this._log.error(\n          `MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.`,\n          _accounts,\n        );\n      }\n\n      this._state.accounts = _accounts as string[];\n\n      // handle selectedAddress\n      if (this.#selectedAddress !== _accounts[0]) {\n        this.#selectedAddress = (_accounts[0] as string) || null;\n      }\n\n      // finally, after all state has been updated, emit the event\n      if (this._state.initialized) {\n        const _nextAccounts = [..._accounts];\n        this.emit('accountsChanged', _nextAccounts);\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   * @param opts.accounts - The exposed accounts, if any.\n   * @param opts.isUnlocked - The latest isUnlocked value.\n   */\n  protected _handleUnlockStateChanged({\n    accounts,\n    isUnlocked,\n  }: { accounts?: string[]; isUnlocked?: boolean } = {}) {\n    if (typeof isUnlocked !== 'boolean') {\n      this._log.error(\n        'MetaMask: Received invalid isUnlocked parameter. Please report this bug.',\n      );\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts ?? []);\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/CAIP294.cjs b/dist/CAIP294.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..03d4496c51e639aa27792545724e0cefc6638892
--- /dev/null
+++ b/dist/CAIP294.cjs
@@ -0,0 +1,134 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.CAIP294EventNames = void 0;
+exports.announceWallet = announceWallet;
+exports.requestWallet = requestWallet;
+const utils_1 = require("@metamask/utils");
+const utils_2 = require("./utils.cjs");
+/**
+ * Describes the possible CAIP-294 event names
+ */
+var CAIP294EventNames;
+(function (CAIP294EventNames) {
+    CAIP294EventNames["Announce"] = "caip294:wallet_announce";
+    CAIP294EventNames["Prompt"] = "caip294:wallet_prompt";
+})(CAIP294EventNames || (exports.CAIP294EventNames = CAIP294EventNames = {}));
+/**
+ * Validates an {@link CAIP294RequestWalletEvent} object.
+ *
+ * @param event - The {@link CAIP294RequestWalletEvent} to validate.
+ * @returns Whether the {@link CAIP294RequestWalletEvent} is valid.
+ */
+function isValidRequestWalletEvent(event) {
+    return (event instanceof CustomEvent &&
+        event.type === CAIP294EventNames.Prompt &&
+        (0, utils_1.isObject)(event.detail) &&
+        event.detail.method === 'wallet_prompt' &&
+        isValidWalletPromptParams(event.detail.params));
+}
+/**
+ * Validates a {@link CAIP294RequestWalletEvent} params field.
+ *
+ * @param params - The parameters to validate.
+ * @returns Whether the parameters are valid.
+ */
+function isValidWalletPromptParams(params) {
+    const isValidChains = params.chains === undefined ||
+        (Array.isArray(params.chains) &&
+            params.chains.every((chain) => typeof chain === 'string'));
+    const isValidAuthName = params.authName === undefined || typeof params.authName === 'string';
+    return isValidChains && isValidAuthName;
+}
+/**
+ * Validates an {@link CAIP294AnnounceWalletEvent} object.
+ *
+ * @param event - The {@link CAIP294AnnounceWalletEvent} to validate.
+ * @returns Whether the {@link CAIP294AnnounceWalletEvent} is valid.
+ */
+function isValidAnnounceWalletEvent(event) {
+    return (event instanceof CustomEvent &&
+        event.type === CAIP294EventNames.Announce &&
+        (0, utils_1.isObject)(event.detail) &&
+        event.detail.method === 'wallet_announce' &&
+        isValidWalletData(event.detail.params));
+}
+/**
+ * Validates an {@link CAIP294WalletData} object.
+ *
+ * @param data - The {@link CAIP294WalletData} to validate.
+ * @returns Whether the {@link CAIP294WalletData} is valid.
+ */
+function isValidWalletData(data) {
+    return ((0, utils_1.isObject)(data) &&
+        typeof data.uuid === 'string' &&
+        utils_2.UUID_V4_REGEX.test(data.uuid) &&
+        typeof data.name === 'string' &&
+        Boolean(data.name) &&
+        typeof data.icon === 'string' &&
+        data.icon.startsWith('data:image') &&
+        typeof data.rdns === 'string' &&
+        utils_2.FQDN_REGEX.test(data.rdns) &&
+        (data.extensionId === undefined ||
+            (typeof data.extensionId === 'string' && data.extensionId.length > 0)));
+}
+/**
+ * Intended to be used by a wallet. Announces a wallet by dispatching
+ * an {@link CAIP294AnnounceWalletEvent}, and listening for
+ * {@link CAIP294RequestWalletEvent} to re-announce.
+ *
+ * @throws If the {@link CAIP294WalletData} is invalid.
+ * @param walletData - The {@link CAIP294WalletData} to announce.
+ */
+function announceWallet(walletData) {
+    if (!isValidWalletData(walletData)) {
+        throwErrorCAIP294(`Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Prompt}.`);
+    }
+    const _announceWallet = () => window.dispatchEvent(new CustomEvent(CAIP294EventNames.Announce, {
+        detail: {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'wallet_announce',
+            params: walletData,
+        },
+    }));
+    _announceWallet();
+    window.addEventListener(CAIP294EventNames.Prompt, (event) => {
+        if (!isValidRequestWalletEvent(event)) {
+            throwErrorCAIP294(`Invalid CAIP-294 RequestWalletEvent object received from ${CAIP294EventNames.Prompt}.`);
+        }
+        _announceWallet();
+    });
+}
+/**
+ * Intended to be used by a dapp. Forwards announced wallet to the
+ * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},
+ * and dispatches an {@link CAIP294RequestWalletEvent}.
+ *
+ * @param handleWallet - A function that handles an announced wallet.
+ */
+function requestWallet(handleWallet) {
+    window.addEventListener(CAIP294EventNames.Announce, (event) => {
+        if (!isValidAnnounceWalletEvent(event)) {
+            throwErrorCAIP294(`Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Announce}.`);
+        }
+        handleWallet(event.detail);
+    });
+    window.dispatchEvent(new CustomEvent(CAIP294EventNames.Prompt, {
+        detail: {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'wallet_prompt',
+            params: {},
+        },
+    }));
+}
+/**
+ * Throws an error with link to CAIP-294 specifications.
+ *
+ * @param message - The message to include.
+ * @throws a friendly error with a link to CAIP-294.
+ */
+function throwErrorCAIP294(message) {
+    throw new Error(`${message} See https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md for requirements.`);
+}
+//# sourceMappingURL=CAIP294.cjs.map
\ No newline at end of file
diff --git a/dist/CAIP294.cjs.map b/dist/CAIP294.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..b0a4b317f1d8ae5b7e42c773303aa69a9ed1ba19
--- /dev/null
+++ b/dist/CAIP294.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"CAIP294.cjs","sourceRoot":"","sources":["../src/CAIP294.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProviderInfo } from './types';\nimport { FQDN_REGEX, UUID_V4_REGEX } from './utils';\n\n/**\n * Describes the possible CAIP-294 event names\n */\nexport enum CAIP294EventNames {\n  Announce = 'caip294:wallet_announce',\n  Prompt = 'caip294:wallet_prompt',\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [CAIP294EventNames.Prompt]: CAIP294RequestWalletEvent;\n    [CAIP294EventNames.Announce]: CAIP294AnnounceWalletEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n * @type CAIP294WalletData\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n * @property extensionId - The canonical extension ID of the wallet provider for the active browser.\n */\nexport type CAIP294WalletData = BaseProviderInfo & {\n  extensionId?: string | undefined;\n};\n\n/**\n * Event for requesting a wallet.\n *\n * @type CAIP294RequestWalletEvent\n * @property detail - The detail object of the event.\n * @property type - The name of the event.\n */\nexport type CAIP294RequestWalletEvent = CustomEvent & {\n  detail: {\n    id: number;\n    jsonrpc: '2.0';\n    method: 'wallet_prompt';\n    params: Record<string, any>;\n  };\n  type: CAIP294EventNames.Prompt;\n};\n\n/**\n * Event for announcing a wallet.\n *\n * @type CAIP294AnnounceWalletEvent\n * @property detail - The detail object of the event.\n * @property type - The name of the event.\n */\nexport type CAIP294AnnounceWalletEvent = CustomEvent & {\n  detail: {\n    id: number;\n    jsonrpc: '2.0';\n    method: 'wallet_announce';\n    params: CAIP294WalletData;\n  };\n  type: CAIP294EventNames.Announce;\n};\n\n/**\n * Validates an {@link CAIP294RequestWalletEvent} object.\n *\n * @param event - The {@link CAIP294RequestWalletEvent} to validate.\n * @returns Whether the {@link CAIP294RequestWalletEvent} is valid.\n */\nfunction isValidRequestWalletEvent(\n  event: unknown,\n): event is CAIP294RequestWalletEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === CAIP294EventNames.Prompt &&\n    isObject(event.detail) &&\n    event.detail.method === 'wallet_prompt' &&\n    isValidWalletPromptParams(event.detail.params)\n  );\n}\n\n/**\n * Validates a {@link CAIP294RequestWalletEvent} params field.\n *\n * @param params - The parameters to validate.\n * @returns Whether the parameters are valid.\n */\nfunction isValidWalletPromptParams(params: any): params is Record<string, any> {\n  const isValidChains =\n    params.chains === undefined ||\n    (Array.isArray(params.chains) &&\n      params.chains.every((chain: any) => typeof chain === 'string'));\n\n  const isValidAuthName =\n    params.authName === undefined || typeof params.authName === 'string';\n\n  return isValidChains && isValidAuthName;\n}\n\n/**\n * Validates an {@link CAIP294AnnounceWalletEvent} object.\n *\n * @param event - The {@link CAIP294AnnounceWalletEvent} to validate.\n * @returns Whether the {@link CAIP294AnnounceWalletEvent} is valid.\n */\nfunction isValidAnnounceWalletEvent(\n  event: unknown,\n): event is CAIP294AnnounceWalletEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === CAIP294EventNames.Announce &&\n    isObject(event.detail) &&\n    event.detail.method === 'wallet_announce' &&\n    isValidWalletData(event.detail.params)\n  );\n}\n\n/**\n * Validates an {@link CAIP294WalletData} object.\n *\n * @param data - The {@link CAIP294WalletData} to validate.\n * @returns Whether the {@link CAIP294WalletData} is valid.\n */\nfunction isValidWalletData(data: unknown): data is CAIP294WalletData {\n  return (\n    isObject(data) &&\n    typeof data.uuid === 'string' &&\n    UUID_V4_REGEX.test(data.uuid) &&\n    typeof data.name === 'string' &&\n    Boolean(data.name) &&\n    typeof data.icon === 'string' &&\n    data.icon.startsWith('data:image') &&\n    typeof data.rdns === 'string' &&\n    FQDN_REGEX.test(data.rdns) &&\n    (data.extensionId === undefined ||\n      (typeof data.extensionId === 'string' && data.extensionId.length > 0))\n  );\n}\n\n/**\n * Intended to be used by a wallet. Announces a wallet by dispatching\n * an {@link CAIP294AnnounceWalletEvent}, and listening for\n * {@link CAIP294RequestWalletEvent} to re-announce.\n *\n * @throws If the {@link CAIP294WalletData} is invalid.\n * @param walletData - The {@link CAIP294WalletData} to announce.\n */\nexport function announceWallet(walletData: CAIP294WalletData): void {\n  if (!isValidWalletData(walletData)) {\n    throwErrorCAIP294(\n      `Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Prompt}.`,\n    );\n  }\n\n  const _announceWallet = () =>\n    window.dispatchEvent(\n      new CustomEvent(CAIP294EventNames.Announce, {\n        detail: {\n          id: 1,\n          jsonrpc: '2.0',\n          method: 'wallet_announce',\n          params: walletData,\n        },\n      }),\n    );\n\n  _announceWallet();\n  window.addEventListener(\n    CAIP294EventNames.Prompt,\n    (event: CAIP294RequestWalletEvent) => {\n      if (!isValidRequestWalletEvent(event)) {\n        throwErrorCAIP294(\n          `Invalid CAIP-294 RequestWalletEvent object received from ${CAIP294EventNames.Prompt}.`,\n        );\n      }\n      _announceWallet();\n    },\n  );\n}\n\n/**\n * Intended to be used by a dapp. Forwards announced wallet to the\n * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},\n * and dispatches an {@link CAIP294RequestWalletEvent}.\n *\n * @param handleWallet - A function that handles an announced wallet.\n */\nexport function requestWallet<HandlerReturnType>(\n  handleWallet: (walletData: CAIP294WalletData) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    CAIP294EventNames.Announce,\n    (event: CAIP294AnnounceWalletEvent) => {\n      if (!isValidAnnounceWalletEvent(event)) {\n        throwErrorCAIP294(\n          `Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Announce}.`,\n        );\n      }\n      handleWallet(event.detail);\n    },\n  );\n\n  window.dispatchEvent(\n    new CustomEvent(CAIP294EventNames.Prompt, {\n      detail: {\n        id: 1,\n        jsonrpc: '2.0',\n        method: 'wallet_prompt',\n        params: {},\n      },\n    }),\n  );\n}\n\n/**\n * Throws an error with link to CAIP-294 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to CAIP-294.\n */\nfunction throwErrorCAIP294(message: string) {\n  throw new Error(\n    `${message} See https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
diff --git a/dist/CAIP294.d.cts b/dist/CAIP294.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..e65b82aa36e01fdb5d2c815cf080e57ce3ce4b14
--- /dev/null
+++ b/dist/CAIP294.d.cts
@@ -0,0 +1,76 @@
+import type { BaseProviderInfo } from "./types.cjs";
+/**
+ * Describes the possible CAIP-294 event names
+ */
+export declare enum CAIP294EventNames {
+    Announce = "caip294:wallet_announce",
+    Prompt = "caip294:wallet_prompt"
+}
+declare global {
+    interface WindowEventMap {
+        [CAIP294EventNames.Prompt]: CAIP294RequestWalletEvent;
+        [CAIP294EventNames.Announce]: CAIP294AnnounceWalletEvent;
+    }
+}
+/**
+ * Represents the assets needed to display and identify a wallet.
+ * @type CAIP294WalletData
+ * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.
+ * @property name - The name of the wallet.
+ * @property icon - The icon for the wallet. MUST be data URI.
+ * @property rdns - The reverse syntax domain name identifier for the wallet.
+ * @property extensionId - The canonical extension ID of the wallet provider for the active browser.
+ */
+export type CAIP294WalletData = BaseProviderInfo & {
+    extensionId?: string | undefined;
+};
+/**
+ * Event for requesting a wallet.
+ *
+ * @type CAIP294RequestWalletEvent
+ * @property detail - The detail object of the event.
+ * @property type - The name of the event.
+ */
+export type CAIP294RequestWalletEvent = CustomEvent & {
+    detail: {
+        id: number;
+        jsonrpc: '2.0';
+        method: 'wallet_prompt';
+        params: Record<string, any>;
+    };
+    type: CAIP294EventNames.Prompt;
+};
+/**
+ * Event for announcing a wallet.
+ *
+ * @type CAIP294AnnounceWalletEvent
+ * @property detail - The detail object of the event.
+ * @property type - The name of the event.
+ */
+export type CAIP294AnnounceWalletEvent = CustomEvent & {
+    detail: {
+        id: number;
+        jsonrpc: '2.0';
+        method: 'wallet_announce';
+        params: CAIP294WalletData;
+    };
+    type: CAIP294EventNames.Announce;
+};
+/**
+ * Intended to be used by a wallet. Announces a wallet by dispatching
+ * an {@link CAIP294AnnounceWalletEvent}, and listening for
+ * {@link CAIP294RequestWalletEvent} to re-announce.
+ *
+ * @throws If the {@link CAIP294WalletData} is invalid.
+ * @param walletData - The {@link CAIP294WalletData} to announce.
+ */
+export declare function announceWallet(walletData: CAIP294WalletData): void;
+/**
+ * Intended to be used by a dapp. Forwards announced wallet to the
+ * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},
+ * and dispatches an {@link CAIP294RequestWalletEvent}.
+ *
+ * @param handleWallet - A function that handles an announced wallet.
+ */
+export declare function requestWallet<HandlerReturnType>(handleWallet: (walletData: CAIP294WalletData) => HandlerReturnType): void;
+//# sourceMappingURL=CAIP294.d.cts.map
\ No newline at end of file
diff --git a/dist/CAIP294.d.cts.map b/dist/CAIP294.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..66ebdcae02e7729a4b4bd65974bf3946cbb6e4c3
--- /dev/null
+++ b/dist/CAIP294.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CAIP294.d.cts","sourceRoot":"","sources":["../src/CAIP294.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAGhD;;GAEG;AACH,oBAAY,iBAAiB;IAC3B,QAAQ,4BAA4B;IACpC,MAAM,0BAA0B;CACjC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,yBAAyB,CAAC;QACtD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,0BAA0B,CAAC;KAC1D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,iBAAiB,GAAG,gBAAgB,GAAG;IACjD,WAAW,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;CAClC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,yBAAyB,GAAG,WAAW,GAAG;IACpD,MAAM,EAAE;QACN,EAAE,EAAE,MAAM,CAAC;QACX,OAAO,EAAE,KAAK,CAAC;QACf,MAAM,EAAE,eAAe,CAAC;QACxB,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC7B,CAAC;IACF,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,0BAA0B,GAAG,WAAW,GAAG;IACrD,MAAM,EAAE;QACN,EAAE,EAAE,MAAM,CAAC;QACX,OAAO,EAAE,KAAK,CAAC;QACf,MAAM,EAAE,iBAAiB,CAAC;QAC1B,MAAM,EAAE,iBAAiB,CAAC;KAC3B,CAAC;IACF,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;CAClC,CAAC;AA8EF;;;;;;;GAOG;AACH,wBAAgB,cAAc,CAAC,UAAU,EAAE,iBAAiB,GAAG,IAAI,CA+BlE;AAED;;;;;;GAMG;AACH,wBAAgB,aAAa,CAAC,iBAAiB,EAC7C,YAAY,EAAE,CAAC,UAAU,EAAE,iBAAiB,KAAK,iBAAiB,GACjE,IAAI,CAuBN"}
\ No newline at end of file
diff --git a/dist/CAIP294.d.mts b/dist/CAIP294.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..b23d670b5c34d88deb32332cfc888e7b1467ac88
--- /dev/null
+++ b/dist/CAIP294.d.mts
@@ -0,0 +1,76 @@
+import type { BaseProviderInfo } from "./types.mjs";
+/**
+ * Describes the possible CAIP-294 event names
+ */
+export declare enum CAIP294EventNames {
+    Announce = "caip294:wallet_announce",
+    Prompt = "caip294:wallet_prompt"
+}
+declare global {
+    interface WindowEventMap {
+        [CAIP294EventNames.Prompt]: CAIP294RequestWalletEvent;
+        [CAIP294EventNames.Announce]: CAIP294AnnounceWalletEvent;
+    }
+}
+/**
+ * Represents the assets needed to display and identify a wallet.
+ * @type CAIP294WalletData
+ * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.
+ * @property name - The name of the wallet.
+ * @property icon - The icon for the wallet. MUST be data URI.
+ * @property rdns - The reverse syntax domain name identifier for the wallet.
+ * @property extensionId - The canonical extension ID of the wallet provider for the active browser.
+ */
+export type CAIP294WalletData = BaseProviderInfo & {
+    extensionId?: string | undefined;
+};
+/**
+ * Event for requesting a wallet.
+ *
+ * @type CAIP294RequestWalletEvent
+ * @property detail - The detail object of the event.
+ * @property type - The name of the event.
+ */
+export type CAIP294RequestWalletEvent = CustomEvent & {
+    detail: {
+        id: number;
+        jsonrpc: '2.0';
+        method: 'wallet_prompt';
+        params: Record<string, any>;
+    };
+    type: CAIP294EventNames.Prompt;
+};
+/**
+ * Event for announcing a wallet.
+ *
+ * @type CAIP294AnnounceWalletEvent
+ * @property detail - The detail object of the event.
+ * @property type - The name of the event.
+ */
+export type CAIP294AnnounceWalletEvent = CustomEvent & {
+    detail: {
+        id: number;
+        jsonrpc: '2.0';
+        method: 'wallet_announce';
+        params: CAIP294WalletData;
+    };
+    type: CAIP294EventNames.Announce;
+};
+/**
+ * Intended to be used by a wallet. Announces a wallet by dispatching
+ * an {@link CAIP294AnnounceWalletEvent}, and listening for
+ * {@link CAIP294RequestWalletEvent} to re-announce.
+ *
+ * @throws If the {@link CAIP294WalletData} is invalid.
+ * @param walletData - The {@link CAIP294WalletData} to announce.
+ */
+export declare function announceWallet(walletData: CAIP294WalletData): void;
+/**
+ * Intended to be used by a dapp. Forwards announced wallet to the
+ * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},
+ * and dispatches an {@link CAIP294RequestWalletEvent}.
+ *
+ * @param handleWallet - A function that handles an announced wallet.
+ */
+export declare function requestWallet<HandlerReturnType>(handleWallet: (walletData: CAIP294WalletData) => HandlerReturnType): void;
+//# sourceMappingURL=CAIP294.d.mts.map
\ No newline at end of file
diff --git a/dist/CAIP294.d.mts.map b/dist/CAIP294.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..8414bef9c08760fa73e893a8b1c84c662e6359ac
--- /dev/null
+++ b/dist/CAIP294.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CAIP294.d.mts","sourceRoot":"","sources":["../src/CAIP294.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAGhD;;GAEG;AACH,oBAAY,iBAAiB;IAC3B,QAAQ,4BAA4B;IACpC,MAAM,0BAA0B;CACjC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,yBAAyB,CAAC;QACtD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,0BAA0B,CAAC;KAC1D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,iBAAiB,GAAG,gBAAgB,GAAG;IACjD,WAAW,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;CAClC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,yBAAyB,GAAG,WAAW,GAAG;IACpD,MAAM,EAAE;QACN,EAAE,EAAE,MAAM,CAAC;QACX,OAAO,EAAE,KAAK,CAAC;QACf,MAAM,EAAE,eAAe,CAAC;QACxB,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC7B,CAAC;IACF,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC;CAChC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,0BAA0B,GAAG,WAAW,GAAG;IACrD,MAAM,EAAE;QACN,EAAE,EAAE,MAAM,CAAC;QACX,OAAO,EAAE,KAAK,CAAC;QACf,MAAM,EAAE,iBAAiB,CAAC;QAC1B,MAAM,EAAE,iBAAiB,CAAC;KAC3B,CAAC;IACF,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;CAClC,CAAC;AA8EF;;;;;;;GAOG;AACH,wBAAgB,cAAc,CAAC,UAAU,EAAE,iBAAiB,GAAG,IAAI,CA+BlE;AAED;;;;;;GAMG;AACH,wBAAgB,aAAa,CAAC,iBAAiB,EAC7C,YAAY,EAAE,CAAC,UAAU,EAAE,iBAAiB,KAAK,iBAAiB,GACjE,IAAI,CAuBN"}
\ No newline at end of file
diff --git a/dist/CAIP294.mjs b/dist/CAIP294.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..e3625902c7b9c74e4a9e326a8dfaca757eb30ffa
--- /dev/null
+++ b/dist/CAIP294.mjs
@@ -0,0 +1,129 @@
+import { isObject } from "@metamask/utils";
+import { FQDN_REGEX, UUID_V4_REGEX } from "./utils.mjs";
+/**
+ * Describes the possible CAIP-294 event names
+ */
+export var CAIP294EventNames;
+(function (CAIP294EventNames) {
+    CAIP294EventNames["Announce"] = "caip294:wallet_announce";
+    CAIP294EventNames["Prompt"] = "caip294:wallet_prompt";
+})(CAIP294EventNames || (CAIP294EventNames = {}));
+/**
+ * Validates an {@link CAIP294RequestWalletEvent} object.
+ *
+ * @param event - The {@link CAIP294RequestWalletEvent} to validate.
+ * @returns Whether the {@link CAIP294RequestWalletEvent} is valid.
+ */
+function isValidRequestWalletEvent(event) {
+    return (event instanceof CustomEvent &&
+        event.type === CAIP294EventNames.Prompt &&
+        isObject(event.detail) &&
+        event.detail.method === 'wallet_prompt' &&
+        isValidWalletPromptParams(event.detail.params));
+}
+/**
+ * Validates a {@link CAIP294RequestWalletEvent} params field.
+ *
+ * @param params - The parameters to validate.
+ * @returns Whether the parameters are valid.
+ */
+function isValidWalletPromptParams(params) {
+    const isValidChains = params.chains === undefined ||
+        (Array.isArray(params.chains) &&
+            params.chains.every((chain) => typeof chain === 'string'));
+    const isValidAuthName = params.authName === undefined || typeof params.authName === 'string';
+    return isValidChains && isValidAuthName;
+}
+/**
+ * Validates an {@link CAIP294AnnounceWalletEvent} object.
+ *
+ * @param event - The {@link CAIP294AnnounceWalletEvent} to validate.
+ * @returns Whether the {@link CAIP294AnnounceWalletEvent} is valid.
+ */
+function isValidAnnounceWalletEvent(event) {
+    return (event instanceof CustomEvent &&
+        event.type === CAIP294EventNames.Announce &&
+        isObject(event.detail) &&
+        event.detail.method === 'wallet_announce' &&
+        isValidWalletData(event.detail.params));
+}
+/**
+ * Validates an {@link CAIP294WalletData} object.
+ *
+ * @param data - The {@link CAIP294WalletData} to validate.
+ * @returns Whether the {@link CAIP294WalletData} is valid.
+ */
+function isValidWalletData(data) {
+    return (isObject(data) &&
+        typeof data.uuid === 'string' &&
+        UUID_V4_REGEX.test(data.uuid) &&
+        typeof data.name === 'string' &&
+        Boolean(data.name) &&
+        typeof data.icon === 'string' &&
+        data.icon.startsWith('data:image') &&
+        typeof data.rdns === 'string' &&
+        FQDN_REGEX.test(data.rdns) &&
+        (data.extensionId === undefined ||
+            (typeof data.extensionId === 'string' && data.extensionId.length > 0)));
+}
+/**
+ * Intended to be used by a wallet. Announces a wallet by dispatching
+ * an {@link CAIP294AnnounceWalletEvent}, and listening for
+ * {@link CAIP294RequestWalletEvent} to re-announce.
+ *
+ * @throws If the {@link CAIP294WalletData} is invalid.
+ * @param walletData - The {@link CAIP294WalletData} to announce.
+ */
+export function announceWallet(walletData) {
+    if (!isValidWalletData(walletData)) {
+        throwErrorCAIP294(`Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Prompt}.`);
+    }
+    const _announceWallet = () => window.dispatchEvent(new CustomEvent(CAIP294EventNames.Announce, {
+        detail: {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'wallet_announce',
+            params: walletData,
+        },
+    }));
+    _announceWallet();
+    window.addEventListener(CAIP294EventNames.Prompt, (event) => {
+        if (!isValidRequestWalletEvent(event)) {
+            throwErrorCAIP294(`Invalid CAIP-294 RequestWalletEvent object received from ${CAIP294EventNames.Prompt}.`);
+        }
+        _announceWallet();
+    });
+}
+/**
+ * Intended to be used by a dapp. Forwards announced wallet to the
+ * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},
+ * and dispatches an {@link CAIP294RequestWalletEvent}.
+ *
+ * @param handleWallet - A function that handles an announced wallet.
+ */
+export function requestWallet(handleWallet) {
+    window.addEventListener(CAIP294EventNames.Announce, (event) => {
+        if (!isValidAnnounceWalletEvent(event)) {
+            throwErrorCAIP294(`Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Announce}.`);
+        }
+        handleWallet(event.detail);
+    });
+    window.dispatchEvent(new CustomEvent(CAIP294EventNames.Prompt, {
+        detail: {
+            id: 1,
+            jsonrpc: '2.0',
+            method: 'wallet_prompt',
+            params: {},
+        },
+    }));
+}
+/**
+ * Throws an error with link to CAIP-294 specifications.
+ *
+ * @param message - The message to include.
+ * @throws a friendly error with a link to CAIP-294.
+ */
+function throwErrorCAIP294(message) {
+    throw new Error(`${message} See https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md for requirements.`);
+}
+//# sourceMappingURL=CAIP294.mjs.map
\ No newline at end of file
diff --git a/dist/CAIP294.mjs.map b/dist/CAIP294.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..3204daa126971c94832d7ac28c0edc9c4e92ee7b
--- /dev/null
+++ b/dist/CAIP294.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"CAIP294.mjs","sourceRoot":"","sources":["../src/CAIP294.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProviderInfo } from './types';\nimport { FQDN_REGEX, UUID_V4_REGEX } from './utils';\n\n/**\n * Describes the possible CAIP-294 event names\n */\nexport enum CAIP294EventNames {\n  Announce = 'caip294:wallet_announce',\n  Prompt = 'caip294:wallet_prompt',\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [CAIP294EventNames.Prompt]: CAIP294RequestWalletEvent;\n    [CAIP294EventNames.Announce]: CAIP294AnnounceWalletEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n * @type CAIP294WalletData\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n * @property extensionId - The canonical extension ID of the wallet provider for the active browser.\n */\nexport type CAIP294WalletData = BaseProviderInfo & {\n  extensionId?: string | undefined;\n};\n\n/**\n * Event for requesting a wallet.\n *\n * @type CAIP294RequestWalletEvent\n * @property detail - The detail object of the event.\n * @property type - The name of the event.\n */\nexport type CAIP294RequestWalletEvent = CustomEvent & {\n  detail: {\n    id: number;\n    jsonrpc: '2.0';\n    method: 'wallet_prompt';\n    params: Record<string, any>;\n  };\n  type: CAIP294EventNames.Prompt;\n};\n\n/**\n * Event for announcing a wallet.\n *\n * @type CAIP294AnnounceWalletEvent\n * @property detail - The detail object of the event.\n * @property type - The name of the event.\n */\nexport type CAIP294AnnounceWalletEvent = CustomEvent & {\n  detail: {\n    id: number;\n    jsonrpc: '2.0';\n    method: 'wallet_announce';\n    params: CAIP294WalletData;\n  };\n  type: CAIP294EventNames.Announce;\n};\n\n/**\n * Validates an {@link CAIP294RequestWalletEvent} object.\n *\n * @param event - The {@link CAIP294RequestWalletEvent} to validate.\n * @returns Whether the {@link CAIP294RequestWalletEvent} is valid.\n */\nfunction isValidRequestWalletEvent(\n  event: unknown,\n): event is CAIP294RequestWalletEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === CAIP294EventNames.Prompt &&\n    isObject(event.detail) &&\n    event.detail.method === 'wallet_prompt' &&\n    isValidWalletPromptParams(event.detail.params)\n  );\n}\n\n/**\n * Validates a {@link CAIP294RequestWalletEvent} params field.\n *\n * @param params - The parameters to validate.\n * @returns Whether the parameters are valid.\n */\nfunction isValidWalletPromptParams(params: any): params is Record<string, any> {\n  const isValidChains =\n    params.chains === undefined ||\n    (Array.isArray(params.chains) &&\n      params.chains.every((chain: any) => typeof chain === 'string'));\n\n  const isValidAuthName =\n    params.authName === undefined || typeof params.authName === 'string';\n\n  return isValidChains && isValidAuthName;\n}\n\n/**\n * Validates an {@link CAIP294AnnounceWalletEvent} object.\n *\n * @param event - The {@link CAIP294AnnounceWalletEvent} to validate.\n * @returns Whether the {@link CAIP294AnnounceWalletEvent} is valid.\n */\nfunction isValidAnnounceWalletEvent(\n  event: unknown,\n): event is CAIP294AnnounceWalletEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === CAIP294EventNames.Announce &&\n    isObject(event.detail) &&\n    event.detail.method === 'wallet_announce' &&\n    isValidWalletData(event.detail.params)\n  );\n}\n\n/**\n * Validates an {@link CAIP294WalletData} object.\n *\n * @param data - The {@link CAIP294WalletData} to validate.\n * @returns Whether the {@link CAIP294WalletData} is valid.\n */\nfunction isValidWalletData(data: unknown): data is CAIP294WalletData {\n  return (\n    isObject(data) &&\n    typeof data.uuid === 'string' &&\n    UUID_V4_REGEX.test(data.uuid) &&\n    typeof data.name === 'string' &&\n    Boolean(data.name) &&\n    typeof data.icon === 'string' &&\n    data.icon.startsWith('data:image') &&\n    typeof data.rdns === 'string' &&\n    FQDN_REGEX.test(data.rdns) &&\n    (data.extensionId === undefined ||\n      (typeof data.extensionId === 'string' && data.extensionId.length > 0))\n  );\n}\n\n/**\n * Intended to be used by a wallet. Announces a wallet by dispatching\n * an {@link CAIP294AnnounceWalletEvent}, and listening for\n * {@link CAIP294RequestWalletEvent} to re-announce.\n *\n * @throws If the {@link CAIP294WalletData} is invalid.\n * @param walletData - The {@link CAIP294WalletData} to announce.\n */\nexport function announceWallet(walletData: CAIP294WalletData): void {\n  if (!isValidWalletData(walletData)) {\n    throwErrorCAIP294(\n      `Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Prompt}.`,\n    );\n  }\n\n  const _announceWallet = () =>\n    window.dispatchEvent(\n      new CustomEvent(CAIP294EventNames.Announce, {\n        detail: {\n          id: 1,\n          jsonrpc: '2.0',\n          method: 'wallet_announce',\n          params: walletData,\n        },\n      }),\n    );\n\n  _announceWallet();\n  window.addEventListener(\n    CAIP294EventNames.Prompt,\n    (event: CAIP294RequestWalletEvent) => {\n      if (!isValidRequestWalletEvent(event)) {\n        throwErrorCAIP294(\n          `Invalid CAIP-294 RequestWalletEvent object received from ${CAIP294EventNames.Prompt}.`,\n        );\n      }\n      _announceWallet();\n    },\n  );\n}\n\n/**\n * Intended to be used by a dapp. Forwards announced wallet to the\n * provided handler by listening for * {@link CAIP294AnnounceWalletEvent},\n * and dispatches an {@link CAIP294RequestWalletEvent}.\n *\n * @param handleWallet - A function that handles an announced wallet.\n */\nexport function requestWallet<HandlerReturnType>(\n  handleWallet: (walletData: CAIP294WalletData) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    CAIP294EventNames.Announce,\n    (event: CAIP294AnnounceWalletEvent) => {\n      if (!isValidAnnounceWalletEvent(event)) {\n        throwErrorCAIP294(\n          `Invalid CAIP-294 WalletData object received from ${CAIP294EventNames.Announce}.`,\n        );\n      }\n      handleWallet(event.detail);\n    },\n  );\n\n  window.dispatchEvent(\n    new CustomEvent(CAIP294EventNames.Prompt, {\n      detail: {\n        id: 1,\n        jsonrpc: '2.0',\n        method: 'wallet_prompt',\n        params: {},\n      },\n    }),\n  );\n}\n\n/**\n * Throws an error with link to CAIP-294 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to CAIP-294.\n */\nfunction throwErrorCAIP294(message: string) {\n  throw new Error(\n    `${message} See https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
diff --git a/dist/EIP6963.cjs b/dist/EIP6963.cjs
index 1c8630458c322a5a5c9beaa27438a14cbe745057..d8e654596ea2d8d4fee46605eb73d49e22d71d0b 100644
--- a/dist/EIP6963.cjs
+++ b/dist/EIP6963.cjs
@@ -3,6 +3,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.requestProvider = requestProvider;
 exports.announceProvider = announceProvider;
 const utils_1 = require("@metamask/utils");
+const utils_2 = require("./utils.cjs");
 /**
  * Describes the possible EIP-6963 event names
  */
@@ -11,10 +12,6 @@ var EIP6963EventNames;
     EIP6963EventNames["Announce"] = "eip6963:announceProvider";
     EIP6963EventNames["Request"] = "eip6963:requestProvider";
 })(EIP6963EventNames || (EIP6963EventNames = {}));
-// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5
-const UUID_V4_REGEX = /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;
-// https://stackoverflow.com/a/20204811
-const FQDN_REGEX = /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\.)+[a-zA-Z]{2,63}$)/u;
 /**
  * Intended to be used by a dapp. Forwards every announced provider to the
  * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},
@@ -92,13 +89,13 @@ function isValidProviderDetail(providerDetail) {
     }
     const { info } = providerDetail;
     return (typeof info.uuid === 'string' &&
-        UUID_V4_REGEX.test(info.uuid) &&
+        utils_2.UUID_V4_REGEX.test(info.uuid) &&
         typeof info.name === 'string' &&
         Boolean(info.name) &&
         typeof info.icon === 'string' &&
         info.icon.startsWith('data:image') &&
         typeof info.rdns === 'string' &&
-        FQDN_REGEX.test(info.rdns));
+        utils_2.FQDN_REGEX.test(info.rdns));
 }
 /**
  * Throws an error with link to EIP-6963 specifications.
diff --git a/dist/EIP6963.cjs.map b/dist/EIP6963.cjs.map
index d8e430ffb75decd59ecb059a8416bbf010a54212..48a3a50b78b10fc1ad16347fc731ce773dd07467 100644
--- a/dist/EIP6963.cjs.map
+++ b/dist/EIP6963.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"EIP6963.cjs","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProvider } from './BaseProvider';\n\n/**\n * Describes the possible EIP-6963 event names\n */\nenum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [EIP6963EventNames.Request]: EIP6963RequestProviderEvent;\n    [EIP6963EventNames.Announce]: EIP6963AnnounceProviderEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n *\n * @type EIP6963ProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type EIP6963ProviderInfo = {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n};\n\n/**\n * Represents a provider and the information relevant for the dapp.\n *\n * @type EIP6963ProviderDetail\n * @property info - The EIP6963ProviderInfo object.\n * @property provider - The provider instance.\n */\nexport type EIP6963ProviderDetail = {\n  info: EIP6963ProviderInfo;\n  provider: BaseProvider;\n};\n\n/**\n * Event for requesting an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n */\nexport type EIP6963RequestProviderEvent = Event & {\n  type: EIP6963EventNames.Request;\n};\n\n/**\n * Event for announcing an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n * @property detail - The detail object of the event.\n */\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\n// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5\nconst UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\n// https://stackoverflow.com/a/20204811\nconst FQDN_REGEX =\n  /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/u;\n\n/**\n * Intended to be used by a dapp. Forwards every announced provider to the\n * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},\n * and dispatches an {@link EIP6963RequestProviderEvent}.\n *\n * @param handleProvider - A function that handles an announced provider.\n */\nexport function requestProvider<HandlerReturnType>(\n  handleProvider: (providerDetail: EIP6963ProviderDetail) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    EIP6963EventNames.Announce,\n    (event: EIP6963AnnounceProviderEvent) => {\n      if (!isValidAnnounceProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 AnnounceProviderEvent object received from ${EIP6963EventNames.Announce} event.`,\n        );\n      }\n      handleProvider(event.detail);\n    },\n  );\n\n  window.dispatchEvent(new Event(EIP6963EventNames.Request));\n}\n\n/**\n * Intended to be used by a wallet. Announces a provider by dispatching\n * an {@link EIP6963AnnounceProviderEvent}, and listening for\n * {@link EIP6963RequestProviderEvent} to re-announce.\n *\n * @throws If the {@link EIP6963ProviderDetail} is invalid.\n * @param providerDetail - The {@link EIP6963ProviderDetail} to announce.\n * @param providerDetail.info - The {@link EIP6963ProviderInfo} to announce.\n * @param providerDetail.provider - The provider to announce.\n */\nexport function announceProvider(providerDetail: EIP6963ProviderDetail): void {\n  if (!isValidProviderDetail(providerDetail)) {\n    throwErrorEIP6963('Invalid EIP-6963 ProviderDetail object.');\n  }\n  const { info, provider } = providerDetail;\n\n  const _announceProvider = () =>\n    window.dispatchEvent(\n      new CustomEvent(EIP6963EventNames.Announce, {\n        detail: Object.freeze({ info: { ...info }, provider }),\n      }),\n    );\n\n  _announceProvider();\n  window.addEventListener(\n    EIP6963EventNames.Request,\n    (event: EIP6963RequestProviderEvent) => {\n      if (!isValidRequestProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 RequestProviderEvent object received from ${EIP6963EventNames.Request} event.`,\n        );\n      }\n      _announceProvider();\n    },\n  );\n}\n\n/**\n * Validates an {@link EIP6963RequestProviderEvent} object.\n *\n * @param event - The {@link EIP6963RequestProviderEvent} to validate.\n * @returns Whether the {@link EIP6963RequestProviderEvent} is valid.\n */\nfunction isValidRequestProviderEvent(\n  event: unknown,\n): event is EIP6963RequestProviderEvent {\n  return event instanceof Event && event.type === EIP6963EventNames.Request;\n}\n\n/**\n * Validates an {@link EIP6963AnnounceProviderEvent} object.\n *\n * @param event - The {@link EIP6963AnnounceProviderEvent} to validate.\n * @returns Whether the {@link EIP6963AnnounceProviderEvent} is valid.\n */\nfunction isValidAnnounceProviderEvent(\n  event: unknown,\n): event is EIP6963AnnounceProviderEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === EIP6963EventNames.Announce &&\n    Object.isFrozen(event.detail) &&\n    isValidProviderDetail(event.detail)\n  );\n}\n\n/**\n * Validates an {@link EIP6963ProviderDetail} object.\n *\n * @param providerDetail - The {@link EIP6963ProviderDetail} to validate.\n * @returns Whether the {@link EIP6963ProviderDetail} is valid.\n */\nfunction isValidProviderDetail(\n  providerDetail: unknown,\n): providerDetail is EIP6963ProviderDetail {\n  if (\n    !isObject(providerDetail) ||\n    !isObject(providerDetail.info) ||\n    !isObject(providerDetail.provider)\n  ) {\n    return false;\n  }\n  const { info } = providerDetail;\n\n  return (\n    typeof info.uuid === 'string' &&\n    UUID_V4_REGEX.test(info.uuid) &&\n    typeof info.name === 'string' &&\n    Boolean(info.name) &&\n    typeof info.icon === 'string' &&\n    info.icon.startsWith('data:image') &&\n    typeof info.rdns === 'string' &&\n    FQDN_REGEX.test(info.rdns)\n  );\n}\n\n/**\n * Throws an error with link to EIP-6963 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to EIP-6963.\n */\nfunction throwErrorEIP6963(message: string) {\n  throw new Error(\n    `${message} See https://eips.ethereum.org/EIPS/eip-6963 for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"EIP6963.cjs","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProvider } from './BaseProvider';\nimport type { BaseProviderInfo } from './types';\nimport { FQDN_REGEX, UUID_V4_REGEX } from './utils';\n\n/**\n * Describes the possible EIP-6963 event names\n */\nenum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [EIP6963EventNames.Request]: EIP6963RequestProviderEvent;\n    [EIP6963EventNames.Announce]: EIP6963AnnounceProviderEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n *\n * @type EIP6963ProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type EIP6963ProviderInfo = BaseProviderInfo;\n\n/**\n * Represents a provider and the information relevant for the dapp.\n *\n * @type EIP6963ProviderDetail\n * @property info - The EIP6963ProviderInfo object.\n * @property provider - The provider instance.\n */\nexport type EIP6963ProviderDetail = {\n  info: EIP6963ProviderInfo;\n  provider: BaseProvider;\n};\n\n/**\n * Event for requesting an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n */\nexport type EIP6963RequestProviderEvent = Event & {\n  type: EIP6963EventNames.Request;\n};\n\n/**\n * Event for announcing an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n * @property detail - The detail object of the event.\n */\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\n/**\n * Intended to be used by a dapp. Forwards every announced provider to the\n * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},\n * and dispatches an {@link EIP6963RequestProviderEvent}.\n *\n * @param handleProvider - A function that handles an announced provider.\n */\nexport function requestProvider<HandlerReturnType>(\n  handleProvider: (providerDetail: EIP6963ProviderDetail) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    EIP6963EventNames.Announce,\n    (event: EIP6963AnnounceProviderEvent) => {\n      if (!isValidAnnounceProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 AnnounceProviderEvent object received from ${EIP6963EventNames.Announce} event.`,\n        );\n      }\n      handleProvider(event.detail);\n    },\n  );\n\n  window.dispatchEvent(new Event(EIP6963EventNames.Request));\n}\n\n/**\n * Intended to be used by a wallet. Announces a provider by dispatching\n * an {@link EIP6963AnnounceProviderEvent}, and listening for\n * {@link EIP6963RequestProviderEvent} to re-announce.\n *\n * @throws If the {@link EIP6963ProviderDetail} is invalid.\n * @param providerDetail - The {@link EIP6963ProviderDetail} to announce.\n * @param providerDetail.info - The {@link EIP6963ProviderInfo} to announce.\n * @param providerDetail.provider - The provider to announce.\n */\nexport function announceProvider(providerDetail: EIP6963ProviderDetail): void {\n  if (!isValidProviderDetail(providerDetail)) {\n    throwErrorEIP6963('Invalid EIP-6963 ProviderDetail object.');\n  }\n  const { info, provider } = providerDetail;\n\n  const _announceProvider = () =>\n    window.dispatchEvent(\n      new CustomEvent(EIP6963EventNames.Announce, {\n        detail: Object.freeze({ info: { ...info }, provider }),\n      }),\n    );\n\n  _announceProvider();\n  window.addEventListener(\n    EIP6963EventNames.Request,\n    (event: EIP6963RequestProviderEvent) => {\n      if (!isValidRequestProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 RequestProviderEvent object received from ${EIP6963EventNames.Request} event.`,\n        );\n      }\n      _announceProvider();\n    },\n  );\n}\n\n/**\n * Validates an {@link EIP6963RequestProviderEvent} object.\n *\n * @param event - The {@link EIP6963RequestProviderEvent} to validate.\n * @returns Whether the {@link EIP6963RequestProviderEvent} is valid.\n */\nfunction isValidRequestProviderEvent(\n  event: unknown,\n): event is EIP6963RequestProviderEvent {\n  return event instanceof Event && event.type === EIP6963EventNames.Request;\n}\n\n/**\n * Validates an {@link EIP6963AnnounceProviderEvent} object.\n *\n * @param event - The {@link EIP6963AnnounceProviderEvent} to validate.\n * @returns Whether the {@link EIP6963AnnounceProviderEvent} is valid.\n */\nfunction isValidAnnounceProviderEvent(\n  event: unknown,\n): event is EIP6963AnnounceProviderEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === EIP6963EventNames.Announce &&\n    Object.isFrozen(event.detail) &&\n    isValidProviderDetail(event.detail)\n  );\n}\n\n/**\n * Validates an {@link EIP6963ProviderDetail} object.\n *\n * @param providerDetail - The {@link EIP6963ProviderDetail} to validate.\n * @returns Whether the {@link EIP6963ProviderDetail} is valid.\n */\nfunction isValidProviderDetail(\n  providerDetail: unknown,\n): providerDetail is EIP6963ProviderDetail {\n  if (\n    !isObject(providerDetail) ||\n    !isObject(providerDetail.info) ||\n    !isObject(providerDetail.provider)\n  ) {\n    return false;\n  }\n  const { info } = providerDetail;\n\n  return (\n    typeof info.uuid === 'string' &&\n    UUID_V4_REGEX.test(info.uuid) &&\n    typeof info.name === 'string' &&\n    Boolean(info.name) &&\n    typeof info.icon === 'string' &&\n    info.icon.startsWith('data:image') &&\n    typeof info.rdns === 'string' &&\n    FQDN_REGEX.test(info.rdns)\n  );\n}\n\n/**\n * Throws an error with link to EIP-6963 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to EIP-6963.\n */\nfunction throwErrorEIP6963(message: string) {\n  throw new Error(\n    `${message} See https://eips.ethereum.org/EIPS/eip-6963 for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
diff --git a/dist/EIP6963.d.cts b/dist/EIP6963.d.cts
index 3809e1094f060c2e4a8ed0004b7d93d5fcfd0aa8..a35da0fc09c3325f7f81449fb2e6a0ee0ef3c0b5 100644
--- a/dist/EIP6963.d.cts
+++ b/dist/EIP6963.d.cts
@@ -1,4 +1,5 @@
 import type { BaseProvider } from "./BaseProvider.cjs";
+import type { BaseProviderInfo } from "./types.cjs";
 /**
  * Describes the possible EIP-6963 event names
  */
@@ -21,12 +22,7 @@ declare global {
  * @property icon - The icon for the wallet. MUST be data URI.
  * @property rdns - The reverse syntax domain name identifier for the wallet.
  */
-export type EIP6963ProviderInfo = {
-    uuid: string;
-    name: string;
-    icon: string;
-    rdns: string;
-};
+export type EIP6963ProviderInfo = BaseProviderInfo;
 /**
  * Represents a provider and the information relevant for the dapp.
  *
diff --git a/dist/EIP6963.d.cts.map b/dist/EIP6963.d.cts.map
index 00080999e95b9af97b35adbcd0c0c917c5930d9c..25733f881af54288187766e2131323825780905b 100644
--- a/dist/EIP6963.d.cts.map
+++ b/dist/EIP6963.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"EIP6963.d.cts","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,YAAY,EAAE,2BAAuB;AAEnD;;GAEG;AACH,aAAK,iBAAiB;IACpB,QAAQ,6BAA6B;IACrC,OAAO,4BAA4B;CACpC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,2BAA2B,CAAC;QACzD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,4BAA4B,CAAC;KAC5D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,mBAAmB,GAAG;IAChC,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,qBAAqB,GAAG;IAClC,IAAI,EAAE,mBAAmB,CAAC;IAC1B,QAAQ,EAAE,YAAY,CAAC;CACxB,CAAC;AAEF;;;;;GAKG;AACH,MAAM,MAAM,2BAA2B,GAAG,KAAK,GAAG;IAChD,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,4BAA4B,GAAG,WAAW,GAAG;IACvD,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;IACjC,MAAM,EAAE,qBAAqB,CAAC;CAC/B,CAAC;AAUF;;;;;;GAMG;AACH,wBAAgB,eAAe,CAAC,iBAAiB,EAC/C,cAAc,EAAE,CAAC,cAAc,EAAE,qBAAqB,KAAK,iBAAiB,GAC3E,IAAI,CAcN;AAED;;;;;;;;;GASG;AACH,wBAAgB,gBAAgB,CAAC,cAAc,EAAE,qBAAqB,GAAG,IAAI,CAyB5E"}
\ No newline at end of file
+{"version":3,"file":"EIP6963.d.cts","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,YAAY,EAAE,2BAAuB;AACnD,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAGhD;;GAEG;AACH,aAAK,iBAAiB;IACpB,QAAQ,6BAA6B;IACrC,OAAO,4BAA4B;CACpC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,2BAA2B,CAAC;QACzD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,4BAA4B,CAAC;KAC5D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,mBAAmB,GAAG,gBAAgB,CAAC;AAEnD;;;;;;GAMG;AACH,MAAM,MAAM,qBAAqB,GAAG;IAClC,IAAI,EAAE,mBAAmB,CAAC;IAC1B,QAAQ,EAAE,YAAY,CAAC;CACxB,CAAC;AAEF;;;;;GAKG;AACH,MAAM,MAAM,2BAA2B,GAAG,KAAK,GAAG;IAChD,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,4BAA4B,GAAG,WAAW,GAAG;IACvD,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;IACjC,MAAM,EAAE,qBAAqB,CAAC;CAC/B,CAAC;AAEF;;;;;;GAMG;AACH,wBAAgB,eAAe,CAAC,iBAAiB,EAC/C,cAAc,EAAE,CAAC,cAAc,EAAE,qBAAqB,KAAK,iBAAiB,GAC3E,IAAI,CAcN;AAED;;;;;;;;;GASG;AACH,wBAAgB,gBAAgB,CAAC,cAAc,EAAE,qBAAqB,GAAG,IAAI,CAyB5E"}
\ No newline at end of file
diff --git a/dist/EIP6963.d.mts b/dist/EIP6963.d.mts
index 2da4d20f43f02e659c146bab0cbcc535570c2e71..708e8755aed946b0d2405095c6eef76aa01c9cac 100644
--- a/dist/EIP6963.d.mts
+++ b/dist/EIP6963.d.mts
@@ -1,4 +1,5 @@
 import type { BaseProvider } from "./BaseProvider.mjs";
+import type { BaseProviderInfo } from "./types.mjs";
 /**
  * Describes the possible EIP-6963 event names
  */
@@ -21,12 +22,7 @@ declare global {
  * @property icon - The icon for the wallet. MUST be data URI.
  * @property rdns - The reverse syntax domain name identifier for the wallet.
  */
-export type EIP6963ProviderInfo = {
-    uuid: string;
-    name: string;
-    icon: string;
-    rdns: string;
-};
+export type EIP6963ProviderInfo = BaseProviderInfo;
 /**
  * Represents a provider and the information relevant for the dapp.
  *
diff --git a/dist/EIP6963.d.mts.map b/dist/EIP6963.d.mts.map
index 36da5c9f7071dc0a2af5164dbaf05edb94bf8e6d..500e0f367e2eba9b4c029c8a00e841ecdf5826f3 100644
--- a/dist/EIP6963.d.mts.map
+++ b/dist/EIP6963.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"EIP6963.d.mts","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,YAAY,EAAE,2BAAuB;AAEnD;;GAEG;AACH,aAAK,iBAAiB;IACpB,QAAQ,6BAA6B;IACrC,OAAO,4BAA4B;CACpC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,2BAA2B,CAAC;QACzD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,4BAA4B,CAAC;KAC5D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,mBAAmB,GAAG;IAChC,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,qBAAqB,GAAG;IAClC,IAAI,EAAE,mBAAmB,CAAC;IAC1B,QAAQ,EAAE,YAAY,CAAC;CACxB,CAAC;AAEF;;;;;GAKG;AACH,MAAM,MAAM,2BAA2B,GAAG,KAAK,GAAG;IAChD,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,4BAA4B,GAAG,WAAW,GAAG;IACvD,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;IACjC,MAAM,EAAE,qBAAqB,CAAC;CAC/B,CAAC;AAUF;;;;;;GAMG;AACH,wBAAgB,eAAe,CAAC,iBAAiB,EAC/C,cAAc,EAAE,CAAC,cAAc,EAAE,qBAAqB,KAAK,iBAAiB,GAC3E,IAAI,CAcN;AAED;;;;;;;;;GASG;AACH,wBAAgB,gBAAgB,CAAC,cAAc,EAAE,qBAAqB,GAAG,IAAI,CAyB5E"}
\ No newline at end of file
+{"version":3,"file":"EIP6963.d.mts","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,YAAY,EAAE,2BAAuB;AACnD,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAGhD;;GAEG;AACH,aAAK,iBAAiB;IACpB,QAAQ,6BAA6B;IACrC,OAAO,4BAA4B;CACpC;AAED,OAAO,CAAC,MAAM,CAAC;IAEb,UAAU,cAAc;QACtB,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,2BAA2B,CAAC;QACzD,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,4BAA4B,CAAC;KAC5D;CACF;AAED;;;;;;;;GAQG;AACH,MAAM,MAAM,mBAAmB,GAAG,gBAAgB,CAAC;AAEnD;;;;;;GAMG;AACH,MAAM,MAAM,qBAAqB,GAAG;IAClC,IAAI,EAAE,mBAAmB,CAAC;IAC1B,QAAQ,EAAE,YAAY,CAAC;CACxB,CAAC;AAEF;;;;;GAKG;AACH,MAAM,MAAM,2BAA2B,GAAG,KAAK,GAAG;IAChD,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,MAAM,4BAA4B,GAAG,WAAW,GAAG;IACvD,IAAI,EAAE,iBAAiB,CAAC,QAAQ,CAAC;IACjC,MAAM,EAAE,qBAAqB,CAAC;CAC/B,CAAC;AAEF;;;;;;GAMG;AACH,wBAAgB,eAAe,CAAC,iBAAiB,EAC/C,cAAc,EAAE,CAAC,cAAc,EAAE,qBAAqB,KAAK,iBAAiB,GAC3E,IAAI,CAcN;AAED;;;;;;;;;GASG;AACH,wBAAgB,gBAAgB,CAAC,cAAc,EAAE,qBAAqB,GAAG,IAAI,CAyB5E"}
\ No newline at end of file
diff --git a/dist/EIP6963.mjs b/dist/EIP6963.mjs
index 7aa17cd24978746cdff0a7c10e673429377e5a8f..56e1bbffe2f510c5bf7c73c2acf2bb5adbaf9803 100644
--- a/dist/EIP6963.mjs
+++ b/dist/EIP6963.mjs
@@ -1,4 +1,5 @@
 import { isObject } from "@metamask/utils";
+import { FQDN_REGEX, UUID_V4_REGEX } from "./utils.mjs";
 /**
  * Describes the possible EIP-6963 event names
  */
@@ -7,10 +8,6 @@ var EIP6963EventNames;
     EIP6963EventNames["Announce"] = "eip6963:announceProvider";
     EIP6963EventNames["Request"] = "eip6963:requestProvider";
 })(EIP6963EventNames || (EIP6963EventNames = {}));
-// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5
-const UUID_V4_REGEX = /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;
-// https://stackoverflow.com/a/20204811
-const FQDN_REGEX = /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\.)+[a-zA-Z]{2,63}$)/u;
 /**
  * Intended to be used by a dapp. Forwards every announced provider to the
  * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},
diff --git a/dist/EIP6963.mjs.map b/dist/EIP6963.mjs.map
index ea4413701f27ff97e1c46c8360ee2d4c69d10613..bd8e4b67a8a2168d1072da290aa0aaea7ad6abbd 100644
--- a/dist/EIP6963.mjs.map
+++ b/dist/EIP6963.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"EIP6963.mjs","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProvider } from './BaseProvider';\n\n/**\n * Describes the possible EIP-6963 event names\n */\nenum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [EIP6963EventNames.Request]: EIP6963RequestProviderEvent;\n    [EIP6963EventNames.Announce]: EIP6963AnnounceProviderEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n *\n * @type EIP6963ProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type EIP6963ProviderInfo = {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n};\n\n/**\n * Represents a provider and the information relevant for the dapp.\n *\n * @type EIP6963ProviderDetail\n * @property info - The EIP6963ProviderInfo object.\n * @property provider - The provider instance.\n */\nexport type EIP6963ProviderDetail = {\n  info: EIP6963ProviderInfo;\n  provider: BaseProvider;\n};\n\n/**\n * Event for requesting an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n */\nexport type EIP6963RequestProviderEvent = Event & {\n  type: EIP6963EventNames.Request;\n};\n\n/**\n * Event for announcing an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n * @property detail - The detail object of the event.\n */\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\n// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5\nconst UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\n// https://stackoverflow.com/a/20204811\nconst FQDN_REGEX =\n  /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/u;\n\n/**\n * Intended to be used by a dapp. Forwards every announced provider to the\n * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},\n * and dispatches an {@link EIP6963RequestProviderEvent}.\n *\n * @param handleProvider - A function that handles an announced provider.\n */\nexport function requestProvider<HandlerReturnType>(\n  handleProvider: (providerDetail: EIP6963ProviderDetail) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    EIP6963EventNames.Announce,\n    (event: EIP6963AnnounceProviderEvent) => {\n      if (!isValidAnnounceProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 AnnounceProviderEvent object received from ${EIP6963EventNames.Announce} event.`,\n        );\n      }\n      handleProvider(event.detail);\n    },\n  );\n\n  window.dispatchEvent(new Event(EIP6963EventNames.Request));\n}\n\n/**\n * Intended to be used by a wallet. Announces a provider by dispatching\n * an {@link EIP6963AnnounceProviderEvent}, and listening for\n * {@link EIP6963RequestProviderEvent} to re-announce.\n *\n * @throws If the {@link EIP6963ProviderDetail} is invalid.\n * @param providerDetail - The {@link EIP6963ProviderDetail} to announce.\n * @param providerDetail.info - The {@link EIP6963ProviderInfo} to announce.\n * @param providerDetail.provider - The provider to announce.\n */\nexport function announceProvider(providerDetail: EIP6963ProviderDetail): void {\n  if (!isValidProviderDetail(providerDetail)) {\n    throwErrorEIP6963('Invalid EIP-6963 ProviderDetail object.');\n  }\n  const { info, provider } = providerDetail;\n\n  const _announceProvider = () =>\n    window.dispatchEvent(\n      new CustomEvent(EIP6963EventNames.Announce, {\n        detail: Object.freeze({ info: { ...info }, provider }),\n      }),\n    );\n\n  _announceProvider();\n  window.addEventListener(\n    EIP6963EventNames.Request,\n    (event: EIP6963RequestProviderEvent) => {\n      if (!isValidRequestProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 RequestProviderEvent object received from ${EIP6963EventNames.Request} event.`,\n        );\n      }\n      _announceProvider();\n    },\n  );\n}\n\n/**\n * Validates an {@link EIP6963RequestProviderEvent} object.\n *\n * @param event - The {@link EIP6963RequestProviderEvent} to validate.\n * @returns Whether the {@link EIP6963RequestProviderEvent} is valid.\n */\nfunction isValidRequestProviderEvent(\n  event: unknown,\n): event is EIP6963RequestProviderEvent {\n  return event instanceof Event && event.type === EIP6963EventNames.Request;\n}\n\n/**\n * Validates an {@link EIP6963AnnounceProviderEvent} object.\n *\n * @param event - The {@link EIP6963AnnounceProviderEvent} to validate.\n * @returns Whether the {@link EIP6963AnnounceProviderEvent} is valid.\n */\nfunction isValidAnnounceProviderEvent(\n  event: unknown,\n): event is EIP6963AnnounceProviderEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === EIP6963EventNames.Announce &&\n    Object.isFrozen(event.detail) &&\n    isValidProviderDetail(event.detail)\n  );\n}\n\n/**\n * Validates an {@link EIP6963ProviderDetail} object.\n *\n * @param providerDetail - The {@link EIP6963ProviderDetail} to validate.\n * @returns Whether the {@link EIP6963ProviderDetail} is valid.\n */\nfunction isValidProviderDetail(\n  providerDetail: unknown,\n): providerDetail is EIP6963ProviderDetail {\n  if (\n    !isObject(providerDetail) ||\n    !isObject(providerDetail.info) ||\n    !isObject(providerDetail.provider)\n  ) {\n    return false;\n  }\n  const { info } = providerDetail;\n\n  return (\n    typeof info.uuid === 'string' &&\n    UUID_V4_REGEX.test(info.uuid) &&\n    typeof info.name === 'string' &&\n    Boolean(info.name) &&\n    typeof info.icon === 'string' &&\n    info.icon.startsWith('data:image') &&\n    typeof info.rdns === 'string' &&\n    FQDN_REGEX.test(info.rdns)\n  );\n}\n\n/**\n * Throws an error with link to EIP-6963 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to EIP-6963.\n */\nfunction throwErrorEIP6963(message: string) {\n  throw new Error(\n    `${message} See https://eips.ethereum.org/EIPS/eip-6963 for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"EIP6963.mjs","sourceRoot":"","sources":["../src/EIP6963.ts"],"names":[],"mappings":"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","sourcesContent":["import { isObject } from '@metamask/utils';\n\nimport type { BaseProvider } from './BaseProvider';\nimport type { BaseProviderInfo } from './types';\nimport { FQDN_REGEX, UUID_V4_REGEX } from './utils';\n\n/**\n * Describes the possible EIP-6963 event names\n */\nenum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface WindowEventMap {\n    [EIP6963EventNames.Request]: EIP6963RequestProviderEvent;\n    [EIP6963EventNames.Announce]: EIP6963AnnounceProviderEvent;\n  }\n}\n\n/**\n * Represents the assets needed to display and identify a wallet.\n *\n * @type EIP6963ProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type EIP6963ProviderInfo = BaseProviderInfo;\n\n/**\n * Represents a provider and the information relevant for the dapp.\n *\n * @type EIP6963ProviderDetail\n * @property info - The EIP6963ProviderInfo object.\n * @property provider - The provider instance.\n */\nexport type EIP6963ProviderDetail = {\n  info: EIP6963ProviderInfo;\n  provider: BaseProvider;\n};\n\n/**\n * Event for requesting an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n */\nexport type EIP6963RequestProviderEvent = Event & {\n  type: EIP6963EventNames.Request;\n};\n\n/**\n * Event for announcing an EVM provider.\n *\n * @type EIP6963RequestProviderEvent\n * @property type - The name of the event.\n * @property detail - The detail object of the event.\n */\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\n/**\n * Intended to be used by a dapp. Forwards every announced provider to the\n * provided handler by listening for * {@link EIP6963AnnounceProviderEvent},\n * and dispatches an {@link EIP6963RequestProviderEvent}.\n *\n * @param handleProvider - A function that handles an announced provider.\n */\nexport function requestProvider<HandlerReturnType>(\n  handleProvider: (providerDetail: EIP6963ProviderDetail) => HandlerReturnType,\n): void {\n  window.addEventListener(\n    EIP6963EventNames.Announce,\n    (event: EIP6963AnnounceProviderEvent) => {\n      if (!isValidAnnounceProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 AnnounceProviderEvent object received from ${EIP6963EventNames.Announce} event.`,\n        );\n      }\n      handleProvider(event.detail);\n    },\n  );\n\n  window.dispatchEvent(new Event(EIP6963EventNames.Request));\n}\n\n/**\n * Intended to be used by a wallet. Announces a provider by dispatching\n * an {@link EIP6963AnnounceProviderEvent}, and listening for\n * {@link EIP6963RequestProviderEvent} to re-announce.\n *\n * @throws If the {@link EIP6963ProviderDetail} is invalid.\n * @param providerDetail - The {@link EIP6963ProviderDetail} to announce.\n * @param providerDetail.info - The {@link EIP6963ProviderInfo} to announce.\n * @param providerDetail.provider - The provider to announce.\n */\nexport function announceProvider(providerDetail: EIP6963ProviderDetail): void {\n  if (!isValidProviderDetail(providerDetail)) {\n    throwErrorEIP6963('Invalid EIP-6963 ProviderDetail object.');\n  }\n  const { info, provider } = providerDetail;\n\n  const _announceProvider = () =>\n    window.dispatchEvent(\n      new CustomEvent(EIP6963EventNames.Announce, {\n        detail: Object.freeze({ info: { ...info }, provider }),\n      }),\n    );\n\n  _announceProvider();\n  window.addEventListener(\n    EIP6963EventNames.Request,\n    (event: EIP6963RequestProviderEvent) => {\n      if (!isValidRequestProviderEvent(event)) {\n        throwErrorEIP6963(\n          `Invalid EIP-6963 RequestProviderEvent object received from ${EIP6963EventNames.Request} event.`,\n        );\n      }\n      _announceProvider();\n    },\n  );\n}\n\n/**\n * Validates an {@link EIP6963RequestProviderEvent} object.\n *\n * @param event - The {@link EIP6963RequestProviderEvent} to validate.\n * @returns Whether the {@link EIP6963RequestProviderEvent} is valid.\n */\nfunction isValidRequestProviderEvent(\n  event: unknown,\n): event is EIP6963RequestProviderEvent {\n  return event instanceof Event && event.type === EIP6963EventNames.Request;\n}\n\n/**\n * Validates an {@link EIP6963AnnounceProviderEvent} object.\n *\n * @param event - The {@link EIP6963AnnounceProviderEvent} to validate.\n * @returns Whether the {@link EIP6963AnnounceProviderEvent} is valid.\n */\nfunction isValidAnnounceProviderEvent(\n  event: unknown,\n): event is EIP6963AnnounceProviderEvent {\n  return (\n    event instanceof CustomEvent &&\n    event.type === EIP6963EventNames.Announce &&\n    Object.isFrozen(event.detail) &&\n    isValidProviderDetail(event.detail)\n  );\n}\n\n/**\n * Validates an {@link EIP6963ProviderDetail} object.\n *\n * @param providerDetail - The {@link EIP6963ProviderDetail} to validate.\n * @returns Whether the {@link EIP6963ProviderDetail} is valid.\n */\nfunction isValidProviderDetail(\n  providerDetail: unknown,\n): providerDetail is EIP6963ProviderDetail {\n  if (\n    !isObject(providerDetail) ||\n    !isObject(providerDetail.info) ||\n    !isObject(providerDetail.provider)\n  ) {\n    return false;\n  }\n  const { info } = providerDetail;\n\n  return (\n    typeof info.uuid === 'string' &&\n    UUID_V4_REGEX.test(info.uuid) &&\n    typeof info.name === 'string' &&\n    Boolean(info.name) &&\n    typeof info.icon === 'string' &&\n    info.icon.startsWith('data:image') &&\n    typeof info.rdns === 'string' &&\n    FQDN_REGEX.test(info.rdns)\n  );\n}\n\n/**\n * Throws an error with link to EIP-6963 specifications.\n *\n * @param message - The message to include.\n * @throws a friendly error with a link to EIP-6963.\n */\nfunction throwErrorEIP6963(message: string) {\n  throw new Error(\n    `${message} See https://eips.ethereum.org/EIPS/eip-6963 for requirements.`,\n  );\n}\n"]}
\ No newline at end of file
diff --git a/dist/MetaMaskInpageProvider.cjs b/dist/MetaMaskInpageProvider.cjs
index 2182ef4ca38ad6f682b92f2043ceef4e1df40986..63a83d4c25b54c087891f14944c8cf41bcd8e629 100644
--- a/dist/MetaMaskInpageProvider.cjs
+++ b/dist/MetaMaskInpageProvider.cjs
@@ -31,17 +31,14 @@ class MetaMaskInpageProvider extends StreamProvider_1.AbstractStreamProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
-     * Default: `metamask-provider`.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.shouldSendMetadata - Whether the provider should
      * send page metadata. Default: `true`.
      */
-    constructor(connectionStream, { jsonRpcStreamName = exports.MetaMaskInpageProviderStreamName, logger = console, maxEventListeners = 100, shouldSendMetadata, } = {}) {
+    constructor(connectionStream, { logger = console, maxEventListeners = 100, shouldSendMetadata, } = {}) {
         super(connectionStream, {
-            jsonRpcStreamName,
             logger,
             maxEventListeners,
             rpcMiddleware: (0, utils_1.getDefaultExternalMiddleware)(logger),
@@ -310,21 +307,29 @@ class MetaMaskInpageProvider extends StreamProvider_1.AbstractStreamProvider {
         });
     }
     /**
-     * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. Does nothing if neither the chainId
-     * nor the networkVersion are different from existing values.
+     * Upon receipt of a new chainId, networkVersion, and isConnected value
+     * emits corresponding events and sets relevant public state. We interpret
+     * a `networkVersion` with the value of `loading` to be null. The `isConnected`
+     * value determines if a `connect` or recoverable `disconnect` has occurred.
+     * Child classes that use the `networkVersion` for other purposes must implement
+     * additional handling therefore.
      *
      * @fires MetamaskInpageProvider#networkChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, networkVersion, } = {}) {
-        // This will validate the params and disconnect the provider if the
-        // networkVersion is 'loading'.
-        super._handleChainChanged({ chainId, networkVersion });
-        if (this._state.isConnected && networkVersion !== __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f")) {
-            __classPrivateFieldSet(this, _MetaMaskInpageProvider_networkVersion, networkVersion, "f");
+    _handleChainChanged({ chainId, networkVersion, isConnected, } = {}) {
+        super._handleChainChanged({ chainId, networkVersion, isConnected });
+        // The wallet will send a value of `loading` for `networkVersion` when it intends
+        // to communicate that this value cannot be resolved and should be intepreted as null.
+        // The wallet cannot directly send a null value for `networkVersion` because this
+        // would be a breaking change for existing dapps that use their own embedded MetaMask provider
+        // that expect this value to always be a integer string or the value 'loading'.
+        const targetNetworkVersion = networkVersion === 'loading' ? null : networkVersion;
+        if (targetNetworkVersion !== __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f")) {
+            __classPrivateFieldSet(this, _MetaMaskInpageProvider_networkVersion, targetNetworkVersion, "f");
             if (this._state.initialized) {
                 this.emit('networkChanged', __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f"));
             }
diff --git a/dist/MetaMaskInpageProvider.cjs.map b/dist/MetaMaskInpageProvider.cjs.map
index 9b75a0f2916868a4b0d14204d492e62d7f7194ec..73dfb0006819b892eb2e4d0be06a44710e3cbe6a 100644
--- a/dist/MetaMaskInpageProvider.cjs.map
+++ b/dist/MetaMaskInpageProvider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"MetaMaskInpageProvider.cjs","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, JsonRpcRequest, JsonRpcResponse } from '@metamask/utils';\nimport type { Duplex } from 'readable-stream';\n\nimport type { UnvalidatedJsonRpcRequest } from './BaseProvider';\nimport messages from './messages';\nimport { sendSiteMetadata } from './siteMetadata';\nimport type { StreamProviderOptions } from './StreamProvider';\nimport { AbstractStreamProvider } from './StreamProvider';\nimport {\n  EMITTED_NOTIFICATIONS,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback,\n  NOOP,\n} from './utils';\n\nexport type SendSyncJsonRpcRequest = {\n  method:\n    | 'eth_accounts'\n    | 'eth_coinbase'\n    | 'eth_uninstallFilter'\n    | 'net_version';\n} & JsonRpcRequest;\n\ntype WarningEventName = keyof SentWarningsState['events'];\n\nexport type MetaMaskInpageProviderOptions = {\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n\n  jsonRpcStreamName?: string | undefined;\n} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware' | 'jsonRpcStreamName'>>;\n\ntype SentWarningsState = {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n};\n\n/**\n * The name of the stream consumed by {@link MetaMaskInpageProvider}.\n */\nexport const MetaMaskInpageProviderStreamName = 'metamask-provider';\n\nexport class MetaMaskInpageProvider extends AbstractStreamProvider {\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  /**\n   * Experimental methods can be found here.\n   */\n  public readonly _metamask: ReturnType<\n    MetaMaskInpageProvider['_getExperimentalApi']\n  >;\n\n  #networkVersion: string | null;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isMetaMask: true;\n\n  /**\n   * Creates a new `MetaMaskInpageProvider`.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * Default: `metamask-provider`.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.shouldSendMetadata - Whether the provider should\n   * send page metadata. Default: `true`.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      jsonRpcStreamName = MetaMaskInpageProviderStreamName,\n      logger = console,\n      maxEventListeners = 100,\n      shouldSendMetadata,\n    }: MetaMaskInpageProviderOptions = {},\n  ) {\n    super(connectionStream, {\n      jsonRpcStreamName,\n      logger,\n      maxEventListeners,\n      rpcMiddleware: getDefaultExternalMiddleware(logger),\n    });\n\n    // We shouldn't perform asynchronous work in the constructor, but at one\n    // point we started doing so, and changing this class isn't worth it at\n    // the time of writing.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._initializeStateAsync();\n\n    this.#networkVersion = null;\n    this.isMetaMask = true;\n\n    this._sendSync = this._sendSync.bind(this);\n    this.enable = this.enable.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n\n    this._metamask = this._getExperimentalApi();\n\n    // handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method } = payload;\n      if (EMITTED_NOTIFICATIONS.includes(method)) {\n        // deprecated\n        // emitted here because that was the original order\n        this.emit('data', payload);\n        // deprecated\n        this.emit('notification', payload.params.result);\n      }\n    });\n\n    // send website metadata\n    if (shouldSendMetadata) {\n      if (document.readyState === 'complete') {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        sendSiteMetadata(this._rpcEngine, this._log);\n      } else {\n        const domContentLoadedHandler = () => {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          sendSiteMetadata(this._rpcEngine, this._log);\n          window.removeEventListener(\n            'DOMContentLoaded',\n            domContentLoadedHandler,\n          );\n        };\n        window.addEventListener('DOMContentLoaded', domContentLoadedHandler);\n      }\n    }\n  }\n\n  //====================\n  // Read-only Properties\n  //====================\n\n  get chainId(): string | null {\n    return super.chainId;\n  }\n\n  get networkVersion(): string | null {\n    return this.#networkVersion;\n  }\n\n  get selectedAddress(): string | null {\n    return super.selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The callback function.\n   */\n  sendAsync(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Json>) => void,\n  ): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   * `addListener`, `on`, `once`, `prependListener`, `prependOnceListener`.\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(\n    eventName: string,\n    listener: (...args: unknown[]) => void,\n  ) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    super._handleDisconnect(isRecoverable, errorMessage);\n    if (this.#networkVersion && !isRecoverable) {\n      this.#networkVersion = null;\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   *\n   * @param eventName - The name of the event.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-boolean-literal-compare\n    if (this._sentWarnings?.events[eventName as WarningEventName] === false) {\n      this._log.warn(messages.warnings.events[eventName as WarningEventName]);\n      this._sentWarnings.events[eventName as WarningEventName] = true;\n    }\n  }\n\n  //====================\n  // Deprecated Methods\n  //====================\n\n  /**\n   * Equivalent to: `ethereum.request('eth_requestAccounts')`.\n   *\n   * @deprecated Use request({ method: 'eth_requestAccounts' }) instead.\n   * @returns A promise that resolves to an array of addresses.\n   */\n  async enable(): Promise<string[]> {\n    if (!this._sentWarnings.enable) {\n      this._log.warn(messages.warnings.enableDeprecation);\n      this._sentWarnings.enable = true;\n    }\n\n    return new Promise<string[]>((resolve, reject) => {\n      try {\n        this._rpcRequest(\n          { method: 'eth_requestAccounts', params: [] },\n          getRpcPromiseCallback(resolve, reject),\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<Type extends Json>(\n    method: string,\n    params?: Type[],\n  ): Promise<JsonRpcResponse<Type>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<Type extends Json>(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Type>) => void,\n  ): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<Type extends Json>(\n    payload: SendSyncJsonRpcRequest,\n  ): JsonRpcResponse<Type>;\n\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      this._log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (\n      typeof methodOrPayload === 'string' &&\n      (!callbackOrArgs || Array.isArray(callbackOrArgs))\n    ) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false),\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else if (\n      methodOrPayload &&\n      typeof methodOrPayload === 'object' &&\n      typeof callbackOrArgs === 'function'\n    ) {\n      return this._rpcRequest(\n        methodOrPayload as JsonRpcRequest,\n        callbackOrArgs as (...args: unknown[]) => void,\n      );\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * Internal backwards compatibility method, used in send.\n   *\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   * @deprecated\n   */\n  protected _sendSync(payload: SendSyncJsonRpcRequest) {\n    let result;\n    switch (payload.method) {\n      case 'eth_accounts':\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case 'eth_coinbase':\n        result = this.selectedAddress ?? null;\n        break;\n\n      case 'eth_uninstallFilter':\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case 'net_version':\n        result = this.#networkVersion ?? null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * Constructor helper.\n   *\n   * Gets the experimental _metamask API as Proxy, so that we can warn consumers\n   * about its experimental nature.\n   *\n   * @returns The experimental _metamask API.\n   */\n  protected _getExperimentalApi() {\n    return new Proxy(\n      {\n        /**\n         * Determines if MetaMask is unlocked by the user.\n         *\n         * @returns Promise resolving to true if MetaMask is currently unlocked.\n         */\n        isUnlocked: async () => {\n          if (!this._state.initialized) {\n            await new Promise<void>((resolve) => {\n              this.on('_initialized', () => resolve());\n            });\n          }\n          return this._state.isUnlocked;\n        },\n\n        /**\n         * Make a batch RPC request.\n         *\n         * @param requests - The RPC requests to make.\n         */\n        requestBatch: async (requests: UnvalidatedJsonRpcRequest[]) => {\n          if (!Array.isArray(requests)) {\n            throw rpcErrors.invalidRequest({\n              message:\n                'Batch requests must be made with an array of request objects.',\n              data: requests,\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            this._rpcRequest(requests, getRpcPromiseCallback(resolve, reject));\n          });\n        },\n      },\n      {\n        get: (obj, prop, ...args) => {\n          if (!this._sentWarnings.experimentalMethods) {\n            this._log.warn(messages.warnings.experimentalMethods);\n            this._sentWarnings.experimentalMethods = true;\n          }\n          return Reflect.get(obj, prop, ...args);\n        },\n      },\n    );\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. Does nothing if neither the chainId\n   * nor the networkVersion are different from existing values.\n   *\n   * @fires MetamaskInpageProvider#networkChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n  }: { chainId?: string; networkVersion?: string } = {}) {\n    // This will validate the params and disconnect the provider if the\n    // networkVersion is 'loading'.\n    super._handleChainChanged({ chainId, networkVersion });\n\n    if (this._state.isConnected && networkVersion !== this.#networkVersion) {\n      this.#networkVersion = networkVersion as string;\n      if (this._state.initialized) {\n        this.emit('networkChanged', this.#networkVersion);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"MetaMaskInpageProvider.cjs","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, JsonRpcRequest, JsonRpcResponse } from '@metamask/utils';\nimport type { Duplex } from 'readable-stream';\n\nimport type { UnvalidatedJsonRpcRequest } from './BaseProvider';\nimport messages from './messages';\nimport { sendSiteMetadata } from './siteMetadata';\nimport type { StreamProviderOptions } from './StreamProvider';\nimport { AbstractStreamProvider } from './StreamProvider';\nimport {\n  EMITTED_NOTIFICATIONS,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback,\n  NOOP,\n} from './utils';\n\nexport type SendSyncJsonRpcRequest = {\n  method:\n    | 'eth_accounts'\n    | 'eth_coinbase'\n    | 'eth_uninstallFilter'\n    | 'net_version';\n} & JsonRpcRequest;\n\ntype WarningEventName = keyof SentWarningsState['events'];\n\nexport type MetaMaskInpageProviderOptions = {\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware'>>;\n\ntype SentWarningsState = {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n};\n\n/**\n * The name of the stream consumed by {@link MetaMaskInpageProvider}.\n */\nexport const MetaMaskInpageProviderStreamName = 'metamask-provider';\n\nexport class MetaMaskInpageProvider extends AbstractStreamProvider {\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  /**\n   * Experimental methods can be found here.\n   */\n  public readonly _metamask: ReturnType<\n    MetaMaskInpageProvider['_getExperimentalApi']\n  >;\n\n  #networkVersion: string | null;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isMetaMask: true;\n\n  /**\n   * Creates a new `MetaMaskInpageProvider`.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.shouldSendMetadata - Whether the provider should\n   * send page metadata. Default: `true`.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      logger = console,\n      maxEventListeners = 100,\n      shouldSendMetadata,\n    }: MetaMaskInpageProviderOptions = {},\n  ) {\n    super(connectionStream, {\n      logger,\n      maxEventListeners,\n      rpcMiddleware: getDefaultExternalMiddleware(logger),\n    });\n\n    // We shouldn't perform asynchronous work in the constructor, but at one\n    // point we started doing so, and changing this class isn't worth it at\n    // the time of writing.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._initializeStateAsync();\n\n    this.#networkVersion = null;\n    this.isMetaMask = true;\n\n    this._sendSync = this._sendSync.bind(this);\n    this.enable = this.enable.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n\n    this._metamask = this._getExperimentalApi();\n\n    // handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method } = payload;\n      if (EMITTED_NOTIFICATIONS.includes(method)) {\n        // deprecated\n        // emitted here because that was the original order\n        this.emit('data', payload);\n        // deprecated\n        this.emit('notification', payload.params.result);\n      }\n    });\n\n    // send website metadata\n    if (shouldSendMetadata) {\n      if (document.readyState === 'complete') {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        sendSiteMetadata(this._rpcEngine, this._log);\n      } else {\n        const domContentLoadedHandler = () => {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          sendSiteMetadata(this._rpcEngine, this._log);\n          window.removeEventListener(\n            'DOMContentLoaded',\n            domContentLoadedHandler,\n          );\n        };\n        window.addEventListener('DOMContentLoaded', domContentLoadedHandler);\n      }\n    }\n  }\n\n  //====================\n  // Read-only Properties\n  //====================\n\n  get chainId(): string | null {\n    return super.chainId;\n  }\n\n  get networkVersion(): string | null {\n    return this.#networkVersion;\n  }\n\n  get selectedAddress(): string | null {\n    return super.selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The callback function.\n   */\n  sendAsync(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Json>) => void,\n  ): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   * `addListener`, `on`, `once`, `prependListener`, `prependOnceListener`.\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(\n    eventName: string,\n    listener: (...args: unknown[]) => void,\n  ) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    super._handleDisconnect(isRecoverable, errorMessage);\n    if (this.#networkVersion && !isRecoverable) {\n      this.#networkVersion = null;\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   *\n   * @param eventName - The name of the event.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-boolean-literal-compare\n    if (this._sentWarnings?.events[eventName as WarningEventName] === false) {\n      this._log.warn(messages.warnings.events[eventName as WarningEventName]);\n      this._sentWarnings.events[eventName as WarningEventName] = true;\n    }\n  }\n\n  //====================\n  // Deprecated Methods\n  //====================\n\n  /**\n   * Equivalent to: `ethereum.request('eth_requestAccounts')`.\n   *\n   * @deprecated Use request({ method: 'eth_requestAccounts' }) instead.\n   * @returns A promise that resolves to an array of addresses.\n   */\n  async enable(): Promise<string[]> {\n    if (!this._sentWarnings.enable) {\n      this._log.warn(messages.warnings.enableDeprecation);\n      this._sentWarnings.enable = true;\n    }\n\n    return new Promise<string[]>((resolve, reject) => {\n      try {\n        this._rpcRequest(\n          { method: 'eth_requestAccounts', params: [] },\n          getRpcPromiseCallback(resolve, reject),\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<Type extends Json>(\n    method: string,\n    params?: Type[],\n  ): Promise<JsonRpcResponse<Type>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<Type extends Json>(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Type>) => void,\n  ): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<Type extends Json>(\n    payload: SendSyncJsonRpcRequest,\n  ): JsonRpcResponse<Type>;\n\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      this._log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (\n      typeof methodOrPayload === 'string' &&\n      (!callbackOrArgs || Array.isArray(callbackOrArgs))\n    ) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false),\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else if (\n      methodOrPayload &&\n      typeof methodOrPayload === 'object' &&\n      typeof callbackOrArgs === 'function'\n    ) {\n      return this._rpcRequest(\n        methodOrPayload as JsonRpcRequest,\n        callbackOrArgs as (...args: unknown[]) => void,\n      );\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * Internal backwards compatibility method, used in send.\n   *\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   * @deprecated\n   */\n  protected _sendSync(payload: SendSyncJsonRpcRequest) {\n    let result;\n    switch (payload.method) {\n      case 'eth_accounts':\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case 'eth_coinbase':\n        result = this.selectedAddress ?? null;\n        break;\n\n      case 'eth_uninstallFilter':\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case 'net_version':\n        result = this.#networkVersion ?? null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * Constructor helper.\n   *\n   * Gets the experimental _metamask API as Proxy, so that we can warn consumers\n   * about its experimental nature.\n   *\n   * @returns The experimental _metamask API.\n   */\n  protected _getExperimentalApi() {\n    return new Proxy(\n      {\n        /**\n         * Determines if MetaMask is unlocked by the user.\n         *\n         * @returns Promise resolving to true if MetaMask is currently unlocked.\n         */\n        isUnlocked: async () => {\n          if (!this._state.initialized) {\n            await new Promise<void>((resolve) => {\n              this.on('_initialized', () => resolve());\n            });\n          }\n          return this._state.isUnlocked;\n        },\n\n        /**\n         * Make a batch RPC request.\n         *\n         * @param requests - The RPC requests to make.\n         */\n        requestBatch: async (requests: UnvalidatedJsonRpcRequest[]) => {\n          if (!Array.isArray(requests)) {\n            throw rpcErrors.invalidRequest({\n              message:\n                'Batch requests must be made with an array of request objects.',\n              data: requests,\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            this._rpcRequest(requests, getRpcPromiseCallback(resolve, reject));\n          });\n        },\n      },\n      {\n        get: (obj, prop, ...args) => {\n          if (!this._sentWarnings.experimentalMethods) {\n            this._log.warn(messages.warnings.experimentalMethods);\n            this._sentWarnings.experimentalMethods = true;\n          }\n          return Reflect.get(obj, prop, ...args);\n        },\n      },\n    );\n  }\n\n  /**\n   * Upon receipt of a new chainId, networkVersion, and isConnected value\n   * emits corresponding events and sets relevant public state. We interpret\n   * a `networkVersion` with the value of `loading` to be null. The `isConnected`\n   * value determines if a `connect` or recoverable `disconnect` has occurred.\n   * Child classes that use the `networkVersion` for other purposes must implement\n   * additional handling therefore.\n   *\n   * @fires MetamaskInpageProvider#networkChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n    isConnected,\n  }: {\n    chainId?: string;\n    networkVersion?: string;\n    isConnected?: boolean;\n  } = {}) {\n    super._handleChainChanged({ chainId, networkVersion, isConnected });\n\n    // The wallet will send a value of `loading` for `networkVersion` when it intends\n    // to communicate that this value cannot be resolved and should be intepreted as null.\n    // The wallet cannot directly send a null value for `networkVersion` because this\n    // would be a breaking change for existing dapps that use their own embedded MetaMask provider\n    // that expect this value to always be a integer string or the value 'loading'.\n\n    const targetNetworkVersion =\n      networkVersion === 'loading' ? null : networkVersion;\n\n    if (targetNetworkVersion !== this.#networkVersion) {\n      this.#networkVersion = targetNetworkVersion as string;\n      if (this._state.initialized) {\n        this.emit('networkChanged', this.#networkVersion);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/MetaMaskInpageProvider.d.cts b/dist/MetaMaskInpageProvider.d.cts
index 88b54c73596ea11126468fbfc52f8b3e4badf487..97e931abef5ad17d3915b7fd8de633728633f1b3 100644
--- a/dist/MetaMaskInpageProvider.d.cts
+++ b/dist/MetaMaskInpageProvider.d.cts
@@ -11,8 +11,7 @@ export type MetaMaskInpageProviderOptions = {
      * Whether the provider should send page metadata.
      */
     shouldSendMetadata?: boolean;
-    jsonRpcStreamName?: string | undefined;
-} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware' | 'jsonRpcStreamName'>>;
+} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware'>>;
 type SentWarningsState = {
     enable: boolean;
     experimentalMethods: boolean;
@@ -44,15 +43,13 @@ export declare class MetaMaskInpageProvider extends AbstractStreamProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
-     * Default: `metamask-provider`.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.shouldSendMetadata - Whether the provider should
      * send page metadata. Default: `true`.
      */
-    constructor(connectionStream: Duplex, { jsonRpcStreamName, logger, maxEventListeners, shouldSendMetadata, }?: MetaMaskInpageProviderOptions);
+    constructor(connectionStream: Duplex, { logger, maxEventListeners, shouldSendMetadata, }?: MetaMaskInpageProviderOptions);
     get chainId(): string | null;
     get networkVersion(): string | null;
     get selectedAddress(): string | null;
@@ -161,18 +158,23 @@ export declare class MetaMaskInpageProvider extends AbstractStreamProvider {
         requestBatch: (requests: UnvalidatedJsonRpcRequest[]) => Promise<unknown>;
     };
     /**
-     * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. Does nothing if neither the chainId
-     * nor the networkVersion are different from existing values.
+     * Upon receipt of a new chainId, networkVersion, and isConnected value
+     * emits corresponding events and sets relevant public state. We interpret
+     * a `networkVersion` with the value of `loading` to be null. The `isConnected`
+     * value determines if a `connect` or recoverable `disconnect` has occurred.
+     * Child classes that use the `networkVersion` for other purposes must implement
+     * additional handling therefore.
      *
      * @fires MetamaskInpageProvider#networkChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, networkVersion, }?: {
+    protected _handleChainChanged({ chainId, networkVersion, isConnected, }?: {
         chainId?: string;
         networkVersion?: string;
+        isConnected?: boolean;
     }): void;
 }
 export {};
diff --git a/dist/MetaMaskInpageProvider.d.cts.map b/dist/MetaMaskInpageProvider.d.cts.map
index 3c0e1782b84663618ea1b809eea83590a4e2780d..f4ab45d111c3dbee94665a83dc03d1b7aed573ef 100644
--- a/dist/MetaMaskInpageProvider.d.cts.map
+++ b/dist/MetaMaskInpageProvider.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"MetaMaskInpageProvider.d.cts","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"MetaMaskInpageProvider.d.cts","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/MetaMaskInpageProvider.d.mts b/dist/MetaMaskInpageProvider.d.mts
index 14ba709796bb690ff3db5c6a3b83a2ece4166191..96af9efbe01fbc0e05c6c53e1797a7e62e1f55aa 100644
--- a/dist/MetaMaskInpageProvider.d.mts
+++ b/dist/MetaMaskInpageProvider.d.mts
@@ -11,8 +11,7 @@ export type MetaMaskInpageProviderOptions = {
      * Whether the provider should send page metadata.
      */
     shouldSendMetadata?: boolean;
-    jsonRpcStreamName?: string | undefined;
-} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware' | 'jsonRpcStreamName'>>;
+} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware'>>;
 type SentWarningsState = {
     enable: boolean;
     experimentalMethods: boolean;
@@ -44,15 +43,13 @@ export declare class MetaMaskInpageProvider extends AbstractStreamProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
-     * Default: `metamask-provider`.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.shouldSendMetadata - Whether the provider should
      * send page metadata. Default: `true`.
      */
-    constructor(connectionStream: Duplex, { jsonRpcStreamName, logger, maxEventListeners, shouldSendMetadata, }?: MetaMaskInpageProviderOptions);
+    constructor(connectionStream: Duplex, { logger, maxEventListeners, shouldSendMetadata, }?: MetaMaskInpageProviderOptions);
     get chainId(): string | null;
     get networkVersion(): string | null;
     get selectedAddress(): string | null;
@@ -161,18 +158,23 @@ export declare class MetaMaskInpageProvider extends AbstractStreamProvider {
         requestBatch: (requests: UnvalidatedJsonRpcRequest[]) => Promise<unknown>;
     };
     /**
-     * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. Does nothing if neither the chainId
-     * nor the networkVersion are different from existing values.
+     * Upon receipt of a new chainId, networkVersion, and isConnected value
+     * emits corresponding events and sets relevant public state. We interpret
+     * a `networkVersion` with the value of `loading` to be null. The `isConnected`
+     * value determines if a `connect` or recoverable `disconnect` has occurred.
+     * Child classes that use the `networkVersion` for other purposes must implement
+     * additional handling therefore.
      *
      * @fires MetamaskInpageProvider#networkChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, networkVersion, }?: {
+    protected _handleChainChanged({ chainId, networkVersion, isConnected, }?: {
         chainId?: string;
         networkVersion?: string;
+        isConnected?: boolean;
     }): void;
 }
 export {};
diff --git a/dist/MetaMaskInpageProvider.d.mts.map b/dist/MetaMaskInpageProvider.d.mts.map
index 26270bd13f64e5f3671bf64a80b8faf4b9db3de2..7c7027194af4ddcb4d4c844a56a7066719c1136b 100644
--- a/dist/MetaMaskInpageProvider.d.mts.map
+++ b/dist/MetaMaskInpageProvider.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"MetaMaskInpageProvider.d.mts","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"MetaMaskInpageProvider.d.mts","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,eAAe,EAAE,wBAAwB;AAC7E,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,yBAAyB,EAAE,2BAAuB;AAGhE,OAAO,KAAK,EAAE,qBAAqB,EAAE,6BAAyB;AAC9D,OAAO,EAAE,sBAAsB,EAAE,6BAAyB;AAQ1D,MAAM,MAAM,sBAAsB,GAAG;IACnC,MAAM,EACF,cAAc,GACd,cAAc,GACd,qBAAqB,GACrB,aAAa,CAAC;CACnB,GAAG,cAAc,CAAC;AAInB,MAAM,MAAM,6BAA6B,GAAG;IAC1C;;OAEG;IACH,kBAAkB,CAAC,EAAE,OAAO,CAAC;CAC9B,GAAG,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC,CAAC;AAE1D,KAAK,iBAAiB,GAAG;IAEvB,MAAM,EAAE,OAAO,CAAC;IAChB,mBAAmB,EAAE,OAAO,CAAC;IAC7B,IAAI,EAAE,OAAO,CAAC;IAEd,MAAM,EAAE;QACN,KAAK,EAAE,OAAO,CAAC;QACf,IAAI,EAAE,OAAO,CAAC;QACd,cAAc,EAAE,OAAO,CAAC;QACxB,YAAY,EAAE,OAAO,CAAC;KACvB,CAAC;CACH,CAAC;AAEF;;GAEG;AACH,eAAO,MAAM,gCAAgC,sBAAsB,CAAC;AAEpE,qBAAa,sBAAuB,SAAQ,sBAAsB;;IAChE,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAYxC;IAEF;;OAEG;IACH,SAAgB,SAAS,EAAE,UAAU,CACnC,sBAAsB,CAAC,qBAAqB,CAAC,CAC9C,CAAC;IAIF;;OAEG;IACH,SAAgB,UAAU,EAAE,IAAI,CAAC;IAEjC;;;;;;;;;;OAUG;gBAED,gBAAgB,EAAE,MAAM,EACxB,EACE,MAAgB,EAChB,iBAAuB,EACvB,kBAAkB,GACnB,GAAE,6BAAkC;IA4DvC,IAAI,OAAO,IAAI,MAAM,GAAG,IAAI,CAE3B;IAED,IAAI,cAAc,IAAI,MAAM,GAAG,IAAI,CAElC;IAED,IAAI,eAAe,IAAI,MAAM,GAAG,IAAI,CAEnC;IAMD;;;;;OAKG;IACH,SAAS,CACP,OAAO,EAAE,cAAc,EACvB,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,GACtE,IAAI;IAIP;;;;OAIG;IAEH,WAAW,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI;IAKrE,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI;IAK5D,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI;IAK9D,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI;IAKzE,mBAAmB,CACjB,SAAS,EAAE,MAAM,EACjB,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,IAAI;IAUxC;;;;;;;;;;OAUG;IACH,SAAS,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,EAAE,MAAM;IAOzE;;;;OAIG;IACH,SAAS,CAAC,kBAAkB,CAAC,SAAS,EAAE,MAAM,GAAG,IAAI;IAYrD;;;;;OAKG;IACG,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;IAkBjC;;;;;;;;OAQG;IACH,IAAI,CAAC,IAAI,SAAS,IAAI,EACpB,MAAM,EAAE,MAAM,EACd,MAAM,CAAC,EAAE,IAAI,EAAE,GACd,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAEjC;;;;;;;OAOG;IACH,IAAI,CAAC,IAAI,SAAS,IAAI,EACpB,OAAO,EAAE,cAAc,EACvB,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE,MAAM,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,GACtE,IAAI;IAEP;;;;;;;OAOG;IACH,IAAI,CAAC,IAAI,SAAS,IAAI,EACpB,OAAO,EAAE,sBAAsB,GAC9B,eAAe,CAAC,IAAI,CAAC;IAoCxB;;;;;;OAMG;IACH,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,sBAAsB;;;;;IA+BnD;;;;;;;OAOG;IACH,SAAS,CAAC,mBAAmB;QAGvB;;;;WAIG;;QAUH;;;;WAIG;iCAC4B,yBAAyB,EAAE;;IA0BhE;;;;;;;;;;;;;OAaG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,EACd,WAAW,GACZ,GAAE;QACD,OAAO,CAAC,EAAE,MAAM,CAAC;QACjB,cAAc,CAAC,EAAE,MAAM,CAAC;QACxB,WAAW,CAAC,EAAE,OAAO,CAAC;KAClB;CAmBP"}
\ No newline at end of file
diff --git a/dist/MetaMaskInpageProvider.mjs b/dist/MetaMaskInpageProvider.mjs
index 1aa9acd4cbfa7ce3ce5d0883b98ceb31de23fa90..451652ff976f34a2cdea154c963c1a120edd2af0 100644
--- a/dist/MetaMaskInpageProvider.mjs
+++ b/dist/MetaMaskInpageProvider.mjs
@@ -25,17 +25,14 @@ export class MetaMaskInpageProvider extends AbstractStreamProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
-     * Default: `metamask-provider`.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.shouldSendMetadata - Whether the provider should
      * send page metadata. Default: `true`.
      */
-    constructor(connectionStream, { jsonRpcStreamName = MetaMaskInpageProviderStreamName, logger = console, maxEventListeners = 100, shouldSendMetadata, } = {}) {
+    constructor(connectionStream, { logger = console, maxEventListeners = 100, shouldSendMetadata, } = {}) {
         super(connectionStream, {
-            jsonRpcStreamName,
             logger,
             maxEventListeners,
             rpcMiddleware: getDefaultExternalMiddleware(logger),
@@ -304,21 +301,29 @@ export class MetaMaskInpageProvider extends AbstractStreamProvider {
         });
     }
     /**
-     * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. Does nothing if neither the chainId
-     * nor the networkVersion are different from existing values.
+     * Upon receipt of a new chainId, networkVersion, and isConnected value
+     * emits corresponding events and sets relevant public state. We interpret
+     * a `networkVersion` with the value of `loading` to be null. The `isConnected`
+     * value determines if a `connect` or recoverable `disconnect` has occurred.
+     * Child classes that use the `networkVersion` for other purposes must implement
+     * additional handling therefore.
      *
      * @fires MetamaskInpageProvider#networkChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, networkVersion, } = {}) {
-        // This will validate the params and disconnect the provider if the
-        // networkVersion is 'loading'.
-        super._handleChainChanged({ chainId, networkVersion });
-        if (this._state.isConnected && networkVersion !== __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f")) {
-            __classPrivateFieldSet(this, _MetaMaskInpageProvider_networkVersion, networkVersion, "f");
+    _handleChainChanged({ chainId, networkVersion, isConnected, } = {}) {
+        super._handleChainChanged({ chainId, networkVersion, isConnected });
+        // The wallet will send a value of `loading` for `networkVersion` when it intends
+        // to communicate that this value cannot be resolved and should be intepreted as null.
+        // The wallet cannot directly send a null value for `networkVersion` because this
+        // would be a breaking change for existing dapps that use their own embedded MetaMask provider
+        // that expect this value to always be a integer string or the value 'loading'.
+        const targetNetworkVersion = networkVersion === 'loading' ? null : networkVersion;
+        if (targetNetworkVersion !== __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f")) {
+            __classPrivateFieldSet(this, _MetaMaskInpageProvider_networkVersion, targetNetworkVersion, "f");
             if (this._state.initialized) {
                 this.emit('networkChanged', __classPrivateFieldGet(this, _MetaMaskInpageProvider_networkVersion, "f"));
             }
diff --git a/dist/MetaMaskInpageProvider.mjs.map b/dist/MetaMaskInpageProvider.mjs.map
index e56a7c06675587913ec671adf1780d9c6ac2adf3..97448e1af39416b71bb50582f6ef7cb6a39b3cad 100644
--- a/dist/MetaMaskInpageProvider.mjs.map
+++ b/dist/MetaMaskInpageProvider.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"MetaMaskInpageProvider.mjs","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, JsonRpcRequest, JsonRpcResponse } from '@metamask/utils';\nimport type { Duplex } from 'readable-stream';\n\nimport type { UnvalidatedJsonRpcRequest } from './BaseProvider';\nimport messages from './messages';\nimport { sendSiteMetadata } from './siteMetadata';\nimport type { StreamProviderOptions } from './StreamProvider';\nimport { AbstractStreamProvider } from './StreamProvider';\nimport {\n  EMITTED_NOTIFICATIONS,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback,\n  NOOP,\n} from './utils';\n\nexport type SendSyncJsonRpcRequest = {\n  method:\n    | 'eth_accounts'\n    | 'eth_coinbase'\n    | 'eth_uninstallFilter'\n    | 'net_version';\n} & JsonRpcRequest;\n\ntype WarningEventName = keyof SentWarningsState['events'];\n\nexport type MetaMaskInpageProviderOptions = {\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n\n  jsonRpcStreamName?: string | undefined;\n} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware' | 'jsonRpcStreamName'>>;\n\ntype SentWarningsState = {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n};\n\n/**\n * The name of the stream consumed by {@link MetaMaskInpageProvider}.\n */\nexport const MetaMaskInpageProviderStreamName = 'metamask-provider';\n\nexport class MetaMaskInpageProvider extends AbstractStreamProvider {\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  /**\n   * Experimental methods can be found here.\n   */\n  public readonly _metamask: ReturnType<\n    MetaMaskInpageProvider['_getExperimentalApi']\n  >;\n\n  #networkVersion: string | null;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isMetaMask: true;\n\n  /**\n   * Creates a new `MetaMaskInpageProvider`.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * Default: `metamask-provider`.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.shouldSendMetadata - Whether the provider should\n   * send page metadata. Default: `true`.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      jsonRpcStreamName = MetaMaskInpageProviderStreamName,\n      logger = console,\n      maxEventListeners = 100,\n      shouldSendMetadata,\n    }: MetaMaskInpageProviderOptions = {},\n  ) {\n    super(connectionStream, {\n      jsonRpcStreamName,\n      logger,\n      maxEventListeners,\n      rpcMiddleware: getDefaultExternalMiddleware(logger),\n    });\n\n    // We shouldn't perform asynchronous work in the constructor, but at one\n    // point we started doing so, and changing this class isn't worth it at\n    // the time of writing.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._initializeStateAsync();\n\n    this.#networkVersion = null;\n    this.isMetaMask = true;\n\n    this._sendSync = this._sendSync.bind(this);\n    this.enable = this.enable.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n\n    this._metamask = this._getExperimentalApi();\n\n    // handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method } = payload;\n      if (EMITTED_NOTIFICATIONS.includes(method)) {\n        // deprecated\n        // emitted here because that was the original order\n        this.emit('data', payload);\n        // deprecated\n        this.emit('notification', payload.params.result);\n      }\n    });\n\n    // send website metadata\n    if (shouldSendMetadata) {\n      if (document.readyState === 'complete') {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        sendSiteMetadata(this._rpcEngine, this._log);\n      } else {\n        const domContentLoadedHandler = () => {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          sendSiteMetadata(this._rpcEngine, this._log);\n          window.removeEventListener(\n            'DOMContentLoaded',\n            domContentLoadedHandler,\n          );\n        };\n        window.addEventListener('DOMContentLoaded', domContentLoadedHandler);\n      }\n    }\n  }\n\n  //====================\n  // Read-only Properties\n  //====================\n\n  get chainId(): string | null {\n    return super.chainId;\n  }\n\n  get networkVersion(): string | null {\n    return this.#networkVersion;\n  }\n\n  get selectedAddress(): string | null {\n    return super.selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The callback function.\n   */\n  sendAsync(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Json>) => void,\n  ): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   * `addListener`, `on`, `once`, `prependListener`, `prependOnceListener`.\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(\n    eventName: string,\n    listener: (...args: unknown[]) => void,\n  ) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    super._handleDisconnect(isRecoverable, errorMessage);\n    if (this.#networkVersion && !isRecoverable) {\n      this.#networkVersion = null;\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   *\n   * @param eventName - The name of the event.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-boolean-literal-compare\n    if (this._sentWarnings?.events[eventName as WarningEventName] === false) {\n      this._log.warn(messages.warnings.events[eventName as WarningEventName]);\n      this._sentWarnings.events[eventName as WarningEventName] = true;\n    }\n  }\n\n  //====================\n  // Deprecated Methods\n  //====================\n\n  /**\n   * Equivalent to: `ethereum.request('eth_requestAccounts')`.\n   *\n   * @deprecated Use request({ method: 'eth_requestAccounts' }) instead.\n   * @returns A promise that resolves to an array of addresses.\n   */\n  async enable(): Promise<string[]> {\n    if (!this._sentWarnings.enable) {\n      this._log.warn(messages.warnings.enableDeprecation);\n      this._sentWarnings.enable = true;\n    }\n\n    return new Promise<string[]>((resolve, reject) => {\n      try {\n        this._rpcRequest(\n          { method: 'eth_requestAccounts', params: [] },\n          getRpcPromiseCallback(resolve, reject),\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<Type extends Json>(\n    method: string,\n    params?: Type[],\n  ): Promise<JsonRpcResponse<Type>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<Type extends Json>(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Type>) => void,\n  ): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<Type extends Json>(\n    payload: SendSyncJsonRpcRequest,\n  ): JsonRpcResponse<Type>;\n\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      this._log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (\n      typeof methodOrPayload === 'string' &&\n      (!callbackOrArgs || Array.isArray(callbackOrArgs))\n    ) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false),\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else if (\n      methodOrPayload &&\n      typeof methodOrPayload === 'object' &&\n      typeof callbackOrArgs === 'function'\n    ) {\n      return this._rpcRequest(\n        methodOrPayload as JsonRpcRequest,\n        callbackOrArgs as (...args: unknown[]) => void,\n      );\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * Internal backwards compatibility method, used in send.\n   *\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   * @deprecated\n   */\n  protected _sendSync(payload: SendSyncJsonRpcRequest) {\n    let result;\n    switch (payload.method) {\n      case 'eth_accounts':\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case 'eth_coinbase':\n        result = this.selectedAddress ?? null;\n        break;\n\n      case 'eth_uninstallFilter':\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case 'net_version':\n        result = this.#networkVersion ?? null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * Constructor helper.\n   *\n   * Gets the experimental _metamask API as Proxy, so that we can warn consumers\n   * about its experimental nature.\n   *\n   * @returns The experimental _metamask API.\n   */\n  protected _getExperimentalApi() {\n    return new Proxy(\n      {\n        /**\n         * Determines if MetaMask is unlocked by the user.\n         *\n         * @returns Promise resolving to true if MetaMask is currently unlocked.\n         */\n        isUnlocked: async () => {\n          if (!this._state.initialized) {\n            await new Promise<void>((resolve) => {\n              this.on('_initialized', () => resolve());\n            });\n          }\n          return this._state.isUnlocked;\n        },\n\n        /**\n         * Make a batch RPC request.\n         *\n         * @param requests - The RPC requests to make.\n         */\n        requestBatch: async (requests: UnvalidatedJsonRpcRequest[]) => {\n          if (!Array.isArray(requests)) {\n            throw rpcErrors.invalidRequest({\n              message:\n                'Batch requests must be made with an array of request objects.',\n              data: requests,\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            this._rpcRequest(requests, getRpcPromiseCallback(resolve, reject));\n          });\n        },\n      },\n      {\n        get: (obj, prop, ...args) => {\n          if (!this._sentWarnings.experimentalMethods) {\n            this._log.warn(messages.warnings.experimentalMethods);\n            this._sentWarnings.experimentalMethods = true;\n          }\n          return Reflect.get(obj, prop, ...args);\n        },\n      },\n    );\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. Does nothing if neither the chainId\n   * nor the networkVersion are different from existing values.\n   *\n   * @fires MetamaskInpageProvider#networkChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n  }: { chainId?: string; networkVersion?: string } = {}) {\n    // This will validate the params and disconnect the provider if the\n    // networkVersion is 'loading'.\n    super._handleChainChanged({ chainId, networkVersion });\n\n    if (this._state.isConnected && networkVersion !== this.#networkVersion) {\n      this.#networkVersion = networkVersion as string;\n      if (this._state.initialized) {\n        this.emit('networkChanged', this.#networkVersion);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"MetaMaskInpageProvider.mjs","sourceRoot":"","sources":["../src/MetaMaskInpageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import { rpcErrors } from '@metamask/rpc-errors';\nimport type { Json, JsonRpcRequest, JsonRpcResponse } from '@metamask/utils';\nimport type { Duplex } from 'readable-stream';\n\nimport type { UnvalidatedJsonRpcRequest } from './BaseProvider';\nimport messages from './messages';\nimport { sendSiteMetadata } from './siteMetadata';\nimport type { StreamProviderOptions } from './StreamProvider';\nimport { AbstractStreamProvider } from './StreamProvider';\nimport {\n  EMITTED_NOTIFICATIONS,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback,\n  NOOP,\n} from './utils';\n\nexport type SendSyncJsonRpcRequest = {\n  method:\n    | 'eth_accounts'\n    | 'eth_coinbase'\n    | 'eth_uninstallFilter'\n    | 'net_version';\n} & JsonRpcRequest;\n\ntype WarningEventName = keyof SentWarningsState['events'];\n\nexport type MetaMaskInpageProviderOptions = {\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n} & Partial<Omit<StreamProviderOptions, 'rpcMiddleware'>>;\n\ntype SentWarningsState = {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n};\n\n/**\n * The name of the stream consumed by {@link MetaMaskInpageProvider}.\n */\nexport const MetaMaskInpageProviderStreamName = 'metamask-provider';\n\nexport class MetaMaskInpageProvider extends AbstractStreamProvider {\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  /**\n   * Experimental methods can be found here.\n   */\n  public readonly _metamask: ReturnType<\n    MetaMaskInpageProvider['_getExperimentalApi']\n  >;\n\n  #networkVersion: string | null;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isMetaMask: true;\n\n  /**\n   * Creates a new `MetaMaskInpageProvider`.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.shouldSendMetadata - Whether the provider should\n   * send page metadata. Default: `true`.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      logger = console,\n      maxEventListeners = 100,\n      shouldSendMetadata,\n    }: MetaMaskInpageProviderOptions = {},\n  ) {\n    super(connectionStream, {\n      logger,\n      maxEventListeners,\n      rpcMiddleware: getDefaultExternalMiddleware(logger),\n    });\n\n    // We shouldn't perform asynchronous work in the constructor, but at one\n    // point we started doing so, and changing this class isn't worth it at\n    // the time of writing.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._initializeStateAsync();\n\n    this.#networkVersion = null;\n    this.isMetaMask = true;\n\n    this._sendSync = this._sendSync.bind(this);\n    this.enable = this.enable.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n\n    this._metamask = this._getExperimentalApi();\n\n    // handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method } = payload;\n      if (EMITTED_NOTIFICATIONS.includes(method)) {\n        // deprecated\n        // emitted here because that was the original order\n        this.emit('data', payload);\n        // deprecated\n        this.emit('notification', payload.params.result);\n      }\n    });\n\n    // send website metadata\n    if (shouldSendMetadata) {\n      if (document.readyState === 'complete') {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        sendSiteMetadata(this._rpcEngine, this._log);\n      } else {\n        const domContentLoadedHandler = () => {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          sendSiteMetadata(this._rpcEngine, this._log);\n          window.removeEventListener(\n            'DOMContentLoaded',\n            domContentLoadedHandler,\n          );\n        };\n        window.addEventListener('DOMContentLoaded', domContentLoadedHandler);\n      }\n    }\n  }\n\n  //====================\n  // Read-only Properties\n  //====================\n\n  get chainId(): string | null {\n    return super.chainId;\n  }\n\n  get networkVersion(): string | null {\n    return this.#networkVersion;\n  }\n\n  get selectedAddress(): string | null {\n    return super.selectedAddress;\n  }\n\n  //====================\n  // Public Methods\n  //====================\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The callback function.\n   */\n  sendAsync(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Json>) => void,\n  ): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   * `addListener`, `on`, `once`, `prependListener`, `prependOnceListener`.\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(\n    eventName: string,\n    listener: (...args: unknown[]) => void,\n  ) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string) {\n    super._handleDisconnect(isRecoverable, errorMessage);\n    if (this.#networkVersion && !isRecoverable) {\n      this.#networkVersion = null;\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   *\n   * @param eventName - The name of the event.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-boolean-literal-compare\n    if (this._sentWarnings?.events[eventName as WarningEventName] === false) {\n      this._log.warn(messages.warnings.events[eventName as WarningEventName]);\n      this._sentWarnings.events[eventName as WarningEventName] = true;\n    }\n  }\n\n  //====================\n  // Deprecated Methods\n  //====================\n\n  /**\n   * Equivalent to: `ethereum.request('eth_requestAccounts')`.\n   *\n   * @deprecated Use request({ method: 'eth_requestAccounts' }) instead.\n   * @returns A promise that resolves to an array of addresses.\n   */\n  async enable(): Promise<string[]> {\n    if (!this._sentWarnings.enable) {\n      this._log.warn(messages.warnings.enableDeprecation);\n      this._sentWarnings.enable = true;\n    }\n\n    return new Promise<string[]>((resolve, reject) => {\n      try {\n        this._rpcRequest(\n          { method: 'eth_requestAccounts', params: [] },\n          getRpcPromiseCallback(resolve, reject),\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<Type extends Json>(\n    method: string,\n    params?: Type[],\n  ): Promise<JsonRpcResponse<Type>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<Type extends Json>(\n    payload: JsonRpcRequest,\n    callback: (error: Error | null, result?: JsonRpcResponse<Type>) => void,\n  ): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<Type extends Json>(\n    payload: SendSyncJsonRpcRequest,\n  ): JsonRpcResponse<Type>;\n\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      this._log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (\n      typeof methodOrPayload === 'string' &&\n      (!callbackOrArgs || Array.isArray(callbackOrArgs))\n    ) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false),\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else if (\n      methodOrPayload &&\n      typeof methodOrPayload === 'object' &&\n      typeof callbackOrArgs === 'function'\n    ) {\n      return this._rpcRequest(\n        methodOrPayload as JsonRpcRequest,\n        callbackOrArgs as (...args: unknown[]) => void,\n      );\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * Internal backwards compatibility method, used in send.\n   *\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   * @deprecated\n   */\n  protected _sendSync(payload: SendSyncJsonRpcRequest) {\n    let result;\n    switch (payload.method) {\n      case 'eth_accounts':\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case 'eth_coinbase':\n        result = this.selectedAddress ?? null;\n        break;\n\n      case 'eth_uninstallFilter':\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case 'net_version':\n        result = this.#networkVersion ?? null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * Constructor helper.\n   *\n   * Gets the experimental _metamask API as Proxy, so that we can warn consumers\n   * about its experimental nature.\n   *\n   * @returns The experimental _metamask API.\n   */\n  protected _getExperimentalApi() {\n    return new Proxy(\n      {\n        /**\n         * Determines if MetaMask is unlocked by the user.\n         *\n         * @returns Promise resolving to true if MetaMask is currently unlocked.\n         */\n        isUnlocked: async () => {\n          if (!this._state.initialized) {\n            await new Promise<void>((resolve) => {\n              this.on('_initialized', () => resolve());\n            });\n          }\n          return this._state.isUnlocked;\n        },\n\n        /**\n         * Make a batch RPC request.\n         *\n         * @param requests - The RPC requests to make.\n         */\n        requestBatch: async (requests: UnvalidatedJsonRpcRequest[]) => {\n          if (!Array.isArray(requests)) {\n            throw rpcErrors.invalidRequest({\n              message:\n                'Batch requests must be made with an array of request objects.',\n              data: requests,\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            this._rpcRequest(requests, getRpcPromiseCallback(resolve, reject));\n          });\n        },\n      },\n      {\n        get: (obj, prop, ...args) => {\n          if (!this._sentWarnings.experimentalMethods) {\n            this._log.warn(messages.warnings.experimentalMethods);\n            this._sentWarnings.experimentalMethods = true;\n          }\n          return Reflect.get(obj, prop, ...args);\n        },\n      },\n    );\n  }\n\n  /**\n   * Upon receipt of a new chainId, networkVersion, and isConnected value\n   * emits corresponding events and sets relevant public state. We interpret\n   * a `networkVersion` with the value of `loading` to be null. The `isConnected`\n   * value determines if a `connect` or recoverable `disconnect` has occurred.\n   * Child classes that use the `networkVersion` for other purposes must implement\n   * additional handling therefore.\n   *\n   * @fires MetamaskInpageProvider#networkChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n    isConnected,\n  }: {\n    chainId?: string;\n    networkVersion?: string;\n    isConnected?: boolean;\n  } = {}) {\n    super._handleChainChanged({ chainId, networkVersion, isConnected });\n\n    // The wallet will send a value of `loading` for `networkVersion` when it intends\n    // to communicate that this value cannot be resolved and should be intepreted as null.\n    // The wallet cannot directly send a null value for `networkVersion` because this\n    // would be a breaking change for existing dapps that use their own embedded MetaMask provider\n    // that expect this value to always be a integer string or the value 'loading'.\n\n    const targetNetworkVersion =\n      networkVersion === 'loading' ? null : networkVersion;\n\n    if (targetNetworkVersion !== this.#networkVersion) {\n      this.#networkVersion = targetNetworkVersion as string;\n      if (this._state.initialized) {\n        this.emit('networkChanged', this.#networkVersion);\n      }\n    }\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/StreamProvider.cjs b/dist/StreamProvider.cjs
index 340e5179e02bedc6854b0d7b5a8861bab101b5ec..10247263488f26f5567d0877038255b16ff15b39 100644
--- a/dist/StreamProvider.cjs
+++ b/dist/StreamProvider.cjs
@@ -5,7 +5,6 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.StreamProvider = exports.AbstractStreamProvider = void 0;
 const json_rpc_middleware_stream_1 = require("@metamask/json-rpc-middleware-stream");
-const object_multiplex_1 = __importDefault(require("@metamask/object-multiplex"));
 const is_stream_1 = require("is-stream/index.js");
 const readable_stream_1 = require("readable-stream");
 const BaseProvider_1 = require("./BaseProvider.cjs");
@@ -23,29 +22,25 @@ class AbstractStreamProvider extends BaseProvider_1.BaseProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.rpcMiddleware - The RPC middleware stack to use.
      */
-    constructor(connectionStream, { jsonRpcStreamName, logger = console, maxEventListeners = 100, rpcMiddleware = [], }) {
+    constructor(connectionStream, { logger = console, maxEventListeners = 100, rpcMiddleware = [], } = {}) {
         super({ logger, maxEventListeners, rpcMiddleware });
         if (!(0, is_stream_1.duplex)(connectionStream)) {
             throw new Error(messages_1.default.errors.invalidDuplexStream());
         }
         // Bind functions to prevent consumers from making unbound calls
         this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);
-        // Set up connectionStream multiplexing
-        const mux = new object_multiplex_1.default();
-        (0, readable_stream_1.pipeline)(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, 'MetaMask'));
         // Set up RPC connection
         // Typecast: The type of `Duplex` is incompatible with the type of
         // `JsonRpcConnection`.
         this._jsonRpcConnection = (0, json_rpc_middleware_stream_1.createStreamMiddleware)({
             retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',
         });
-        (0, readable_stream_1.pipeline)(this._jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), this._jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'));
+        (0, readable_stream_1.pipeline)(connectionStream, this._jsonRpcConnection.stream, connectionStream, this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'));
         // Wire up the JsonRpcEngine to the JSON-RPC connection stream
         this._rpcEngine.push(this._jsonRpcConnection.middleware);
         // Handle JSON-RPC notifications
@@ -116,19 +111,16 @@ class AbstractStreamProvider extends BaseProvider_1.BaseProvider {
     }
     /**
      * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. This class does not have a
-     * `networkVersion` property, but we rely on receiving a `networkVersion`
-     * with the value of `loading` to detect when the network is changing and
-     * a recoverable `disconnect` even has occurred. Child classes that use the
-     * `networkVersion` for other purposes must implement additional handling
-     * therefore.
+     * events and sets relevant public state. Child classes that use the
+     * `networkVersion` for other purposes must implement additional handling.
      *
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, networkVersion, } = {}) {
+    _handleChainChanged({ chainId, networkVersion, isConnected, } = {}) {
         if (!(0, utils_1.isValidChainId)(chainId) || !(0, utils_1.isValidNetworkVersion)(networkVersion)) {
             this._log.error(messages_1.default.errors.invalidNetworkParams(), {
                 chainId,
@@ -136,12 +128,10 @@ class AbstractStreamProvider extends BaseProvider_1.BaseProvider {
             });
             return;
         }
-        if (networkVersion === 'loading') {
+        super._handleChainChanged({ chainId, isConnected });
+        if (!isConnected) {
             this._handleDisconnect(true);
         }
-        else {
-            super._handleChainChanged({ chainId });
-        }
     }
 }
 exports.AbstractStreamProvider = AbstractStreamProvider;
diff --git a/dist/StreamProvider.cjs.map b/dist/StreamProvider.cjs.map
index f8e30f288daa48481e274a029c8c501c070969f1..ad871b11033d01bf0848db844ffb8f51981ae97f 100644
--- a/dist/StreamProvider.cjs.map
+++ b/dist/StreamProvider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"StreamProvider.cjs","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":";;;;;;AACA,qFAA8E;AAC9E,kFAAyD;AAGzD,kDAA+C;AAC/C,qDAA2C;AAI3C,qDAA8C;AAC9C,8DAAkC;AAClC,uCAIiB;AAejB;;;;;GAKG;AACH,MAAsB,sBAAuB,SAAQ,2BAAY;IAG/D;;;;;;;;;;OAUG;IACH,YACE,gBAAwB,EACxB,EACE,iBAAiB,EACjB,MAAM,GAAG,OAAO,EAChB,iBAAiB,GAAG,GAAG,EACvB,aAAa,GAAG,EAAE,GACI;QAExB,KAAK,CAAC,EAAE,MAAM,EAAE,iBAAiB,EAAE,aAAa,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAA,kBAAQ,EAAC,gBAAgB,CAAC,EAAE,CAAC;YAChC,MAAM,IAAI,KAAK,CAAC,kBAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,CAAC;QACzD,CAAC;QAED,gEAAgE;QAChE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvE,uCAAuC;QACvC,MAAM,GAAG,GAAG,IAAI,0BAAe,EAAE,CAAC;QAClC,IAAA,0BAAQ,EACN,gBAAgB,EAChB,GAAwB,EACxB,gBAAgB,EAChB,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CACpD,CAAC;QAEF,wBAAwB;QACxB,kEAAkE;QAClE,uBAAuB;QACvB,IAAI,CAAC,kBAAkB,GAAG,IAAA,mDAAsB,EAAC;YAC/C,cAAc,EAAE,sCAAsC;SACvD,CAAiC,CAAC;QAEnC,IAAA,0BAAQ,EACN,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAC9B,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAsB,EACxD,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAC9B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAChE,CAAC;QAEF,8DAA8D;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAEzD,gCAAgC;QAChC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,OAAO,EAAE,EAAE;YAC5D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;YACnC,IAAI,MAAM,KAAK,0BAA0B,EAAE,CAAC;gBAC1C,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;YACtC,CAAC;iBAAM,IAAI,MAAM,KAAK,6BAA6B,EAAE,CAAC;gBACpD,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;YACzC,CAAC;iBAAM,IAAI,MAAM,KAAK,uBAAuB,EAAE,CAAC;gBAC9C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACnC,CAAC;iBAAM,IAAI,6BAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;gBAClD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACnB,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE,MAAM;iBACb,CAAC,CAAC;YACL,CAAC;iBAAM,IAAI,MAAM,KAAK,yBAAyB,EAAE,CAAC;gBAChD,gBAAgB,CAAC,OAAO,CACtB,IAAI,KAAK,CAAC,kBAAQ,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC,CACrD,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,kBAAkB;IAClB,sBAAsB;IAEtB;;;;;;OAMG;IACO,KAAK,CAAC,qBAAqB;QACnC,IAAI,YAA6D,CAAC;QAElE,IAAI,CAAC;YACH,YAAY,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC;gBACjC,MAAM,EAAE,2BAA2B;aACpC,CAAC,CAAoD,CAAC;QACzD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,KAAK,CACb,gEAAgE,EAChE,KAAK,CACN,CAAC;QACJ,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;;OAQG;IACH,gDAAgD;IACxC,uBAAuB,CAAC,UAAkB,EAAE,KAAmB;QACrE,IAAI,UAAU,GAAG,iCAAiC,UAAU,IAAI,CAAC;QACjE,IAAI,KAAK,EAAE,KAAK,EAAE,CAAC;YACjB,UAAU,IAAI,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAED;;;;;;;;;;;;;OAaG;IACO,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,MAIZ,EAAE;QACJ,IAAI,CAAC,IAAA,sBAAc,EAAC,OAAO,CAAC,IAAI,CAAC,IAAA,6BAAqB,EAAC,cAAc,CAAC,EAAE,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAQ,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAE;gBACtD,OAAO;gBACP,cAAc;aACf,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;YACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;aAAM,CAAC;YACN,KAAK,CAAC,mBAAmB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;CACF;AAtKD,wDAsKC;AAED;;;;;GAKG;AACH,MAAa,cAAe,SAAQ,sBAAsB;IACxD;;;;;;OAMG;IACH,KAAK,CAAC,UAAU;QACd,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACtC,CAAC;CACF;AAXD,wCAWC","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createStreamMiddleware } from '@metamask/json-rpc-middleware-stream';\nimport ObjectMultiplex from '@metamask/object-multiplex';\nimport type SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type { Json, JsonRpcParams } from '@metamask/utils';\nimport { duplex as isDuplex } from 'is-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Duplex } from 'readable-stream';\n\nimport type { BaseProviderOptions } from './BaseProvider';\nimport { BaseProvider } from './BaseProvider';\nimport messages from './messages';\nimport {\n  EMITTED_NOTIFICATIONS,\n  isValidChainId,\n  isValidNetworkVersion,\n} from './utils';\n\nexport type StreamProviderOptions = {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName: string;\n} & BaseProviderOptions;\n\nexport type JsonRpcConnection = {\n  events: SafeEventEmitter;\n  middleware: JsonRpcMiddleware<JsonRpcParams, Json>;\n  stream: Duplex;\n};\n\n/**\n * An abstract EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Implementers must\n * call {@link AbstractStreamProvider._initializeStateAsync} after instantiation\n * to initialize the provider's state.\n */\nexport abstract class AbstractStreamProvider extends BaseProvider {\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  /**\n   * Creates a new AbstractStreamProvider instance.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack to use.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      jsonRpcStreamName,\n      logger = console,\n      maxEventListeners = 100,\n      rpcMiddleware = [],\n    }: StreamProviderOptions,\n  ) {\n    super({ logger, maxEventListeners, rpcMiddleware });\n\n    if (!isDuplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    // Set up connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pipeline(\n      connectionStream,\n      mux as unknown as Duplex,\n      connectionStream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask'),\n    );\n\n    // Set up RPC connection\n    // Typecast: The type of `Duplex` is incompatible with the type of\n    // `JsonRpcConnection`.\n    this._jsonRpcConnection = createStreamMiddleware({\n      retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',\n    }) as unknown as JsonRpcConnection;\n\n    pipeline(\n      this._jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      this._jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'),\n    );\n\n    // Wire up the JsonRpcEngine to the JSON-RPC connection stream\n    this._rpcEngine.push(this._jsonRpcConnection.middleware);\n\n    // Handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method, params } = payload;\n      if (method === 'metamask_accountsChanged') {\n        this._handleAccountsChanged(params);\n      } else if (method === 'metamask_unlockStateChanged') {\n        this._handleUnlockStateChanged(params);\n      } else if (method === 'metamask_chainChanged') {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit('message', {\n          type: method,\n          data: params,\n        });\n      } else if (method === 'METAMASK_STREAM_FAILURE') {\n        connectionStream.destroy(\n          new Error(messages.errors.permanentlyDisconnected()),\n        );\n      }\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  protected async _initializeStateAsync() {\n    let initialState: Parameters<BaseProvider['_initializeState']>[0];\n\n    try {\n      initialState = (await this.request({\n        method: 'metamask_getProviderState',\n      })) as Parameters<BaseProvider['_initializeState']>[0];\n    } catch (error) {\n      this._log.error(\n        'MetaMask: Failed to get initial state. Please report this bug.',\n        error,\n      );\n    }\n    this._initializeState(initialState);\n  }\n\n  /**\n   * Called when connection is lost to critical streams. Emits an 'error' event\n   * from the provider with the error message and stack if present.\n   *\n   * @param streamName - The name of the stream that disconnected.\n   * @param error - The error that caused the disconnection.\n   * @fires BaseProvider#disconnect - If the provider is not already\n   * disconnected.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  private _handleStreamDisconnect(streamName: string, error: Error | null) {\n    let warningMsg = `MetaMask: Lost connection to \"${streamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n\n    this._log.warn(warningMsg);\n    if (this.listenerCount('error') > 0) {\n      this.emit('error', warningMsg);\n    }\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. This class does not have a\n   * `networkVersion` property, but we rely on receiving a `networkVersion`\n   * with the value of `loading` to detect when the network is changing and\n   * a recoverable `disconnect` even has occurred. Child classes that use the\n   * `networkVersion` for other purposes must implement additional handling\n   * therefore.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n  }: {\n    chainId?: string | undefined;\n    networkVersion?: string | undefined;\n  } = {}) {\n    if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {\n      this._log.error(messages.errors.invalidNetworkParams(), {\n        chainId,\n        networkVersion,\n      });\n      return;\n    }\n\n    if (networkVersion === 'loading') {\n      this._handleDisconnect(true);\n    } else {\n      super._handleChainChanged({ chainId });\n    }\n  }\n}\n\n/**\n * An EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Consumers must\n * call {@link StreamProvider.initialize} after instantiation to complete\n * initialization.\n */\nexport class StreamProvider extends AbstractStreamProvider {\n  /**\n   * MUST be called after instantiation to complete initialization.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async initialize() {\n    return this._initializeStateAsync();\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"StreamProvider.cjs","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createStreamMiddleware } from '@metamask/json-rpc-middleware-stream';\nimport type SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type { Json, JsonRpcParams } from '@metamask/utils';\nimport { duplex as isDuplex } from 'is-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Duplex } from 'readable-stream';\n\nimport type { BaseProviderOptions } from './BaseProvider';\nimport { BaseProvider } from './BaseProvider';\nimport messages from './messages';\nimport {\n  EMITTED_NOTIFICATIONS,\n  isValidChainId,\n  isValidNetworkVersion,\n} from './utils';\n\nexport type StreamProviderOptions = BaseProviderOptions;\n\nexport type JsonRpcConnection = {\n  events: SafeEventEmitter;\n  middleware: JsonRpcMiddleware<JsonRpcParams, Json>;\n  stream: Duplex;\n};\n\n/**\n * An abstract EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Implementers must\n * call {@link AbstractStreamProvider._initializeStateAsync} after instantiation\n * to initialize the provider's state.\n */\nexport abstract class AbstractStreamProvider extends BaseProvider {\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  /**\n   * Creates a new AbstractStreamProvider instance.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack to use.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      logger = console,\n      maxEventListeners = 100,\n      rpcMiddleware = [],\n    }: StreamProviderOptions = {},\n  ) {\n    super({ logger, maxEventListeners, rpcMiddleware });\n\n    if (!isDuplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    // Set up RPC connection\n    // Typecast: The type of `Duplex` is incompatible with the type of\n    // `JsonRpcConnection`.\n    this._jsonRpcConnection = createStreamMiddleware({\n      retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',\n    }) as unknown as JsonRpcConnection;\n\n    pipeline(\n      connectionStream,\n      this._jsonRpcConnection.stream,\n      connectionStream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'),\n    );\n\n    // Wire up the JsonRpcEngine to the JSON-RPC connection stream\n    this._rpcEngine.push(this._jsonRpcConnection.middleware);\n\n    // Handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method, params } = payload;\n      if (method === 'metamask_accountsChanged') {\n        this._handleAccountsChanged(params);\n      } else if (method === 'metamask_unlockStateChanged') {\n        this._handleUnlockStateChanged(params);\n      } else if (method === 'metamask_chainChanged') {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit('message', {\n          type: method,\n          data: params,\n        });\n      } else if (method === 'METAMASK_STREAM_FAILURE') {\n        connectionStream.destroy(\n          new Error(messages.errors.permanentlyDisconnected()),\n        );\n      }\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  protected async _initializeStateAsync() {\n    let initialState: Parameters<BaseProvider['_initializeState']>[0];\n\n    try {\n      initialState = (await this.request({\n        method: 'metamask_getProviderState',\n      })) as Parameters<BaseProvider['_initializeState']>[0];\n    } catch (error) {\n      this._log.error(\n        'MetaMask: Failed to get initial state. Please report this bug.',\n        error,\n      );\n    }\n    this._initializeState(initialState);\n  }\n\n  /**\n   * Called when connection is lost to critical streams. Emits an 'error' event\n   * from the provider with the error message and stack if present.\n   *\n   * @param streamName - The name of the stream that disconnected.\n   * @param error - The error that caused the disconnection.\n   * @fires BaseProvider#disconnect - If the provider is not already\n   * disconnected.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  private _handleStreamDisconnect(streamName: string, error: Error | null) {\n    let warningMsg = `MetaMask: Lost connection to \"${streamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n\n    this._log.warn(warningMsg);\n    if (this.listenerCount('error') > 0) {\n      this.emit('error', warningMsg);\n    }\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. Child classes that use the\n   * `networkVersion` for other purposes must implement additional handling.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n    isConnected,\n  }: {\n    chainId?: string | undefined;\n    networkVersion?: string | undefined;\n    isConnected?: boolean | undefined;\n  } = {}) {\n    if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {\n      this._log.error(messages.errors.invalidNetworkParams(), {\n        chainId,\n        networkVersion,\n      });\n      return;\n    }\n\n    super._handleChainChanged({ chainId, isConnected });\n\n    if (!isConnected) {\n      this._handleDisconnect(true);\n    }\n  }\n}\n\n/**\n * An EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Consumers must\n * call {@link StreamProvider.initialize} after instantiation to complete\n * initialization.\n */\nexport class StreamProvider extends AbstractStreamProvider {\n  /**\n   * MUST be called after instantiation to complete initialization.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async initialize() {\n    return this._initializeStateAsync();\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/StreamProvider.d.cts b/dist/StreamProvider.d.cts
index 5528633cb48d370c0a08f1f6951ef3960bcda17a..a9b266b53030ee9194f4ba82ee12ef0b1272dbcd 100644
--- a/dist/StreamProvider.d.cts
+++ b/dist/StreamProvider.d.cts
@@ -4,12 +4,7 @@ import type { Json, JsonRpcParams } from "@metamask/utils";
 import type { Duplex } from "readable-stream";
 import type { BaseProviderOptions } from "./BaseProvider.cjs";
 import { BaseProvider } from "./BaseProvider.cjs";
-export type StreamProviderOptions = {
-    /**
-     * The name of the stream used to connect to the wallet.
-     */
-    jsonRpcStreamName: string;
-} & BaseProviderOptions;
+export type StreamProviderOptions = BaseProviderOptions;
 export type JsonRpcConnection = {
     events: SafeEventEmitter;
     middleware: JsonRpcMiddleware<JsonRpcParams, Json>;
@@ -28,13 +23,12 @@ export declare abstract class AbstractStreamProvider extends BaseProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.rpcMiddleware - The RPC middleware stack to use.
      */
-    constructor(connectionStream: Duplex, { jsonRpcStreamName, logger, maxEventListeners, rpcMiddleware, }: StreamProviderOptions);
+    constructor(connectionStream: Duplex, { logger, maxEventListeners, rpcMiddleware, }?: StreamProviderOptions);
     /**
      * MUST be called by child classes.
      *
@@ -55,21 +49,19 @@ export declare abstract class AbstractStreamProvider extends BaseProvider {
     private _handleStreamDisconnect;
     /**
      * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. This class does not have a
-     * `networkVersion` property, but we rely on receiving a `networkVersion`
-     * with the value of `loading` to detect when the network is changing and
-     * a recoverable `disconnect` even has occurred. Child classes that use the
-     * `networkVersion` for other purposes must implement additional handling
-     * therefore.
+     * events and sets relevant public state. Child classes that use the
+     * `networkVersion` for other purposes must implement additional handling.
      *
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, networkVersion, }?: {
+    protected _handleChainChanged({ chainId, networkVersion, isConnected, }?: {
         chainId?: string | undefined;
         networkVersion?: string | undefined;
+        isConnected?: boolean | undefined;
     }): void;
 }
 /**
diff --git a/dist/StreamProvider.d.cts.map b/dist/StreamProvider.d.cts.map
index 026c849754a50f444779b54070e2331888998e3c..680bf589305bb4b4064534113ddd3ff7bdbedf25 100644
--- a/dist/StreamProvider.d.cts.map
+++ b/dist/StreamProvider.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"StreamProvider.d.cts","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,gBAAgB,qCAAqC;AACjE,OAAO,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,wBAAwB;AAG3D,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,2BAAuB;AAC1D,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAQ9C,MAAM,MAAM,qBAAqB,GAAG;IAClC;;OAEG;IACH,iBAAiB,EAAE,MAAM,CAAC;CAC3B,GAAG,mBAAmB,CAAC;AAExB,MAAM,MAAM,iBAAiB,GAAG;IAC9B,MAAM,EAAE,gBAAgB,CAAC;IACzB,UAAU,EAAE,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACnD,MAAM,EAAE,MAAM,CAAC;CAChB,CAAC;AAEF;;;;;GAKG;AACH,8BAAsB,sBAAuB,SAAQ,YAAY;IAC/D,SAAS,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;IAEhD;;;;;;;;;;OAUG;gBAED,gBAAgB,EAAE,MAAM,EACxB,EACE,iBAAiB,EACjB,MAAgB,EAChB,iBAAuB,EACvB,aAAkB,GACnB,EAAE,qBAAqB;IA+D1B;;;;;;OAMG;cACa,qBAAqB;IAgBrC;;;;;;;;OAQG;IAEH,OAAO,CAAC,uBAAuB;IAc/B;;;;;;;;;;;;;OAaG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,GACf,GAAE;QACD,OAAO,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QAC7B,cAAc,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;KAChC;CAeP;AAED;;;;;GAKG;AACH,qBAAa,cAAe,SAAQ,sBAAsB;IACxD;;;;;;OAMG;IACG,UAAU;CAGjB"}
\ No newline at end of file
+{"version":3,"file":"StreamProvider.d.cts","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAEnE,OAAO,KAAK,gBAAgB,qCAAqC;AACjE,OAAO,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,wBAAwB;AAG3D,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,2BAAuB;AAC1D,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAQ9C,MAAM,MAAM,qBAAqB,GAAG,mBAAmB,CAAC;AAExD,MAAM,MAAM,iBAAiB,GAAG;IAC9B,MAAM,EAAE,gBAAgB,CAAC;IACzB,UAAU,EAAE,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACnD,MAAM,EAAE,MAAM,CAAC;CAChB,CAAC;AAEF;;;;;GAKG;AACH,8BAAsB,sBAAuB,SAAQ,YAAY;IAC/D,SAAS,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;IAEhD;;;;;;;;;OASG;gBAED,gBAAgB,EAAE,MAAM,EACxB,EACE,MAAgB,EAChB,iBAAuB,EACvB,aAAkB,GACnB,GAAE,qBAA0B;IAsD/B;;;;;;OAMG;cACa,qBAAqB;IAgBrC;;;;;;;;OAQG;IAEH,OAAO,CAAC,uBAAuB;IAc/B;;;;;;;;;;OAUG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,EACd,WAAW,GACZ,GAAE;QACD,OAAO,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QAC7B,cAAc,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QACpC,WAAW,CAAC,EAAE,OAAO,GAAG,SAAS,CAAC;KAC9B;CAeP;AAED;;;;;GAKG;AACH,qBAAa,cAAe,SAAQ,sBAAsB;IACxD;;;;;;OAMG;IACG,UAAU;CAGjB"}
\ No newline at end of file
diff --git a/dist/StreamProvider.d.mts b/dist/StreamProvider.d.mts
index 01701544f5fd40de1cc15d34fc44dedd7a7f2696..062b347d33a235183ee1a91c3497395e51839c8b 100644
--- a/dist/StreamProvider.d.mts
+++ b/dist/StreamProvider.d.mts
@@ -4,12 +4,7 @@ import type { Json, JsonRpcParams } from "@metamask/utils";
 import type { Duplex } from "readable-stream";
 import type { BaseProviderOptions } from "./BaseProvider.mjs";
 import { BaseProvider } from "./BaseProvider.mjs";
-export type StreamProviderOptions = {
-    /**
-     * The name of the stream used to connect to the wallet.
-     */
-    jsonRpcStreamName: string;
-} & BaseProviderOptions;
+export type StreamProviderOptions = BaseProviderOptions;
 export type JsonRpcConnection = {
     events: SafeEventEmitter;
     middleware: JsonRpcMiddleware<JsonRpcParams, Json>;
@@ -28,13 +23,12 @@ export declare abstract class AbstractStreamProvider extends BaseProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.rpcMiddleware - The RPC middleware stack to use.
      */
-    constructor(connectionStream: Duplex, { jsonRpcStreamName, logger, maxEventListeners, rpcMiddleware, }: StreamProviderOptions);
+    constructor(connectionStream: Duplex, { logger, maxEventListeners, rpcMiddleware, }?: StreamProviderOptions);
     /**
      * MUST be called by child classes.
      *
@@ -55,21 +49,19 @@ export declare abstract class AbstractStreamProvider extends BaseProvider {
     private _handleStreamDisconnect;
     /**
      * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. This class does not have a
-     * `networkVersion` property, but we rely on receiving a `networkVersion`
-     * with the value of `loading` to detect when the network is changing and
-     * a recoverable `disconnect` even has occurred. Child classes that use the
-     * `networkVersion` for other purposes must implement additional handling
-     * therefore.
+     * events and sets relevant public state. Child classes that use the
+     * `networkVersion` for other purposes must implement additional handling.
      *
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    protected _handleChainChanged({ chainId, networkVersion, }?: {
+    protected _handleChainChanged({ chainId, networkVersion, isConnected, }?: {
         chainId?: string | undefined;
         networkVersion?: string | undefined;
+        isConnected?: boolean | undefined;
     }): void;
 }
 /**
diff --git a/dist/StreamProvider.d.mts.map b/dist/StreamProvider.d.mts.map
index 3e3f6b886d6294c8d26dd55a9ef4d600a036d8fd..b8b11aca0af0fd65657d93b8d427c0f291e803bb 100644
--- a/dist/StreamProvider.d.mts.map
+++ b/dist/StreamProvider.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"StreamProvider.d.mts","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,gBAAgB,qCAAqC;AACjE,OAAO,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,wBAAwB;AAG3D,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,2BAAuB;AAC1D,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAQ9C,MAAM,MAAM,qBAAqB,GAAG;IAClC;;OAEG;IACH,iBAAiB,EAAE,MAAM,CAAC;CAC3B,GAAG,mBAAmB,CAAC;AAExB,MAAM,MAAM,iBAAiB,GAAG;IAC9B,MAAM,EAAE,gBAAgB,CAAC;IACzB,UAAU,EAAE,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACnD,MAAM,EAAE,MAAM,CAAC;CAChB,CAAC;AAEF;;;;;GAKG;AACH,8BAAsB,sBAAuB,SAAQ,YAAY;IAC/D,SAAS,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;IAEhD;;;;;;;;;;OAUG;gBAED,gBAAgB,EAAE,MAAM,EACxB,EACE,iBAAiB,EACjB,MAAgB,EAChB,iBAAuB,EACvB,aAAkB,GACnB,EAAE,qBAAqB;IA+D1B;;;;;;OAMG;cACa,qBAAqB;IAgBrC;;;;;;;;OAQG;IAEH,OAAO,CAAC,uBAAuB;IAc/B;;;;;;;;;;;;;OAaG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,GACf,GAAE;QACD,OAAO,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QAC7B,cAAc,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;KAChC;CAeP;AAED;;;;;GAKG;AACH,qBAAa,cAAe,SAAQ,sBAAsB;IACxD;;;;;;OAMG;IACG,UAAU;CAGjB"}
\ No newline at end of file
+{"version":3,"file":"StreamProvider.d.mts","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAEnE,OAAO,KAAK,gBAAgB,qCAAqC;AACjE,OAAO,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,wBAAwB;AAG3D,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,2BAAuB;AAC1D,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAQ9C,MAAM,MAAM,qBAAqB,GAAG,mBAAmB,CAAC;AAExD,MAAM,MAAM,iBAAiB,GAAG;IAC9B,MAAM,EAAE,gBAAgB,CAAC;IACzB,UAAU,EAAE,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACnD,MAAM,EAAE,MAAM,CAAC;CAChB,CAAC;AAEF;;;;;GAKG;AACH,8BAAsB,sBAAuB,SAAQ,YAAY;IAC/D,SAAS,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;IAEhD;;;;;;;;;OASG;gBAED,gBAAgB,EAAE,MAAM,EACxB,EACE,MAAgB,EAChB,iBAAuB,EACvB,aAAkB,GACnB,GAAE,qBAA0B;IAsD/B;;;;;;OAMG;cACa,qBAAqB;IAgBrC;;;;;;;;OAQG;IAEH,OAAO,CAAC,uBAAuB;IAc/B;;;;;;;;;;OAUG;IACH,SAAS,CAAC,mBAAmB,CAAC,EAC5B,OAAO,EACP,cAAc,EACd,WAAW,GACZ,GAAE;QACD,OAAO,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QAC7B,cAAc,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC;QACpC,WAAW,CAAC,EAAE,OAAO,GAAG,SAAS,CAAC;KAC9B;CAeP;AAED;;;;;GAKG;AACH,qBAAa,cAAe,SAAQ,sBAAsB;IACxD;;;;;;OAMG;IACG,UAAU;CAGjB"}
\ No newline at end of file
diff --git a/dist/StreamProvider.mjs b/dist/StreamProvider.mjs
index 49ae5791fe630f80a14edc034a919afe116ac623..76c56fd6344b89d105ff9e8581b4121b33167295 100644
--- a/dist/StreamProvider.mjs
+++ b/dist/StreamProvider.mjs
@@ -1,12 +1,4 @@
-function $importDefault(module) {
-    if (module?.__esModule) {
-        return module.default;
-    }
-    return module;
-}
 import { createStreamMiddleware } from "@metamask/json-rpc-middleware-stream";
-import $ObjectMultiplex from "@metamask/object-multiplex";
-const ObjectMultiplex = $importDefault($ObjectMultiplex);
 import $isstreamindexjs from "is-stream/index.js";
 const { duplex: isDuplex } = $isstreamindexjs;
 import { pipeline } from "readable-stream";
@@ -25,29 +17,25 @@ export class AbstractStreamProvider extends BaseProvider {
      *
      * @param connectionStream - A Node.js duplex stream.
      * @param options - An options bag.
-     * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
      * @param options.logger - The logging API to use. Default: `console`.
      * @param options.maxEventListeners - The maximum number of event
      * listeners. Default: 100.
      * @param options.rpcMiddleware - The RPC middleware stack to use.
      */
-    constructor(connectionStream, { jsonRpcStreamName, logger = console, maxEventListeners = 100, rpcMiddleware = [], }) {
+    constructor(connectionStream, { logger = console, maxEventListeners = 100, rpcMiddleware = [], } = {}) {
         super({ logger, maxEventListeners, rpcMiddleware });
         if (!isDuplex(connectionStream)) {
             throw new Error(messages.errors.invalidDuplexStream());
         }
         // Bind functions to prevent consumers from making unbound calls
         this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);
-        // Set up connectionStream multiplexing
-        const mux = new ObjectMultiplex();
-        pipeline(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, 'MetaMask'));
         // Set up RPC connection
         // Typecast: The type of `Duplex` is incompatible with the type of
         // `JsonRpcConnection`.
         this._jsonRpcConnection = createStreamMiddleware({
             retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',
         });
-        pipeline(this._jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), this._jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'));
+        pipeline(connectionStream, this._jsonRpcConnection.stream, connectionStream, this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'));
         // Wire up the JsonRpcEngine to the JSON-RPC connection stream
         this._rpcEngine.push(this._jsonRpcConnection.middleware);
         // Handle JSON-RPC notifications
@@ -118,19 +106,16 @@ export class AbstractStreamProvider extends BaseProvider {
     }
     /**
      * Upon receipt of a new chainId and networkVersion, emits corresponding
-     * events and sets relevant public state. This class does not have a
-     * `networkVersion` property, but we rely on receiving a `networkVersion`
-     * with the value of `loading` to detect when the network is changing and
-     * a recoverable `disconnect` even has occurred. Child classes that use the
-     * `networkVersion` for other purposes must implement additional handling
-     * therefore.
+     * events and sets relevant public state. Child classes that use the
+     * `networkVersion` for other purposes must implement additional handling.
      *
      * @fires BaseProvider#chainChanged
      * @param networkInfo - An object with network info.
      * @param networkInfo.chainId - The latest chain ID.
      * @param networkInfo.networkVersion - The latest network ID.
+     * @param networkInfo.isConnected - Whether the network is available.
      */
-    _handleChainChanged({ chainId, networkVersion, } = {}) {
+    _handleChainChanged({ chainId, networkVersion, isConnected, } = {}) {
         if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {
             this._log.error(messages.errors.invalidNetworkParams(), {
                 chainId,
@@ -138,12 +123,10 @@ export class AbstractStreamProvider extends BaseProvider {
             });
             return;
         }
-        if (networkVersion === 'loading') {
+        super._handleChainChanged({ chainId, isConnected });
+        if (!isConnected) {
             this._handleDisconnect(true);
         }
-        else {
-            super._handleChainChanged({ chainId });
-        }
     }
 }
 /**
diff --git a/dist/StreamProvider.mjs.map b/dist/StreamProvider.mjs.map
index 440a5a5df7d9a39b1385d40b351dec85fde249d0..6c734a5b54eef43ec01dd31d156056ad17f0b280 100644
--- a/dist/StreamProvider.mjs.map
+++ b/dist/StreamProvider.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"StreamProvider.mjs","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createStreamMiddleware } from '@metamask/json-rpc-middleware-stream';\nimport ObjectMultiplex from '@metamask/object-multiplex';\nimport type SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type { Json, JsonRpcParams } from '@metamask/utils';\nimport { duplex as isDuplex } from 'is-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Duplex } from 'readable-stream';\n\nimport type { BaseProviderOptions } from './BaseProvider';\nimport { BaseProvider } from './BaseProvider';\nimport messages from './messages';\nimport {\n  EMITTED_NOTIFICATIONS,\n  isValidChainId,\n  isValidNetworkVersion,\n} from './utils';\n\nexport type StreamProviderOptions = {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName: string;\n} & BaseProviderOptions;\n\nexport type JsonRpcConnection = {\n  events: SafeEventEmitter;\n  middleware: JsonRpcMiddleware<JsonRpcParams, Json>;\n  stream: Duplex;\n};\n\n/**\n * An abstract EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Implementers must\n * call {@link AbstractStreamProvider._initializeStateAsync} after instantiation\n * to initialize the provider's state.\n */\nexport abstract class AbstractStreamProvider extends BaseProvider {\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  /**\n   * Creates a new AbstractStreamProvider instance.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack to use.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      jsonRpcStreamName,\n      logger = console,\n      maxEventListeners = 100,\n      rpcMiddleware = [],\n    }: StreamProviderOptions,\n  ) {\n    super({ logger, maxEventListeners, rpcMiddleware });\n\n    if (!isDuplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    // Set up connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pipeline(\n      connectionStream,\n      mux as unknown as Duplex,\n      connectionStream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask'),\n    );\n\n    // Set up RPC connection\n    // Typecast: The type of `Duplex` is incompatible with the type of\n    // `JsonRpcConnection`.\n    this._jsonRpcConnection = createStreamMiddleware({\n      retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',\n    }) as unknown as JsonRpcConnection;\n\n    pipeline(\n      this._jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      this._jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'),\n    );\n\n    // Wire up the JsonRpcEngine to the JSON-RPC connection stream\n    this._rpcEngine.push(this._jsonRpcConnection.middleware);\n\n    // Handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method, params } = payload;\n      if (method === 'metamask_accountsChanged') {\n        this._handleAccountsChanged(params);\n      } else if (method === 'metamask_unlockStateChanged') {\n        this._handleUnlockStateChanged(params);\n      } else if (method === 'metamask_chainChanged') {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit('message', {\n          type: method,\n          data: params,\n        });\n      } else if (method === 'METAMASK_STREAM_FAILURE') {\n        connectionStream.destroy(\n          new Error(messages.errors.permanentlyDisconnected()),\n        );\n      }\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  protected async _initializeStateAsync() {\n    let initialState: Parameters<BaseProvider['_initializeState']>[0];\n\n    try {\n      initialState = (await this.request({\n        method: 'metamask_getProviderState',\n      })) as Parameters<BaseProvider['_initializeState']>[0];\n    } catch (error) {\n      this._log.error(\n        'MetaMask: Failed to get initial state. Please report this bug.',\n        error,\n      );\n    }\n    this._initializeState(initialState);\n  }\n\n  /**\n   * Called when connection is lost to critical streams. Emits an 'error' event\n   * from the provider with the error message and stack if present.\n   *\n   * @param streamName - The name of the stream that disconnected.\n   * @param error - The error that caused the disconnection.\n   * @fires BaseProvider#disconnect - If the provider is not already\n   * disconnected.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  private _handleStreamDisconnect(streamName: string, error: Error | null) {\n    let warningMsg = `MetaMask: Lost connection to \"${streamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n\n    this._log.warn(warningMsg);\n    if (this.listenerCount('error') > 0) {\n      this.emit('error', warningMsg);\n    }\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. This class does not have a\n   * `networkVersion` property, but we rely on receiving a `networkVersion`\n   * with the value of `loading` to detect when the network is changing and\n   * a recoverable `disconnect` even has occurred. Child classes that use the\n   * `networkVersion` for other purposes must implement additional handling\n   * therefore.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n  }: {\n    chainId?: string | undefined;\n    networkVersion?: string | undefined;\n  } = {}) {\n    if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {\n      this._log.error(messages.errors.invalidNetworkParams(), {\n        chainId,\n        networkVersion,\n      });\n      return;\n    }\n\n    if (networkVersion === 'loading') {\n      this._handleDisconnect(true);\n    } else {\n      super._handleChainChanged({ chainId });\n    }\n  }\n}\n\n/**\n * An EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Consumers must\n * call {@link StreamProvider.initialize} after instantiation to complete\n * initialization.\n */\nexport class StreamProvider extends AbstractStreamProvider {\n  /**\n   * MUST be called after instantiation to complete initialization.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async initialize() {\n    return this._initializeStateAsync();\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"StreamProvider.mjs","sourceRoot":"","sources":["../src/StreamProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createStreamMiddleware } from '@metamask/json-rpc-middleware-stream';\nimport type SafeEventEmitter from '@metamask/safe-event-emitter';\nimport type { Json, JsonRpcParams } from '@metamask/utils';\nimport { duplex as isDuplex } from 'is-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Duplex } from 'readable-stream';\n\nimport type { BaseProviderOptions } from './BaseProvider';\nimport { BaseProvider } from './BaseProvider';\nimport messages from './messages';\nimport {\n  EMITTED_NOTIFICATIONS,\n  isValidChainId,\n  isValidNetworkVersion,\n} from './utils';\n\nexport type StreamProviderOptions = BaseProviderOptions;\n\nexport type JsonRpcConnection = {\n  events: SafeEventEmitter;\n  middleware: JsonRpcMiddleware<JsonRpcParams, Json>;\n  stream: Duplex;\n};\n\n/**\n * An abstract EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Implementers must\n * call {@link AbstractStreamProvider._initializeStateAsync} after instantiation\n * to initialize the provider's state.\n */\nexport abstract class AbstractStreamProvider extends BaseProvider {\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  /**\n   * Creates a new AbstractStreamProvider instance.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack to use.\n   */\n  constructor(\n    connectionStream: Duplex,\n    {\n      logger = console,\n      maxEventListeners = 100,\n      rpcMiddleware = [],\n    }: StreamProviderOptions = {},\n  ) {\n    super({ logger, maxEventListeners, rpcMiddleware });\n\n    if (!isDuplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    // Bind functions to prevent consumers from making unbound calls\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    // Set up RPC connection\n    // Typecast: The type of `Duplex` is incompatible with the type of\n    // `JsonRpcConnection`.\n    this._jsonRpcConnection = createStreamMiddleware({\n      retryOnMessage: 'METAMASK_EXTENSION_CONNECT_CAN_RETRY',\n    }) as unknown as JsonRpcConnection;\n\n    pipeline(\n      connectionStream,\n      this._jsonRpcConnection.stream,\n      connectionStream,\n      this._handleStreamDisconnect.bind(this, 'MetaMask RpcProvider'),\n    );\n\n    // Wire up the JsonRpcEngine to the JSON-RPC connection stream\n    this._rpcEngine.push(this._jsonRpcConnection.middleware);\n\n    // Handle JSON-RPC notifications\n    this._jsonRpcConnection.events.on('notification', (payload) => {\n      const { method, params } = payload;\n      if (method === 'metamask_accountsChanged') {\n        this._handleAccountsChanged(params);\n      } else if (method === 'metamask_unlockStateChanged') {\n        this._handleUnlockStateChanged(params);\n      } else if (method === 'metamask_chainChanged') {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit('message', {\n          type: method,\n          data: params,\n        });\n      } else if (method === 'METAMASK_STREAM_FAILURE') {\n        connectionStream.destroy(\n          new Error(messages.errors.permanentlyDisconnected()),\n        );\n      }\n    });\n  }\n\n  //====================\n  // Private Methods\n  //====================\n\n  /**\n   * MUST be called by child classes.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  protected async _initializeStateAsync() {\n    let initialState: Parameters<BaseProvider['_initializeState']>[0];\n\n    try {\n      initialState = (await this.request({\n        method: 'metamask_getProviderState',\n      })) as Parameters<BaseProvider['_initializeState']>[0];\n    } catch (error) {\n      this._log.error(\n        'MetaMask: Failed to get initial state. Please report this bug.',\n        error,\n      );\n    }\n    this._initializeState(initialState);\n  }\n\n  /**\n   * Called when connection is lost to critical streams. Emits an 'error' event\n   * from the provider with the error message and stack if present.\n   *\n   * @param streamName - The name of the stream that disconnected.\n   * @param error - The error that caused the disconnection.\n   * @fires BaseProvider#disconnect - If the provider is not already\n   * disconnected.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  private _handleStreamDisconnect(streamName: string, error: Error | null) {\n    let warningMsg = `MetaMask: Lost connection to \"${streamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n\n    this._log.warn(warningMsg);\n    if (this.listenerCount('error') > 0) {\n      this.emit('error', warningMsg);\n    }\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. Child classes that use the\n   * `networkVersion` for other purposes must implement additional handling.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   * @param networkInfo.isConnected - Whether the network is available.\n   */\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n    isConnected,\n  }: {\n    chainId?: string | undefined;\n    networkVersion?: string | undefined;\n    isConnected?: boolean | undefined;\n  } = {}) {\n    if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {\n      this._log.error(messages.errors.invalidNetworkParams(), {\n        chainId,\n        networkVersion,\n      });\n      return;\n    }\n\n    super._handleChainChanged({ chainId, isConnected });\n\n    if (!isConnected) {\n      this._handleDisconnect(true);\n    }\n  }\n}\n\n/**\n * An EIP-1193 provider wired to some duplex stream via a\n * `json-rpc-middleware-stream` JSON-RPC stream middleware. Consumers must\n * call {@link StreamProvider.initialize} after instantiation to complete\n * initialization.\n */\nexport class StreamProvider extends AbstractStreamProvider {\n  /**\n   * MUST be called after instantiation to complete initialization.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async initialize() {\n    return this._initializeStateAsync();\n  }\n}\n"]}
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.cjs b/dist/extension-provider/createExternalExtensionProvider.cjs
index 9c6b947df0663f4bac5b7051989ad11795316372..d1412c320bce836a251a0a2a5ccbd6449c11df61 100644
--- a/dist/extension-provider/createExternalExtensionProvider.cjs
+++ b/dist/extension-provider/createExternalExtensionProvider.cjs
@@ -4,8 +4,11 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.createExternalExtensionProvider = createExternalExtensionProvider;
+exports.getBuildType = getBuildType;
+const object_multiplex_1 = __importDefault(require("@metamask/object-multiplex"));
 const detect_browser_1 = require("detect-browser");
 const extension_port_stream_1 = require("extension-port-stream");
+const readable_stream_1 = require("readable-stream");
 const external_extension_config_json_1 = __importDefault(require("./external-extension-config.json"));
 const MetaMaskInpageProvider_1 = require("../MetaMaskInpageProvider.cjs");
 const StreamProvider_1 = require("../StreamProvider.cjs");
@@ -23,8 +26,16 @@ function createExternalExtensionProvider(typeOrId = 'stable') {
         const extensionId = getExtensionId(typeOrId);
         const metamaskPort = chrome.runtime.connect(extensionId);
         const pluginStream = new extension_port_stream_1.PortDuplexStream(metamaskPort);
-        provider = new StreamProvider_1.StreamProvider(pluginStream, {
-            jsonRpcStreamName: MetaMaskInpageProvider_1.MetaMaskInpageProviderStreamName,
+        const streamName = MetaMaskInpageProvider_1.MetaMaskInpageProviderStreamName;
+        const mux = new object_multiplex_1.default();
+        (0, readable_stream_1.pipeline)(pluginStream, mux, pluginStream, (error) => {
+            let warningMsg = `Lost connection to "${streamName}".`;
+            if (error?.stack) {
+                warningMsg += `\n${error.stack}`;
+            }
+            console.warn(warningMsg);
+        });
+        provider = new StreamProvider_1.StreamProvider(mux.createStream(streamName), {
             logger: console,
             rpcMiddleware: (0, utils_1.getDefaultExternalMiddleware)(console),
         });
@@ -60,4 +71,18 @@ function getExtensionId(typeOrId) {
     }
     return ids[typeOrId] ?? typeOrId;
 }
+/**
+ * Gets the build type for the given domain name identifier.
+ *
+ * @param rdns - The reverse syntax domain name identifier for the wallet.
+ * @returns The type or ID.
+ */
+function getBuildType(rdns) {
+    const rndsToIdDefinition = {
+        'io.metamask': 'stable',
+        'io.metamask.beta': 'beta',
+        'io.metamask.flask': 'flask',
+    };
+    return rndsToIdDefinition[rdns];
+}
 //# sourceMappingURL=createExternalExtensionProvider.cjs.map
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.cjs.map b/dist/extension-provider/createExternalExtensionProvider.cjs.map
index f5e4f438b0da776dda8786e30ea3bf4967968ae0..ae94a41dcb7fb8d79ce2cf2e696d5ea9e17f9020 100644
--- a/dist/extension-provider/createExternalExtensionProvider.cjs.map
+++ b/dist/extension-provider/createExternalExtensionProvider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"createExternalExtensionProvider.cjs","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":";;;;;AAoBA,0EA0BC;AA9CD,mDAAwC;AACxC,iEAAuE;AAIvE,sGAAsD;AACtD,0EAA6E;AAC7E,0DAAmD;AACnD,wCAAwD;AAExD,MAAM,OAAO,GAAG,IAAA,uBAAM,GAAE,CAAC;AAIzB;;;;;GAKG;AACH,SAAgB,+BAA+B,CAC7C,WAA0B,QAAQ;IAElC,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAiB,CAAC;QAEzE,MAAM,YAAY,GAAG,IAAI,wCAAU,CAAC,YAAY,CAAC,CAAC;QAClD,QAAQ,GAAG,IAAI,+BAAc,CAAC,YAAiC,EAAE;YAC/D,iBAAiB,EAAE,yDAAgC;YACnD,MAAM,EAAE,OAAO;YACf,aAAa,EAAE,IAAA,oCAA4B,EAAC,OAAO,CAAC;SACrD,CAAC,CAAC;QAEH,wEAAwE;QACxE,iEAAiE;QACjE,eAAe;QACf,mEAAmE;QACnE,QAAQ,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,KAAK,CAAC;IACd,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;;;GAKG;AACH,SAAS,cAAc,CAAC,QAAuB;IAC7C,IAAI,GAIH,CAAC;IAEF,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;QACtB,KAAK,eAAe;YAClB,GAAG,GAAG,wCAAM,CAAC,eAAe,CAAC;YAC7B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,GAAG,wCAAM,CAAC,UAAU,CAAC;YACxB,MAAM;QACR;YACE,GAAG,GAAG,wCAAM,CAAC,SAAS,CAAC;IAC3B,CAAC;IAED,OAAO,GAAG,CAAC,QAA4B,CAAC,IAAI,QAAQ,CAAC;AACvD,CAAC","sourcesContent":["import { detect } from 'detect-browser';\nimport { PortDuplexStream as PortStream } from 'extension-port-stream';\nimport type { Duplex } from 'readable-stream';\nimport type { Runtime } from 'webextension-polyfill';\n\nimport config from './external-extension-config.json';\nimport { MetaMaskInpageProviderStreamName } from '../MetaMaskInpageProvider';\nimport { StreamProvider } from '../StreamProvider';\nimport { getDefaultExternalMiddleware } from '../utils';\n\nconst browser = detect();\n\nexport type ExtensionType = 'stable' | 'flask' | 'beta' | string;\n\n/**\n * Creates an external extension provider for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The external extension provider.\n */\nexport function createExternalExtensionProvider(\n  typeOrId: ExtensionType = 'stable',\n) {\n  let provider;\n\n  try {\n    const extensionId = getExtensionId(typeOrId);\n    const metamaskPort = chrome.runtime.connect(extensionId) as Runtime.Port;\n\n    const pluginStream = new PortStream(metamaskPort);\n    provider = new StreamProvider(pluginStream as unknown as Duplex, {\n      jsonRpcStreamName: MetaMaskInpageProviderStreamName,\n      logger: console,\n      rpcMiddleware: getDefaultExternalMiddleware(console),\n    });\n\n    // This is asynchronous but merely logs an error and does not throw upon\n    // failure. Previously this just happened as a side-effect in the\n    // constructor.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    provider.initialize();\n  } catch (error) {\n    console.dir(`MetaMask connect error.`, error);\n    throw error;\n  }\n  return provider;\n}\n\n/**\n * Gets the extension ID for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The extension ID.\n */\nfunction getExtensionId(typeOrId: ExtensionType) {\n  let ids: {\n    stable: string;\n    beta?: string;\n    flask?: string;\n  };\n\n  switch (browser?.name) {\n    case 'edge-chromium':\n      ids = config.edgeChromiumIds;\n      break;\n    case 'firefox':\n      ids = config.firefoxIds;\n      break;\n    default:\n      ids = config.chromeIds;\n  }\n\n  return ids[typeOrId as keyof typeof ids] ?? typeOrId;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"createExternalExtensionProvider.cjs","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":";;;;;AAqBA,0EAkCC;AAmCD,oCAOC;AAjGD,kFAAyD;AACzD,mDAAwC;AACxC,iEAAuE;AACvE,qDAA2C;AAG3C,sGAAsD;AACtD,0EAA6E;AAC7E,0DAAmD;AACnD,wCAAwD;AAExD,MAAM,OAAO,GAAG,IAAA,uBAAM,GAAE,CAAC;AAIzB;;;;;GAKG;AACH,SAAgB,+BAA+B,CAC7C,WAA0B,QAAQ;IAElC,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAiB,CAAC;QAEzE,MAAM,YAAY,GAAG,IAAI,wCAAU,CAAC,YAAY,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,yDAAgC,CAAC;QACpD,MAAM,GAAG,GAAG,IAAI,0BAAe,EAAE,CAAC;QAClC,IAAA,0BAAQ,EAAC,YAAY,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,KAAmB,EAAE,EAAE;YAChE,IAAI,UAAU,GAAG,uBAAuB,UAAU,IAAI,CAAC;YACvD,IAAI,KAAK,EAAE,KAAK,EAAE,CAAC;gBACjB,UAAU,IAAI,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;YACnC,CAAC;YACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,QAAQ,GAAG,IAAI,+BAAc,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAC1D,MAAM,EAAE,OAAO;YACf,aAAa,EAAE,IAAA,oCAA4B,EAAC,OAAO,CAAC;SACrD,CAAC,CAAC;QAEH,wEAAwE;QACxE,iEAAiE;QACjE,eAAe;QACf,mEAAmE;QACnE,QAAQ,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,KAAK,CAAC;IACd,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;;;GAKG;AACH,SAAS,cAAc,CAAC,QAAuB;IAC7C,IAAI,GAIH,CAAC;IAEF,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;QACtB,KAAK,eAAe;YAClB,GAAG,GAAG,wCAAM,CAAC,eAAe,CAAC;YAC7B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,GAAG,wCAAM,CAAC,UAAU,CAAC;YACxB,MAAM;QACR;YACE,GAAG,GAAG,wCAAM,CAAC,SAAS,CAAC;IAC3B,CAAC;IAED,OAAO,GAAG,CAAC,QAA4B,CAAC,IAAI,QAAQ,CAAC;AACvD,CAAC;AAED;;;;;GAKG;AACH,SAAgB,YAAY,CAAC,IAAY;IACvC,MAAM,kBAAkB,GAA2B;QACjD,aAAa,EAAE,QAAQ;QACvB,kBAAkB,EAAE,MAAM;QAC1B,mBAAmB,EAAE,OAAO;KAC7B,CAAC;IACF,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { detect } from 'detect-browser';\nimport { PortDuplexStream as PortStream } from 'extension-port-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Runtime } from 'webextension-polyfill';\n\nimport config from './external-extension-config.json';\nimport { MetaMaskInpageProviderStreamName } from '../MetaMaskInpageProvider';\nimport { StreamProvider } from '../StreamProvider';\nimport { getDefaultExternalMiddleware } from '../utils';\n\nconst browser = detect();\n\nexport type ExtensionType = 'stable' | 'flask' | 'beta' | string;\n\n/**\n * Creates an external extension provider for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The external extension provider.\n */\nexport function createExternalExtensionProvider(\n  typeOrId: ExtensionType = 'stable',\n) {\n  let provider;\n\n  try {\n    const extensionId = getExtensionId(typeOrId);\n    const metamaskPort = chrome.runtime.connect(extensionId) as Runtime.Port;\n\n    const pluginStream = new PortStream(metamaskPort);\n    const streamName = MetaMaskInpageProviderStreamName;\n    const mux = new ObjectMultiplex();\n    pipeline(pluginStream, mux, pluginStream, (error: Error | null) => {\n      let warningMsg = `Lost connection to \"${streamName}\".`;\n      if (error?.stack) {\n        warningMsg += `\\n${error.stack}`;\n      }\n      console.warn(warningMsg);\n    });\n    provider = new StreamProvider(mux.createStream(streamName), {\n      logger: console,\n      rpcMiddleware: getDefaultExternalMiddleware(console),\n    });\n\n    // This is asynchronous but merely logs an error and does not throw upon\n    // failure. Previously this just happened as a side-effect in the\n    // constructor.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    provider.initialize();\n  } catch (error) {\n    console.dir(`MetaMask connect error.`, error);\n    throw error;\n  }\n  return provider;\n}\n\n/**\n * Gets the extension ID for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The extension ID.\n */\nfunction getExtensionId(typeOrId: ExtensionType) {\n  let ids: {\n    stable: string;\n    beta?: string;\n    flask?: string;\n  };\n\n  switch (browser?.name) {\n    case 'edge-chromium':\n      ids = config.edgeChromiumIds;\n      break;\n    case 'firefox':\n      ids = config.firefoxIds;\n      break;\n    default:\n      ids = config.chromeIds;\n  }\n\n  return ids[typeOrId as keyof typeof ids] ?? typeOrId;\n}\n\n/**\n * Gets the build type for the given domain name identifier.\n *\n * @param rdns - The reverse syntax domain name identifier for the wallet.\n * @returns The type or ID.\n */\nexport function getBuildType(rdns: string): string | undefined {\n  const rndsToIdDefinition: Record<string, string> = {\n    'io.metamask': 'stable',\n    'io.metamask.beta': 'beta',\n    'io.metamask.flask': 'flask',\n  };\n  return rndsToIdDefinition[rdns];\n}\n"]}
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.d.cts b/dist/extension-provider/createExternalExtensionProvider.d.cts
index 40a0eb8ab19010226ca3fa79289248e3510d5169..993f372f5b79501df737a0e9b9acff88da2437ce 100644
--- a/dist/extension-provider/createExternalExtensionProvider.d.cts
+++ b/dist/extension-provider/createExternalExtensionProvider.d.cts
@@ -7,4 +7,11 @@ export type ExtensionType = 'stable' | 'flask' | 'beta' | string;
  * @returns The external extension provider.
  */
 export declare function createExternalExtensionProvider(typeOrId?: ExtensionType): StreamProvider;
+/**
+ * Gets the build type for the given domain name identifier.
+ *
+ * @param rdns - The reverse syntax domain name identifier for the wallet.
+ * @returns The type or ID.
+ */
+export declare function getBuildType(rdns: string): string | undefined;
 //# sourceMappingURL=createExternalExtensionProvider.d.cts.map
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.d.cts.map b/dist/extension-provider/createExternalExtensionProvider.d.cts.map
index bde9aea8b95ba2eb36b7db8f0922c937daca5708..2fcae57e67c1b3c057e2edb753af7c3638e8cfde 100644
--- a/dist/extension-provider/createExternalExtensionProvider.d.cts.map
+++ b/dist/extension-provider/createExternalExtensionProvider.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"createExternalExtensionProvider.d.cts","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,cAAc,EAAE,8BAA0B;AAKnD,MAAM,MAAM,aAAa,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;AAEjE;;;;;GAKG;AACH,wBAAgB,+BAA+B,CAC7C,QAAQ,GAAE,aAAwB,kBAyBnC"}
\ No newline at end of file
+{"version":3,"file":"createExternalExtensionProvider.d.cts","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":"AAQA,OAAO,EAAE,cAAc,EAAE,8BAA0B;AAKnD,MAAM,MAAM,aAAa,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;AAEjE;;;;;GAKG;AACH,wBAAgB,+BAA+B,CAC7C,QAAQ,GAAE,aAAwB,kBAiCnC;AA6BD;;;;;GAKG;AACH,wBAAgB,YAAY,CAAC,IAAI,EAAE,MAAM,GAAG,MAAM,GAAG,SAAS,CAO7D"}
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.d.mts b/dist/extension-provider/createExternalExtensionProvider.d.mts
index 71d635108d8c49880a6ffe2dfa712530f55cef92..f6c4897a8e0376371bb5b1a98b45fe812dfcbea4 100644
--- a/dist/extension-provider/createExternalExtensionProvider.d.mts
+++ b/dist/extension-provider/createExternalExtensionProvider.d.mts
@@ -7,4 +7,11 @@ export type ExtensionType = 'stable' | 'flask' | 'beta' | string;
  * @returns The external extension provider.
  */
 export declare function createExternalExtensionProvider(typeOrId?: ExtensionType): StreamProvider;
+/**
+ * Gets the build type for the given domain name identifier.
+ *
+ * @param rdns - The reverse syntax domain name identifier for the wallet.
+ * @returns The type or ID.
+ */
+export declare function getBuildType(rdns: string): string | undefined;
 //# sourceMappingURL=createExternalExtensionProvider.d.mts.map
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.d.mts.map b/dist/extension-provider/createExternalExtensionProvider.d.mts.map
index 2649097df99645212c383a8823abd9520033550a..22364201b8d7e0492adcc40847bfe5f4e3090197 100644
--- a/dist/extension-provider/createExternalExtensionProvider.d.mts.map
+++ b/dist/extension-provider/createExternalExtensionProvider.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"createExternalExtensionProvider.d.mts","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,cAAc,EAAE,8BAA0B;AAKnD,MAAM,MAAM,aAAa,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;AAEjE;;;;;GAKG;AACH,wBAAgB,+BAA+B,CAC7C,QAAQ,GAAE,aAAwB,kBAyBnC"}
\ No newline at end of file
+{"version":3,"file":"createExternalExtensionProvider.d.mts","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":"AAQA,OAAO,EAAE,cAAc,EAAE,8BAA0B;AAKnD,MAAM,MAAM,aAAa,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;AAEjE;;;;;GAKG;AACH,wBAAgB,+BAA+B,CAC7C,QAAQ,GAAE,aAAwB,kBAiCnC;AA6BD;;;;;GAKG;AACH,wBAAgB,YAAY,CAAC,IAAI,EAAE,MAAM,GAAG,MAAM,GAAG,SAAS,CAO7D"}
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.mjs b/dist/extension-provider/createExternalExtensionProvider.mjs
index 01a221c97c3ece45858925c1c61460d368941090..21d3e6e33eb70686f5e983bf4728d42c4f2a4e98 100644
--- a/dist/extension-provider/createExternalExtensionProvider.mjs
+++ b/dist/extension-provider/createExternalExtensionProvider.mjs
@@ -1,5 +1,14 @@
+function $importDefault(module) {
+    if (module?.__esModule) {
+        return module.default;
+    }
+    return module;
+}
+import $ObjectMultiplex from "@metamask/object-multiplex";
+const ObjectMultiplex = $importDefault($ObjectMultiplex);
 import { detect } from "detect-browser";
 import { PortDuplexStream as PortStream } from "extension-port-stream";
+import { pipeline } from "readable-stream";
 import config from "./external-extension-config.json" with { type: "json" };
 import { MetaMaskInpageProviderStreamName } from "../MetaMaskInpageProvider.mjs";
 import { StreamProvider } from "../StreamProvider.mjs";
@@ -17,8 +26,16 @@ export function createExternalExtensionProvider(typeOrId = 'stable') {
         const extensionId = getExtensionId(typeOrId);
         const metamaskPort = chrome.runtime.connect(extensionId);
         const pluginStream = new PortStream(metamaskPort);
-        provider = new StreamProvider(pluginStream, {
-            jsonRpcStreamName: MetaMaskInpageProviderStreamName,
+        const streamName = MetaMaskInpageProviderStreamName;
+        const mux = new ObjectMultiplex();
+        pipeline(pluginStream, mux, pluginStream, (error) => {
+            let warningMsg = `Lost connection to "${streamName}".`;
+            if (error?.stack) {
+                warningMsg += `\n${error.stack}`;
+            }
+            console.warn(warningMsg);
+        });
+        provider = new StreamProvider(mux.createStream(streamName), {
             logger: console,
             rpcMiddleware: getDefaultExternalMiddleware(console),
         });
@@ -54,4 +71,18 @@ function getExtensionId(typeOrId) {
     }
     return ids[typeOrId] ?? typeOrId;
 }
+/**
+ * Gets the build type for the given domain name identifier.
+ *
+ * @param rdns - The reverse syntax domain name identifier for the wallet.
+ * @returns The type or ID.
+ */
+export function getBuildType(rdns) {
+    const rndsToIdDefinition = {
+        'io.metamask': 'stable',
+        'io.metamask.beta': 'beta',
+        'io.metamask.flask': 'flask',
+    };
+    return rndsToIdDefinition[rdns];
+}
 //# sourceMappingURL=createExternalExtensionProvider.mjs.map
\ No newline at end of file
diff --git a/dist/extension-provider/createExternalExtensionProvider.mjs.map b/dist/extension-provider/createExternalExtensionProvider.mjs.map
index 3838787caac5b827794aa36bb01ea207eae7efae..39e6b9c8cef3d06a144d32d058ae93fed0e278aa 100644
--- a/dist/extension-provider/createExternalExtensionProvider.mjs.map
+++ b/dist/extension-provider/createExternalExtensionProvider.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"createExternalExtensionProvider.mjs","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,uBAAuB;AACxC,OAAO,EAAE,gBAAgB,IAAI,UAAU,EAAE,8BAA8B;AAIvE,OAAO,MAAM,+DAAyC;AACtD,OAAO,EAAE,gCAAgC,EAAE,sCAAkC;AAC7E,OAAO,EAAE,cAAc,EAAE,8BAA0B;AACnD,OAAO,EAAE,4BAA4B,EAAE,qBAAiB;AAExD,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAIzB;;;;;GAKG;AACH,MAAM,UAAU,+BAA+B,CAC7C,WAA0B,QAAQ;IAElC,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAiB,CAAC;QAEzE,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;QAClD,QAAQ,GAAG,IAAI,cAAc,CAAC,YAAiC,EAAE;YAC/D,iBAAiB,EAAE,gCAAgC;YACnD,MAAM,EAAE,OAAO;YACf,aAAa,EAAE,4BAA4B,CAAC,OAAO,CAAC;SACrD,CAAC,CAAC;QAEH,wEAAwE;QACxE,iEAAiE;QACjE,eAAe;QACf,mEAAmE;QACnE,QAAQ,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,KAAK,CAAC;IACd,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;;;GAKG;AACH,SAAS,cAAc,CAAC,QAAuB;IAC7C,IAAI,GAIH,CAAC;IAEF,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;QACtB,KAAK,eAAe;YAClB,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC;YAC7B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;YACxB,MAAM;QACR;YACE,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;IAC3B,CAAC;IAED,OAAO,GAAG,CAAC,QAA4B,CAAC,IAAI,QAAQ,CAAC;AACvD,CAAC","sourcesContent":["import { detect } from 'detect-browser';\nimport { PortDuplexStream as PortStream } from 'extension-port-stream';\nimport type { Duplex } from 'readable-stream';\nimport type { Runtime } from 'webextension-polyfill';\n\nimport config from './external-extension-config.json';\nimport { MetaMaskInpageProviderStreamName } from '../MetaMaskInpageProvider';\nimport { StreamProvider } from '../StreamProvider';\nimport { getDefaultExternalMiddleware } from '../utils';\n\nconst browser = detect();\n\nexport type ExtensionType = 'stable' | 'flask' | 'beta' | string;\n\n/**\n * Creates an external extension provider for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The external extension provider.\n */\nexport function createExternalExtensionProvider(\n  typeOrId: ExtensionType = 'stable',\n) {\n  let provider;\n\n  try {\n    const extensionId = getExtensionId(typeOrId);\n    const metamaskPort = chrome.runtime.connect(extensionId) as Runtime.Port;\n\n    const pluginStream = new PortStream(metamaskPort);\n    provider = new StreamProvider(pluginStream as unknown as Duplex, {\n      jsonRpcStreamName: MetaMaskInpageProviderStreamName,\n      logger: console,\n      rpcMiddleware: getDefaultExternalMiddleware(console),\n    });\n\n    // This is asynchronous but merely logs an error and does not throw upon\n    // failure. Previously this just happened as a side-effect in the\n    // constructor.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    provider.initialize();\n  } catch (error) {\n    console.dir(`MetaMask connect error.`, error);\n    throw error;\n  }\n  return provider;\n}\n\n/**\n * Gets the extension ID for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The extension ID.\n */\nfunction getExtensionId(typeOrId: ExtensionType) {\n  let ids: {\n    stable: string;\n    beta?: string;\n    flask?: string;\n  };\n\n  switch (browser?.name) {\n    case 'edge-chromium':\n      ids = config.edgeChromiumIds;\n      break;\n    case 'firefox':\n      ids = config.firefoxIds;\n      break;\n    default:\n      ids = config.chromeIds;\n  }\n\n  return ids[typeOrId as keyof typeof ids] ?? typeOrId;\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"createExternalExtensionProvider.mjs","sourceRoot":"","sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,gBAAe,mCAAmC;;AACzD,OAAO,EAAE,MAAM,EAAE,uBAAuB;AACxC,OAAO,EAAE,gBAAgB,IAAI,UAAU,EAAE,8BAA8B;AACvE,OAAO,EAAE,QAAQ,EAAE,wBAAwB;AAG3C,OAAO,MAAM,+DAAyC;AACtD,OAAO,EAAE,gCAAgC,EAAE,sCAAkC;AAC7E,OAAO,EAAE,cAAc,EAAE,8BAA0B;AACnD,OAAO,EAAE,4BAA4B,EAAE,qBAAiB;AAExD,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAIzB;;;;;GAKG;AACH,MAAM,UAAU,+BAA+B,CAC7C,WAA0B,QAAQ;IAElC,IAAI,QAAQ,CAAC;IAEb,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAiB,CAAC;QAEzE,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,gCAAgC,CAAC;QACpD,MAAM,GAAG,GAAG,IAAI,eAAe,EAAE,CAAC;QAClC,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,KAAmB,EAAE,EAAE;YAChE,IAAI,UAAU,GAAG,uBAAuB,UAAU,IAAI,CAAC;YACvD,IAAI,KAAK,EAAE,KAAK,EAAE,CAAC;gBACjB,UAAU,IAAI,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;YACnC,CAAC;YACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,QAAQ,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAC1D,MAAM,EAAE,OAAO;YACf,aAAa,EAAE,4BAA4B,CAAC,OAAO,CAAC;SACrD,CAAC,CAAC;QAEH,wEAAwE;QACxE,iEAAiE;QACjE,eAAe;QACf,mEAAmE;QACnE,QAAQ,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAC9C,MAAM,KAAK,CAAC;IACd,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;;;;GAKG;AACH,SAAS,cAAc,CAAC,QAAuB;IAC7C,IAAI,GAIH,CAAC;IAEF,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;QACtB,KAAK,eAAe;YAClB,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC;YAC7B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;YACxB,MAAM;QACR;YACE,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;IAC3B,CAAC;IAED,OAAO,GAAG,CAAC,QAA4B,CAAC,IAAI,QAAQ,CAAC;AACvD,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,YAAY,CAAC,IAAY;IACvC,MAAM,kBAAkB,GAA2B;QACjD,aAAa,EAAE,QAAQ;QACvB,kBAAkB,EAAE,MAAM;QAC1B,mBAAmB,EAAE,OAAO;KAC7B,CAAC;IACF,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { detect } from 'detect-browser';\nimport { PortDuplexStream as PortStream } from 'extension-port-stream';\nimport { pipeline } from 'readable-stream';\nimport type { Runtime } from 'webextension-polyfill';\n\nimport config from './external-extension-config.json';\nimport { MetaMaskInpageProviderStreamName } from '../MetaMaskInpageProvider';\nimport { StreamProvider } from '../StreamProvider';\nimport { getDefaultExternalMiddleware } from '../utils';\n\nconst browser = detect();\n\nexport type ExtensionType = 'stable' | 'flask' | 'beta' | string;\n\n/**\n * Creates an external extension provider for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The external extension provider.\n */\nexport function createExternalExtensionProvider(\n  typeOrId: ExtensionType = 'stable',\n) {\n  let provider;\n\n  try {\n    const extensionId = getExtensionId(typeOrId);\n    const metamaskPort = chrome.runtime.connect(extensionId) as Runtime.Port;\n\n    const pluginStream = new PortStream(metamaskPort);\n    const streamName = MetaMaskInpageProviderStreamName;\n    const mux = new ObjectMultiplex();\n    pipeline(pluginStream, mux, pluginStream, (error: Error | null) => {\n      let warningMsg = `Lost connection to \"${streamName}\".`;\n      if (error?.stack) {\n        warningMsg += `\\n${error.stack}`;\n      }\n      console.warn(warningMsg);\n    });\n    provider = new StreamProvider(mux.createStream(streamName), {\n      logger: console,\n      rpcMiddleware: getDefaultExternalMiddleware(console),\n    });\n\n    // This is asynchronous but merely logs an error and does not throw upon\n    // failure. Previously this just happened as a side-effect in the\n    // constructor.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    provider.initialize();\n  } catch (error) {\n    console.dir(`MetaMask connect error.`, error);\n    throw error;\n  }\n  return provider;\n}\n\n/**\n * Gets the extension ID for the given extension type or ID.\n *\n * @param typeOrId - The extension type or ID.\n * @returns The extension ID.\n */\nfunction getExtensionId(typeOrId: ExtensionType) {\n  let ids: {\n    stable: string;\n    beta?: string;\n    flask?: string;\n  };\n\n  switch (browser?.name) {\n    case 'edge-chromium':\n      ids = config.edgeChromiumIds;\n      break;\n    case 'firefox':\n      ids = config.firefoxIds;\n      break;\n    default:\n      ids = config.chromeIds;\n  }\n\n  return ids[typeOrId as keyof typeof ids] ?? typeOrId;\n}\n\n/**\n * Gets the build type for the given domain name identifier.\n *\n * @param rdns - The reverse syntax domain name identifier for the wallet.\n * @returns The type or ID.\n */\nexport function getBuildType(rdns: string): string | undefined {\n  const rndsToIdDefinition: Record<string, string> = {\n    'io.metamask': 'stable',\n    'io.metamask.beta': 'beta',\n    'io.metamask.flask': 'flask',\n  };\n  return rndsToIdDefinition[rdns];\n}\n"]}
\ No newline at end of file
diff --git a/dist/index.cjs b/dist/index.cjs
index b958e499fbd7615097724d1f4e62c3f7dac79b82..cb2ef41937427c8a02257be895bccde27a426fe6 100644
--- a/dist/index.cjs
+++ b/dist/index.cjs
@@ -1,8 +1,11 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.eip6963RequestProvider = exports.eip6963AnnounceProvider = exports.StreamProvider = exports.shimWeb3 = exports.setGlobalProvider = exports.MetaMaskInpageProvider = exports.MetaMaskInpageProviderStreamName = exports.initializeProvider = exports.createExternalExtensionProvider = exports.BaseProvider = void 0;
+exports.caip294RequestWallet = exports.caip294AnnounceWallet = exports.eip6963RequestProvider = exports.eip6963AnnounceProvider = exports.StreamProvider = exports.shimWeb3 = exports.setGlobalProvider = exports.MetaMaskInpageProvider = exports.MetaMaskInpageProviderStreamName = exports.initializeProvider = exports.createExternalExtensionProvider = exports.BaseProvider = void 0;
 const BaseProvider_1 = require("./BaseProvider.cjs");
 Object.defineProperty(exports, "BaseProvider", { enumerable: true, get: function () { return BaseProvider_1.BaseProvider; } });
+const CAIP294_1 = require("./CAIP294.cjs");
+Object.defineProperty(exports, "caip294AnnounceWallet", { enumerable: true, get: function () { return CAIP294_1.announceWallet; } });
+Object.defineProperty(exports, "caip294RequestWallet", { enumerable: true, get: function () { return CAIP294_1.requestWallet; } });
 const EIP6963_1 = require("./EIP6963.cjs");
 Object.defineProperty(exports, "eip6963AnnounceProvider", { enumerable: true, get: function () { return EIP6963_1.announceProvider; } });
 Object.defineProperty(exports, "eip6963RequestProvider", { enumerable: true, get: function () { return EIP6963_1.requestProvider; } });
diff --git a/dist/index.cjs.map b/dist/index.cjs.map
index a5cb020587babf9939402ed9e0a8330011890e6a..4ca05a3ddc49b474f9ee96bf76f9e5fbcb6315ee 100644
--- a/dist/index.cjs.map
+++ b/dist/index.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA8C;AAmC5C,6FAnCO,2BAAY,OAmCP;AA3Bd,2CAGmB;AAgCjB,wGAlCoB,0BAAuB,OAkCpB;AACvB,uGAlCmB,yBAAsB,OAkCnB;AAhCxB,8GAAuG;AAwBrG,gHAxBO,iEAA+B,OAwBP;AAvBjC,6EAGoC;AAqBlC,mGAvBA,6CAAkB,OAuBA;AAGlB,kGAzBA,4CAAiB,OAyBA;AAvBnB,yEAGkC;AAmBhC,uGArBA,+CAAsB,OAqBA;AADtB,iHAnBA,yDAAgC,OAmBA;AAjBlC,6CAAsC;AAoBpC,yFApBO,mBAAQ,OAoBP;AAnBV,yDAAkD;AAoBhD,+FApBO,+BAAc,OAoBP","sourcesContent":["import { BaseProvider } from './BaseProvider';\nimport type { RequestArguments } from './BaseProvider';\nimport type {\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n} from './EIP6963';\nimport {\n  announceProvider as eip6963AnnounceProvider,\n  requestProvider as eip6963RequestProvider,\n} from './EIP6963';\nimport { createExternalExtensionProvider } from './extension-provider/createExternalExtensionProvider';\nimport {\n  initializeProvider,\n  setGlobalProvider,\n} from './initializeInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport { StreamProvider } from './StreamProvider';\nimport type { ConsoleLike } from './utils';\n\nexport type {\n  ConsoleLike,\n  RequestArguments,\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n};\n\nexport {\n  BaseProvider,\n  createExternalExtensionProvider,\n  initializeProvider,\n  MetaMaskInpageProviderStreamName,\n  MetaMaskInpageProvider,\n  setGlobalProvider,\n  shimWeb3,\n  StreamProvider,\n  eip6963AnnounceProvider,\n  eip6963RequestProvider,\n};\n"]}
\ No newline at end of file
+{"version":3,"file":"index.cjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA8C;AA+C5C,6FA/CO,2BAAY,OA+CP;AAxCd,2CAGmB;AA+CjB,sGAjDkB,wBAAqB,OAiDlB;AACrB,qGAjDiB,uBAAoB,OAiDjB;AAzCtB,2CAGmB;AAmCjB,wGArCoB,0BAAuB,OAqCpB;AACvB,uGArCmB,yBAAsB,OAqCnB;AAnCxB,8GAAuG;AA2BrG,gHA3BO,iEAA+B,OA2BP;AA1BjC,6EAGoC;AAwBlC,mGA1BA,6CAAkB,OA0BA;AAGlB,kGA5BA,4CAAiB,OA4BA;AA1BnB,yEAGkC;AAsBhC,uGAxBA,+CAAsB,OAwBA;AADtB,iHAtBA,yDAAgC,OAsBA;AApBlC,6CAAsC;AAuBpC,yFAvBO,mBAAQ,OAuBP;AAtBV,yDAAkD;AAuBhD,+FAvBO,+BAAc,OAuBP","sourcesContent":["import { BaseProvider } from './BaseProvider';\nimport type { RequestArguments } from './BaseProvider';\nimport type {\n  CAIP294AnnounceWalletEvent,\n  CAIP294WalletData,\n  CAIP294RequestWalletEvent,\n} from './CAIP294';\nimport {\n  announceWallet as caip294AnnounceWallet,\n  requestWallet as caip294RequestWallet,\n} from './CAIP294';\nimport type {\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n} from './EIP6963';\nimport {\n  announceProvider as eip6963AnnounceProvider,\n  requestProvider as eip6963RequestProvider,\n} from './EIP6963';\nimport { createExternalExtensionProvider } from './extension-provider/createExternalExtensionProvider';\nimport {\n  initializeProvider,\n  setGlobalProvider,\n} from './initializeInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport { StreamProvider } from './StreamProvider';\nimport type { ConsoleLike } from './utils';\n\nexport type {\n  ConsoleLike,\n  RequestArguments,\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n  CAIP294AnnounceWalletEvent,\n  CAIP294WalletData as CAIP294WalletInfo,\n  CAIP294RequestWalletEvent,\n};\n\nexport {\n  BaseProvider,\n  createExternalExtensionProvider,\n  initializeProvider,\n  MetaMaskInpageProviderStreamName,\n  MetaMaskInpageProvider,\n  setGlobalProvider,\n  shimWeb3,\n  StreamProvider,\n  eip6963AnnounceProvider,\n  eip6963RequestProvider,\n  caip294AnnounceWallet,\n  caip294RequestWallet,\n};\n"]}
\ No newline at end of file
diff --git a/dist/index.d.cts b/dist/index.d.cts
index 3cb9f0f45e8ca7384b5934f6bfa0886f0f6791a0..268428ade1f4be002257448f7777b0cb18483981 100644
--- a/dist/index.d.cts
+++ b/dist/index.d.cts
@@ -1,5 +1,7 @@
 import { BaseProvider } from "./BaseProvider.cjs";
 import type { RequestArguments } from "./BaseProvider.cjs";
+import type { CAIP294AnnounceWalletEvent, CAIP294WalletData, CAIP294RequestWalletEvent } from "./CAIP294.cjs";
+import { announceWallet as caip294AnnounceWallet, requestWallet as caip294RequestWallet } from "./CAIP294.cjs";
 import type { EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent } from "./EIP6963.cjs";
 import { announceProvider as eip6963AnnounceProvider, requestProvider as eip6963RequestProvider } from "./EIP6963.cjs";
 import { createExternalExtensionProvider } from "./extension-provider/createExternalExtensionProvider.cjs";
@@ -8,6 +10,6 @@ import { MetaMaskInpageProvider, MetaMaskInpageProviderStreamName } from "./Meta
 import { shimWeb3 } from "./shimWeb3.cjs";
 import { StreamProvider } from "./StreamProvider.cjs";
 import type { ConsoleLike } from "./utils.cjs";
-export type { ConsoleLike, RequestArguments, EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent, };
-export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider, };
+export type { ConsoleLike, RequestArguments, EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent, CAIP294AnnounceWalletEvent, CAIP294WalletData as CAIP294WalletInfo, CAIP294RequestWalletEvent, };
+export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider, caip294AnnounceWallet, caip294RequestWallet, };
 //# sourceMappingURL=index.d.cts.map
\ No newline at end of file
diff --git a/dist/index.d.cts.map b/dist/index.d.cts.map
index a3126d481f4ad794eb718e7057362bb23b8aaacd..0aa8428bee158e725b44b13bddb5edb2dd2bf47f 100644
--- a/dist/index.d.cts.map
+++ b/dist/index.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.cts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAC9C,OAAO,KAAK,EAAE,gBAAgB,EAAE,2BAAuB;AACvD,OAAO,KAAK,EACV,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC5B,sBAAkB;AACnB,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAClD,OAAO,KAAK,EAAE,WAAW,EAAE,oBAAgB;AAE3C,YAAY,EACV,WAAW,EACX,gBAAgB,EAChB,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,GAC5B,CAAC;AAEF,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,GACvB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.cts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAC9C,OAAO,KAAK,EAAE,gBAAgB,EAAE,2BAAuB;AACvD,OAAO,KAAK,EACV,0BAA0B,EAC1B,iBAAiB,EACjB,yBAAyB,EAC1B,sBAAkB;AACnB,OAAO,EACL,cAAc,IAAI,qBAAqB,EACvC,aAAa,IAAI,oBAAoB,EACtC,sBAAkB;AACnB,OAAO,KAAK,EACV,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC5B,sBAAkB;AACnB,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAClD,OAAO,KAAK,EAAE,WAAW,EAAE,oBAAgB;AAE3C,YAAY,EACV,WAAW,EACX,gBAAgB,EAChB,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC3B,0BAA0B,EAC1B,iBAAiB,IAAI,iBAAiB,EACtC,yBAAyB,GAC1B,CAAC;AAEF,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,EACtB,qBAAqB,EACrB,oBAAoB,GACrB,CAAC"}
\ No newline at end of file
diff --git a/dist/index.d.mts b/dist/index.d.mts
index 59af380f38fef0e5666f571f6626e9744c3f8f86..8394e5936afb1623b7bd1162a5c36ed330d3f44a 100644
--- a/dist/index.d.mts
+++ b/dist/index.d.mts
@@ -1,5 +1,7 @@
 import { BaseProvider } from "./BaseProvider.mjs";
 import type { RequestArguments } from "./BaseProvider.mjs";
+import type { CAIP294AnnounceWalletEvent, CAIP294WalletData, CAIP294RequestWalletEvent } from "./CAIP294.mjs";
+import { announceWallet as caip294AnnounceWallet, requestWallet as caip294RequestWallet } from "./CAIP294.mjs";
 import type { EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent } from "./EIP6963.mjs";
 import { announceProvider as eip6963AnnounceProvider, requestProvider as eip6963RequestProvider } from "./EIP6963.mjs";
 import { createExternalExtensionProvider } from "./extension-provider/createExternalExtensionProvider.mjs";
@@ -8,6 +10,6 @@ import { MetaMaskInpageProvider, MetaMaskInpageProviderStreamName } from "./Meta
 import { shimWeb3 } from "./shimWeb3.mjs";
 import { StreamProvider } from "./StreamProvider.mjs";
 import type { ConsoleLike } from "./utils.mjs";
-export type { ConsoleLike, RequestArguments, EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent, };
-export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider, };
+export type { ConsoleLike, RequestArguments, EIP6963AnnounceProviderEvent, EIP6963ProviderDetail, EIP6963ProviderInfo, EIP6963RequestProviderEvent, CAIP294AnnounceWalletEvent, CAIP294WalletData as CAIP294WalletInfo, CAIP294RequestWalletEvent, };
+export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider, caip294AnnounceWallet, caip294RequestWallet, };
 //# sourceMappingURL=index.d.mts.map
\ No newline at end of file
diff --git a/dist/index.d.mts.map b/dist/index.d.mts.map
index 445e29111651e9b3ca5fb4166e9d6309680f5494..f838d3a2e88185eb5838c14da4bd24d383439a3c 100644
--- a/dist/index.d.mts.map
+++ b/dist/index.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.mts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAC9C,OAAO,KAAK,EAAE,gBAAgB,EAAE,2BAAuB;AACvD,OAAO,KAAK,EACV,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC5B,sBAAkB;AACnB,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAClD,OAAO,KAAK,EAAE,WAAW,EAAE,oBAAgB;AAE3C,YAAY,EACV,WAAW,EACX,gBAAgB,EAChB,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,GAC5B,CAAC;AAEF,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,GACvB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.mts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAC9C,OAAO,KAAK,EAAE,gBAAgB,EAAE,2BAAuB;AACvD,OAAO,KAAK,EACV,0BAA0B,EAC1B,iBAAiB,EACjB,yBAAyB,EAC1B,sBAAkB;AACnB,OAAO,EACL,cAAc,IAAI,qBAAqB,EACvC,aAAa,IAAI,oBAAoB,EACtC,sBAAkB;AACnB,OAAO,KAAK,EACV,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC5B,sBAAkB;AACnB,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAClD,OAAO,KAAK,EAAE,WAAW,EAAE,oBAAgB;AAE3C,YAAY,EACV,WAAW,EACX,gBAAgB,EAChB,4BAA4B,EAC5B,qBAAqB,EACrB,mBAAmB,EACnB,2BAA2B,EAC3B,0BAA0B,EAC1B,iBAAiB,IAAI,iBAAiB,EACtC,yBAAyB,GAC1B,CAAC;AAEF,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,EACtB,qBAAqB,EACrB,oBAAoB,GACrB,CAAC"}
\ No newline at end of file
diff --git a/dist/index.mjs b/dist/index.mjs
index c2c1bc3b809c91603e419cf1d1020c72ca0e9773..f4ac2c4d3bfac1cf8364628b3fbf5c8660247798 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -1,9 +1,10 @@
 import { BaseProvider } from "./BaseProvider.mjs";
+import { announceWallet as caip294AnnounceWallet, requestWallet as caip294RequestWallet } from "./CAIP294.mjs";
 import { announceProvider as eip6963AnnounceProvider, requestProvider as eip6963RequestProvider } from "./EIP6963.mjs";
 import { createExternalExtensionProvider } from "./extension-provider/createExternalExtensionProvider.mjs";
 import { initializeProvider, setGlobalProvider } from "./initializeInpageProvider.mjs";
 import { MetaMaskInpageProvider, MetaMaskInpageProviderStreamName } from "./MetaMaskInpageProvider.mjs";
 import { shimWeb3 } from "./shimWeb3.mjs";
 import { StreamProvider } from "./StreamProvider.mjs";
-export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider };
+export { BaseProvider, createExternalExtensionProvider, initializeProvider, MetaMaskInpageProviderStreamName, MetaMaskInpageProvider, setGlobalProvider, shimWeb3, StreamProvider, eip6963AnnounceProvider, eip6963RequestProvider, caip294AnnounceWallet, caip294RequestWallet };
 //# sourceMappingURL=index.mjs.map
\ No newline at end of file
diff --git a/dist/index.mjs.map b/dist/index.mjs.map
index 4eb669561238d01b0c03ccddfcc6b85aecadcded..dc865e1bc324d7dfbd5092b1d7a652000a0e7397 100644
--- a/dist/index.mjs.map
+++ b/dist/index.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"index.mjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAQ9C,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAYlD,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,EACvB,CAAC","sourcesContent":["import { BaseProvider } from './BaseProvider';\nimport type { RequestArguments } from './BaseProvider';\nimport type {\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n} from './EIP6963';\nimport {\n  announceProvider as eip6963AnnounceProvider,\n  requestProvider as eip6963RequestProvider,\n} from './EIP6963';\nimport { createExternalExtensionProvider } from './extension-provider/createExternalExtensionProvider';\nimport {\n  initializeProvider,\n  setGlobalProvider,\n} from './initializeInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport { StreamProvider } from './StreamProvider';\nimport type { ConsoleLike } from './utils';\n\nexport type {\n  ConsoleLike,\n  RequestArguments,\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n};\n\nexport {\n  BaseProvider,\n  createExternalExtensionProvider,\n  initializeProvider,\n  MetaMaskInpageProviderStreamName,\n  MetaMaskInpageProvider,\n  setGlobalProvider,\n  shimWeb3,\n  StreamProvider,\n  eip6963AnnounceProvider,\n  eip6963RequestProvider,\n};\n"]}
\ No newline at end of file
+{"version":3,"file":"index.mjs","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,2BAAuB;AAO9C,OAAO,EACL,cAAc,IAAI,qBAAqB,EACvC,aAAa,IAAI,oBAAoB,EACtC,sBAAkB;AAOnB,OAAO,EACL,gBAAgB,IAAI,uBAAuB,EAC3C,eAAe,IAAI,sBAAsB,EAC1C,sBAAkB;AACnB,OAAO,EAAE,+BAA+B,EAAE,iEAA6D;AACvG,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,uCAAmC;AACpC,OAAO,EACL,sBAAsB,EACtB,gCAAgC,EACjC,qCAAiC;AAClC,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AACtC,OAAO,EAAE,cAAc,EAAE,6BAAyB;AAelD,OAAO,EACL,YAAY,EACZ,+BAA+B,EAC/B,kBAAkB,EAClB,gCAAgC,EAChC,sBAAsB,EACtB,iBAAiB,EACjB,QAAQ,EACR,cAAc,EACd,uBAAuB,EACvB,sBAAsB,EACtB,qBAAqB,EACrB,oBAAoB,EACrB,CAAC","sourcesContent":["import { BaseProvider } from './BaseProvider';\nimport type { RequestArguments } from './BaseProvider';\nimport type {\n  CAIP294AnnounceWalletEvent,\n  CAIP294WalletData,\n  CAIP294RequestWalletEvent,\n} from './CAIP294';\nimport {\n  announceWallet as caip294AnnounceWallet,\n  requestWallet as caip294RequestWallet,\n} from './CAIP294';\nimport type {\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n} from './EIP6963';\nimport {\n  announceProvider as eip6963AnnounceProvider,\n  requestProvider as eip6963RequestProvider,\n} from './EIP6963';\nimport { createExternalExtensionProvider } from './extension-provider/createExternalExtensionProvider';\nimport {\n  initializeProvider,\n  setGlobalProvider,\n} from './initializeInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport { StreamProvider } from './StreamProvider';\nimport type { ConsoleLike } from './utils';\n\nexport type {\n  ConsoleLike,\n  RequestArguments,\n  EIP6963AnnounceProviderEvent,\n  EIP6963ProviderDetail,\n  EIP6963ProviderInfo,\n  EIP6963RequestProviderEvent,\n  CAIP294AnnounceWalletEvent,\n  CAIP294WalletData as CAIP294WalletInfo,\n  CAIP294RequestWalletEvent,\n};\n\nexport {\n  BaseProvider,\n  createExternalExtensionProvider,\n  initializeProvider,\n  MetaMaskInpageProviderStreamName,\n  MetaMaskInpageProvider,\n  setGlobalProvider,\n  shimWeb3,\n  StreamProvider,\n  eip6963AnnounceProvider,\n  eip6963RequestProvider,\n  caip294AnnounceWallet,\n  caip294RequestWallet,\n};\n"]}
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.cjs b/dist/initializeInpageProvider.cjs
index 028713ffb82370b9b285bb05762e73275b3bbf4e..0502aa8b0581d7b4ce45d667928a210c7cf798e5 100644
--- a/dist/initializeInpageProvider.cjs
+++ b/dist/initializeInpageProvider.cjs
@@ -1,8 +1,16 @@
 "use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.initializeProvider = initializeProvider;
 exports.setGlobalProvider = setGlobalProvider;
+exports.announceCaip294WalletData = announceCaip294WalletData;
+const object_multiplex_1 = __importDefault(require("@metamask/object-multiplex"));
+const readable_stream_1 = require("readable-stream");
+const CAIP294_1 = require("./CAIP294.cjs");
 const EIP6963_1 = require("./EIP6963.cjs");
+const createExternalExtensionProvider_1 = require("./extension-provider/createExternalExtensionProvider.cjs");
 const MetaMaskInpageProvider_1 = require("./MetaMaskInpageProvider.cjs");
 const shimWeb3_1 = require("./shimWeb3.cjs");
 /**
@@ -12,16 +20,23 @@ const shimWeb3_1 = require("./shimWeb3.cjs");
  * @param options.connectionStream - A Node.js stream.
  * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
  * @param options.maxEventListeners - The maximum number of event listeners.
- * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.
+ * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
  * @param options.shouldSendMetadata - Whether the provider should send page metadata.
  * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.
  * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.
  * @param options.logger - The logging API to use. Default: `console`.
  * @returns The initialized provider (whether set or not).
  */
-function initializeProvider({ connectionStream, jsonRpcStreamName, logger = console, maxEventListeners = 100, providerInfo, shouldSendMetadata = true, shouldSetOnWindow = true, shouldShimWeb3 = false, }) {
-    const provider = new MetaMaskInpageProvider_1.MetaMaskInpageProvider(connectionStream, {
-        jsonRpcStreamName,
+function initializeProvider({ connectionStream, jsonRpcStreamName = MetaMaskInpageProvider_1.MetaMaskInpageProviderStreamName, logger = console, maxEventListeners = 100, providerInfo, shouldSendMetadata = true, shouldSetOnWindow = true, shouldShimWeb3 = false, }) {
+    const mux = new object_multiplex_1.default();
+    (0, readable_stream_1.pipeline)(connectionStream, mux, connectionStream, (error) => {
+        let warningMsg = `Lost connection to "${jsonRpcStreamName}".`;
+        if (error?.stack) {
+            warningMsg += `\n${error.stack}`;
+        }
+        console.warn(warningMsg);
+    });
+    const provider = new MetaMaskInpageProvider_1.MetaMaskInpageProvider(mux.createStream(jsonRpcStreamName), {
         logger,
         maxEventListeners,
         shouldSendMetadata,
@@ -40,6 +55,8 @@ function initializeProvider({ connectionStream, jsonRpcStreamName, logger = cons
             info: providerInfo,
             provider: proxiedProvider,
         });
+        // eslint-disable-next-line no-void
+        void announceCaip294WalletData(provider, providerInfo);
     }
     if (shouldSetOnWindow) {
         setGlobalProvider(proxiedProvider);
@@ -59,4 +76,27 @@ function setGlobalProvider(providerInstance) {
     window.ethereum = providerInstance;
     window.dispatchEvent(new Event('ethereum#initialized'));
 }
+/**
+ * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.
+ * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.
+ * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).
+ *
+ * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.
+ * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.
+ */
+async function announceCaip294WalletData(provider, providerInfo) {
+    const buildType = (0, createExternalExtensionProvider_1.getBuildType)(providerInfo.rdns);
+    if (buildType !== 'flask') {
+        return;
+    }
+    const providerState = await provider.request({
+        method: 'metamask_getProviderState',
+    });
+    const extensionId = providerState?.extensionId;
+    const walletData = {
+        ...providerInfo,
+        extensionId,
+    };
+    (0, CAIP294_1.announceWallet)(walletData);
+}
 //# sourceMappingURL=initializeInpageProvider.cjs.map
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.cjs.map b/dist/initializeInpageProvider.cjs.map
index f2b79a3885df8c958be8f367c374005bc7d11928..87b351e624fe36f6af9ae6c0107d47a02bd3bfac 100644
--- a/dist/initializeInpageProvider.cjs.map
+++ b/dist/initializeInpageProvider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"initializeInpageProvider.cjs","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":";;AA4CA,gDA2CC;AAQD,8CAKC;AAjGD,2CAA6C;AAE7C,yEAAkE;AAClE,6CAAsC;AAwBtC;;;;;;;;;;;;;GAaG;AACH,SAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAiB,EACjB,MAAM,GAAG,OAAO,EAChB,iBAAiB,GAAG,GAAG,EACvB,YAAY,EACZ,kBAAkB,GAAG,IAAI,EACzB,iBAAiB,GAAG,IAAI,EACxB,cAAc,GAAG,KAAK,GACI;IAC1B,MAAM,QAAQ,GAAG,IAAI,+CAAsB,CAAC,gBAAgB,EAAE;QAC5D,iBAAiB;QACjB,MAAM;QACN,iBAAiB;QACjB,kBAAkB;KACnB,CAAC,CAAC;IAEH,MAAM,eAAe,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;QAC1C,0DAA0D;QAC1D,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI;QAC1B,uEAAuE;QACvE,uCAAuC;QACvC,GAAG,CAAC,MAAM,EAAE,QAA0D;YACpE,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;KACF,CAAC,CAAC;IAEH,IAAI,YAAY,EAAE,CAAC;QACjB,IAAA,0BAAgB,EAAC;YACf,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,eAAe;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,IAAI,iBAAiB,EAAE,CAAC;QACtB,iBAAiB,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,cAAc,EAAE,CAAC;QACnB,IAAA,mBAAQ,EAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,eAAe,CAAC;AACzB,CAAC;AAED;;;;;GAKG;AACH,SAAgB,iBAAiB,CAC/B,gBAAwC;IAEvC,MAA8B,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IAC5D,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC1D,CAAC","sourcesContent":["import type { Duplex } from 'readable-stream';\n\nimport type { EIP6963ProviderInfo } from './EIP6963';\nimport { announceProvider } from './EIP6963';\nimport type { MetaMaskInpageProviderOptions } from './MetaMaskInpageProvider';\nimport { MetaMaskInpageProvider } from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\n\ntype InitializeProviderOptions = {\n  /**\n   * The stream used to connect to the wallet.\n   */\n  connectionStream: Duplex;\n\n  /**\n   * The EIP-6963 provider info that should be announced if set.\n   */\n  providerInfo?: EIP6963ProviderInfo;\n\n  /**\n   * Whether the provider should be set as window.ethereum.\n   */\n  shouldSetOnWindow?: boolean;\n\n  /**\n   * Whether the window.web3 shim should be set.\n   */\n  shouldShimWeb3?: boolean;\n} & MetaMaskInpageProviderOptions;\n\n/**\n * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.\n *\n * @param options - An options bag.\n * @param options.connectionStream - A Node.js stream.\n * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n * @param options.maxEventListeners - The maximum number of event listeners.\n * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.\n * @param options.shouldSendMetadata - Whether the provider should send page metadata.\n * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.\n * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.\n * @param options.logger - The logging API to use. Default: `console`.\n * @returns The initialized provider (whether set or not).\n */\nexport function initializeProvider({\n  connectionStream,\n  jsonRpcStreamName,\n  logger = console,\n  maxEventListeners = 100,\n  providerInfo,\n  shouldSendMetadata = true,\n  shouldSetOnWindow = true,\n  shouldShimWeb3 = false,\n}: InitializeProviderOptions): MetaMaskInpageProvider {\n  const provider = new MetaMaskInpageProvider(connectionStream, {\n    jsonRpcStreamName,\n    logger,\n    maxEventListeners,\n    shouldSendMetadata,\n  });\n\n  const proxiedProvider = new Proxy(provider, {\n    // some common libraries, e.g. web3@1.x, mess with our API\n    deleteProperty: () => true,\n    // fix issue with Proxy unable to access private variables from getters\n    // https://stackoverflow.com/a/73051482\n    get(target, propName: 'chainId' | 'networkVersion' | 'selectedAddress') {\n      return target[propName];\n    },\n  });\n\n  if (providerInfo) {\n    announceProvider({\n      info: providerInfo,\n      provider: proxiedProvider,\n    });\n  }\n\n  if (shouldSetOnWindow) {\n    setGlobalProvider(proxiedProvider);\n  }\n\n  if (shouldShimWeb3) {\n    shimWeb3(proxiedProvider, logger);\n  }\n\n  return proxiedProvider;\n}\n\n/**\n * Sets the given provider instance as window.ethereum and dispatches the\n * 'ethereum#initialized' event on window.\n *\n * @param providerInstance - The provider instance.\n */\nexport function setGlobalProvider(\n  providerInstance: MetaMaskInpageProvider,\n): void {\n  (window as Record<string, any>).ethereum = providerInstance;\n  window.dispatchEvent(new Event('ethereum#initialized'));\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"initializeInpageProvider.cjs","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":";;;;;AAuDA,gDAuDC;AAQD,8CAKC;AAUD,8DAoBC;AAzJD,kFAAyD;AACzD,qDAAwD;AAGxD,2CAA2C;AAC3C,2CAAwE;AACxE,8GAAoF;AAEpF,yEAGkC;AAClC,6CAAsC;AA6BtC;;;;;;;;;;;;;GAaG;AACH,SAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAiB,GAAG,yDAAgC,EACpD,MAAM,GAAG,OAAO,EAChB,iBAAiB,GAAG,GAAG,EACvB,YAAY,EACZ,kBAAkB,GAAG,IAAI,EACzB,iBAAiB,GAAG,IAAI,EACxB,cAAc,GAAG,KAAK,GACI;IAC1B,MAAM,GAAG,GAAG,IAAI,0BAAe,EAAE,CAAC;IAClC,IAAA,0BAAQ,EAAC,gBAAgB,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC,KAAmB,EAAE,EAAE;QACxE,IAAI,UAAU,GAAG,uBAAuB,iBAAiB,IAAI,CAAC;QAC9D,IAAI,KAAK,EAAE,KAAK,EAAE,CAAC;YACjB,UAAU,IAAI,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;QACnC,CAAC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IACH,MAAM,QAAQ,GAAG,IAAI,+CAAsB,CACzC,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC,EACnC;QACE,MAAM;QACN,iBAAiB;QACjB,kBAAkB;KACnB,CACF,CAAC;IAEF,MAAM,eAAe,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;QAC1C,0DAA0D;QAC1D,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI;QAC1B,uEAAuE;QACvE,uCAAuC;QACvC,GAAG,CAAC,MAAM,EAAE,QAA0D;YACpE,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;KACF,CAAC,CAAC;IAEH,IAAI,YAAY,EAAE,CAAC;QACjB,IAAA,0BAAuB,EAAC;YACtB,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,eAAe;SAC1B,CAAC,CAAC;QACH,mCAAmC;QACnC,KAAK,yBAAyB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,iBAAiB,EAAE,CAAC;QACtB,iBAAiB,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,cAAc,EAAE,CAAC;QACnB,IAAA,mBAAQ,EAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,eAAe,CAAC;AACzB,CAAC;AAED;;;;;GAKG;AACH,SAAgB,iBAAiB,CAC/B,gBAAwC;IAEvC,MAA8B,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IAC5D,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED;;;;;;;GAOG;AACI,KAAK,UAAU,yBAAyB,CAC7C,QAAgC,EAChC,YAA+B;IAE/B,MAAM,SAAS,GAAG,IAAA,8CAAY,EAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAClD,IAAI,SAAS,KAAK,OAAO,EAAE,CAAC;QAC1B,OAAO;IACT,CAAC;IAED,MAAM,aAAa,GAAG,MAAM,QAAQ,CAAC,OAAO,CAA2B;QACrE,MAAM,EAAE,2BAA2B;KACpC,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,aAAa,EAAE,WAAW,CAAC;IAE/C,MAAM,UAAU,GAAG;QACjB,GAAG,YAAY;QACf,WAAW;KACZ,CAAC;IAEF,IAAA,wBAAc,EAAC,UAAU,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { type Duplex, pipeline } from 'readable-stream';\n\nimport type { CAIP294WalletData } from './CAIP294';\nimport { announceWallet } from './CAIP294';\nimport { announceProvider as announceEip6963Provider } from './EIP6963';\nimport { getBuildType } from './extension-provider/createExternalExtensionProvider';\nimport type { MetaMaskInpageProviderOptions } from './MetaMaskInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport type { BaseProviderInfo } from './types';\n\ntype InitializeProviderOptions = {\n  /**\n   * The stream used to connect to the wallet.\n   */\n  connectionStream: Duplex;\n\n  /**\n   * The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.\n   */\n  providerInfo?: BaseProviderInfo;\n\n  /**\n   * Whether the provider should be set as window.ethereum.\n   */\n  shouldSetOnWindow?: boolean;\n\n  /**\n   * Whether the window.web3 shim should be set.\n   */\n  shouldShimWeb3?: boolean;\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n} & MetaMaskInpageProviderOptions;\n\n/**\n * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.\n *\n * @param options - An options bag.\n * @param options.connectionStream - A Node.js stream.\n * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n * @param options.maxEventListeners - The maximum number of event listeners.\n * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.\n * @param options.shouldSendMetadata - Whether the provider should send page metadata.\n * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.\n * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.\n * @param options.logger - The logging API to use. Default: `console`.\n * @returns The initialized provider (whether set or not).\n */\nexport function initializeProvider({\n  connectionStream,\n  jsonRpcStreamName = MetaMaskInpageProviderStreamName,\n  logger = console,\n  maxEventListeners = 100,\n  providerInfo,\n  shouldSendMetadata = true,\n  shouldSetOnWindow = true,\n  shouldShimWeb3 = false,\n}: InitializeProviderOptions): MetaMaskInpageProvider {\n  const mux = new ObjectMultiplex();\n  pipeline(connectionStream, mux, connectionStream, (error: Error | null) => {\n    let warningMsg = `Lost connection to \"${jsonRpcStreamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n    console.warn(warningMsg);\n  });\n  const provider = new MetaMaskInpageProvider(\n    mux.createStream(jsonRpcStreamName),\n    {\n      logger,\n      maxEventListeners,\n      shouldSendMetadata,\n    },\n  );\n\n  const proxiedProvider = new Proxy(provider, {\n    // some common libraries, e.g. web3@1.x, mess with our API\n    deleteProperty: () => true,\n    // fix issue with Proxy unable to access private variables from getters\n    // https://stackoverflow.com/a/73051482\n    get(target, propName: 'chainId' | 'networkVersion' | 'selectedAddress') {\n      return target[propName];\n    },\n  });\n\n  if (providerInfo) {\n    announceEip6963Provider({\n      info: providerInfo,\n      provider: proxiedProvider,\n    });\n    // eslint-disable-next-line no-void\n    void announceCaip294WalletData(provider, providerInfo);\n  }\n\n  if (shouldSetOnWindow) {\n    setGlobalProvider(proxiedProvider);\n  }\n\n  if (shouldShimWeb3) {\n    shimWeb3(proxiedProvider, logger);\n  }\n\n  return proxiedProvider;\n}\n\n/**\n * Sets the given provider instance as window.ethereum and dispatches the\n * 'ethereum#initialized' event on window.\n *\n * @param providerInstance - The provider instance.\n */\nexport function setGlobalProvider(\n  providerInstance: MetaMaskInpageProvider,\n): void {\n  (window as Record<string, any>).ethereum = providerInstance;\n  window.dispatchEvent(new Event('ethereum#initialized'));\n}\n\n/**\n * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.\n * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.\n * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).\n *\n * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.\n * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.\n */\nexport async function announceCaip294WalletData(\n  provider: MetaMaskInpageProvider,\n  providerInfo: CAIP294WalletData,\n): Promise<void> {\n  const buildType = getBuildType(providerInfo.rdns);\n  if (buildType !== 'flask') {\n    return;\n  }\n\n  const providerState = await provider.request<{ extensionId?: string }>({\n    method: 'metamask_getProviderState',\n  });\n  const extensionId = providerState?.extensionId;\n\n  const walletData = {\n    ...providerInfo,\n    extensionId,\n  };\n\n  announceWallet(walletData);\n}\n"]}
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.d.cts b/dist/initializeInpageProvider.d.cts
index bee4866b9ca08a9e2f6be690827a2c6e6e2fef41..3ffd70351149e8dcb6cabdc867c8c7e0b7cebc12 100644
--- a/dist/initializeInpageProvider.d.cts
+++ b/dist/initializeInpageProvider.d.cts
@@ -1,16 +1,17 @@
-import type { Duplex } from "readable-stream";
-import type { EIP6963ProviderInfo } from "./EIP6963.cjs";
+import { type Duplex } from "readable-stream";
+import type { CAIP294WalletData } from "./CAIP294.cjs";
 import type { MetaMaskInpageProviderOptions } from "./MetaMaskInpageProvider.cjs";
 import { MetaMaskInpageProvider } from "./MetaMaskInpageProvider.cjs";
+import type { BaseProviderInfo } from "./types.cjs";
 type InitializeProviderOptions = {
     /**
      * The stream used to connect to the wallet.
      */
     connectionStream: Duplex;
     /**
-     * The EIP-6963 provider info that should be announced if set.
+     * The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
      */
-    providerInfo?: EIP6963ProviderInfo;
+    providerInfo?: BaseProviderInfo;
     /**
      * Whether the provider should be set as window.ethereum.
      */
@@ -19,6 +20,10 @@ type InitializeProviderOptions = {
      * Whether the window.web3 shim should be set.
      */
     shouldShimWeb3?: boolean;
+    /**
+     * The name of the stream used to connect to the wallet.
+     */
+    jsonRpcStreamName?: string;
 } & MetaMaskInpageProviderOptions;
 /**
  * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.
@@ -27,7 +32,7 @@ type InitializeProviderOptions = {
  * @param options.connectionStream - A Node.js stream.
  * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
  * @param options.maxEventListeners - The maximum number of event listeners.
- * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.
+ * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
  * @param options.shouldSendMetadata - Whether the provider should send page metadata.
  * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.
  * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.
@@ -42,5 +47,14 @@ export declare function initializeProvider({ connectionStream, jsonRpcStreamName
  * @param providerInstance - The provider instance.
  */
 export declare function setGlobalProvider(providerInstance: MetaMaskInpageProvider): void;
+/**
+ * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.
+ * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.
+ * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).
+ *
+ * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.
+ * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.
+ */
+export declare function announceCaip294WalletData(provider: MetaMaskInpageProvider, providerInfo: CAIP294WalletData): Promise<void>;
 export {};
 //# sourceMappingURL=initializeInpageProvider.d.cts.map
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.d.cts.map b/dist/initializeInpageProvider.d.cts.map
index d848df6d0f336992506d328ff947a31f34c79c18..64ae4d6042d5d3ac492950c9fdc3c49e013fbcba 100644
--- a/dist/initializeInpageProvider.d.cts.map
+++ b/dist/initializeInpageProvider.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"initializeInpageProvider.d.cts","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,sBAAkB;AAErD,OAAO,KAAK,EAAE,6BAA6B,EAAE,qCAAiC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AAGlE,KAAK,yBAAyB,GAAG;IAC/B;;OAEG;IACH,gBAAgB,EAAE,MAAM,CAAC;IAEzB;;OAEG;IACH,YAAY,CAAC,EAAE,mBAAmB,CAAC;IAEnC;;OAEG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAE5B;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;CAC1B,GAAG,6BAA6B,CAAC;AAElC;;;;;;;;;;;;;GAaG;AACH,wBAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAiB,EACjB,MAAgB,EAChB,iBAAuB,EACvB,YAAY,EACZ,kBAAyB,EACzB,iBAAwB,EACxB,cAAsB,GACvB,EAAE,yBAAyB,GAAG,sBAAsB,CAkCpD;AAED;;;;;GAKG;AACH,wBAAgB,iBAAiB,CAC/B,gBAAgB,EAAE,sBAAsB,GACvC,IAAI,CAGN"}
\ No newline at end of file
+{"version":3,"file":"initializeInpageProvider.d.cts","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,MAAM,EAAY,wBAAwB;AAExD,OAAO,KAAK,EAAE,iBAAiB,EAAE,sBAAkB;AAInD,OAAO,KAAK,EAAE,6BAA6B,EAAE,qCAAiC;AAC9E,OAAO,EACL,sBAAsB,EAEvB,qCAAiC;AAElC,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAEhD,KAAK,yBAAyB,GAAG;IAC/B;;OAEG;IACH,gBAAgB,EAAE,MAAM,CAAC;IAEzB;;OAEG;IACH,YAAY,CAAC,EAAE,gBAAgB,CAAC;IAEhC;;OAEG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAE5B;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,CAAC;CAC5B,GAAG,6BAA6B,CAAC;AAElC;;;;;;;;;;;;;GAaG;AACH,wBAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAoD,EACpD,MAAgB,EAChB,iBAAuB,EACvB,YAAY,EACZ,kBAAyB,EACzB,iBAAwB,EACxB,cAAsB,GACvB,EAAE,yBAAyB,GAAG,sBAAsB,CA8CpD;AAED;;;;;GAKG;AACH,wBAAgB,iBAAiB,CAC/B,gBAAgB,EAAE,sBAAsB,GACvC,IAAI,CAGN;AAED;;;;;;;GAOG;AACH,wBAAsB,yBAAyB,CAC7C,QAAQ,EAAE,sBAAsB,EAChC,YAAY,EAAE,iBAAiB,GAC9B,OAAO,CAAC,IAAI,CAAC,CAiBf"}
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.d.mts b/dist/initializeInpageProvider.d.mts
index a547d36d8356e23736010e9eb162cfcc77f98329..a2f0f618d2ba6f2c07a45ef67130295a55556a7e 100644
--- a/dist/initializeInpageProvider.d.mts
+++ b/dist/initializeInpageProvider.d.mts
@@ -1,16 +1,17 @@
-import type { Duplex } from "readable-stream";
-import type { EIP6963ProviderInfo } from "./EIP6963.mjs";
+import { type Duplex } from "readable-stream";
+import type { CAIP294WalletData } from "./CAIP294.mjs";
 import type { MetaMaskInpageProviderOptions } from "./MetaMaskInpageProvider.mjs";
 import { MetaMaskInpageProvider } from "./MetaMaskInpageProvider.mjs";
+import type { BaseProviderInfo } from "./types.mjs";
 type InitializeProviderOptions = {
     /**
      * The stream used to connect to the wallet.
      */
     connectionStream: Duplex;
     /**
-     * The EIP-6963 provider info that should be announced if set.
+     * The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
      */
-    providerInfo?: EIP6963ProviderInfo;
+    providerInfo?: BaseProviderInfo;
     /**
      * Whether the provider should be set as window.ethereum.
      */
@@ -19,6 +20,10 @@ type InitializeProviderOptions = {
      * Whether the window.web3 shim should be set.
      */
     shouldShimWeb3?: boolean;
+    /**
+     * The name of the stream used to connect to the wallet.
+     */
+    jsonRpcStreamName?: string;
 } & MetaMaskInpageProviderOptions;
 /**
  * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.
@@ -27,7 +32,7 @@ type InitializeProviderOptions = {
  * @param options.connectionStream - A Node.js stream.
  * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
  * @param options.maxEventListeners - The maximum number of event listeners.
- * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.
+ * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
  * @param options.shouldSendMetadata - Whether the provider should send page metadata.
  * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.
  * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.
@@ -42,5 +47,14 @@ export declare function initializeProvider({ connectionStream, jsonRpcStreamName
  * @param providerInstance - The provider instance.
  */
 export declare function setGlobalProvider(providerInstance: MetaMaskInpageProvider): void;
+/**
+ * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.
+ * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.
+ * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).
+ *
+ * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.
+ * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.
+ */
+export declare function announceCaip294WalletData(provider: MetaMaskInpageProvider, providerInfo: CAIP294WalletData): Promise<void>;
 export {};
 //# sourceMappingURL=initializeInpageProvider.d.mts.map
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.d.mts.map b/dist/initializeInpageProvider.d.mts.map
index 622e9c22f4e3a85b2d527347e6edbe86bcaa2f7e..1e164e3b3b776665abcf2f7f3cdd188907382024 100644
--- a/dist/initializeInpageProvider.d.mts.map
+++ b/dist/initializeInpageProvider.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"initializeInpageProvider.d.mts","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,EAAE,wBAAwB;AAE9C,OAAO,KAAK,EAAE,mBAAmB,EAAE,sBAAkB;AAErD,OAAO,KAAK,EAAE,6BAA6B,EAAE,qCAAiC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AAGlE,KAAK,yBAAyB,GAAG;IAC/B;;OAEG;IACH,gBAAgB,EAAE,MAAM,CAAC;IAEzB;;OAEG;IACH,YAAY,CAAC,EAAE,mBAAmB,CAAC;IAEnC;;OAEG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAE5B;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;CAC1B,GAAG,6BAA6B,CAAC;AAElC;;;;;;;;;;;;;GAaG;AACH,wBAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAiB,EACjB,MAAgB,EAChB,iBAAuB,EACvB,YAAY,EACZ,kBAAyB,EACzB,iBAAwB,EACxB,cAAsB,GACvB,EAAE,yBAAyB,GAAG,sBAAsB,CAkCpD;AAED;;;;;GAKG;AACH,wBAAgB,iBAAiB,CAC/B,gBAAgB,EAAE,sBAAsB,GACvC,IAAI,CAGN"}
\ No newline at end of file
+{"version":3,"file":"initializeInpageProvider.d.mts","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,MAAM,EAAY,wBAAwB;AAExD,OAAO,KAAK,EAAE,iBAAiB,EAAE,sBAAkB;AAInD,OAAO,KAAK,EAAE,6BAA6B,EAAE,qCAAiC;AAC9E,OAAO,EACL,sBAAsB,EAEvB,qCAAiC;AAElC,OAAO,KAAK,EAAE,gBAAgB,EAAE,oBAAgB;AAEhD,KAAK,yBAAyB,GAAG;IAC/B;;OAEG;IACH,gBAAgB,EAAE,MAAM,CAAC;IAEzB;;OAEG;IACH,YAAY,CAAC,EAAE,gBAAgB,CAAC;IAEhC;;OAEG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAE5B;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,CAAC;CAC5B,GAAG,6BAA6B,CAAC;AAElC;;;;;;;;;;;;;GAaG;AACH,wBAAgB,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAoD,EACpD,MAAgB,EAChB,iBAAuB,EACvB,YAAY,EACZ,kBAAyB,EACzB,iBAAwB,EACxB,cAAsB,GACvB,EAAE,yBAAyB,GAAG,sBAAsB,CA8CpD;AAED;;;;;GAKG;AACH,wBAAgB,iBAAiB,CAC/B,gBAAgB,EAAE,sBAAsB,GACvC,IAAI,CAGN;AAED;;;;;;;GAOG;AACH,wBAAsB,yBAAyB,CAC7C,QAAQ,EAAE,sBAAsB,EAChC,YAAY,EAAE,iBAAiB,GAC9B,OAAO,CAAC,IAAI,CAAC,CAiBf"}
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.mjs b/dist/initializeInpageProvider.mjs
index 22268b5d743c3c589e83ff40d81ad9a441fb2a0c..9262cef5f3e9d9260cbd188b45748d662d1487c5 100644
--- a/dist/initializeInpageProvider.mjs
+++ b/dist/initializeInpageProvider.mjs
@@ -1,5 +1,16 @@
-import { announceProvider } from "./EIP6963.mjs";
-import { MetaMaskInpageProvider } from "./MetaMaskInpageProvider.mjs";
+function $importDefault(module) {
+    if (module?.__esModule) {
+        return module.default;
+    }
+    return module;
+}
+import $ObjectMultiplex from "@metamask/object-multiplex";
+const ObjectMultiplex = $importDefault($ObjectMultiplex);
+import { pipeline } from "readable-stream";
+import { announceWallet } from "./CAIP294.mjs";
+import { announceProvider as announceEip6963Provider } from "./EIP6963.mjs";
+import { getBuildType } from "./extension-provider/createExternalExtensionProvider.mjs";
+import { MetaMaskInpageProvider, MetaMaskInpageProviderStreamName } from "./MetaMaskInpageProvider.mjs";
 import { shimWeb3 } from "./shimWeb3.mjs";
 /**
  * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.
@@ -8,16 +19,23 @@ import { shimWeb3 } from "./shimWeb3.mjs";
  * @param options.connectionStream - A Node.js stream.
  * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.
  * @param options.maxEventListeners - The maximum number of event listeners.
- * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.
+ * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.
  * @param options.shouldSendMetadata - Whether the provider should send page metadata.
  * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.
  * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.
  * @param options.logger - The logging API to use. Default: `console`.
  * @returns The initialized provider (whether set or not).
  */
-export function initializeProvider({ connectionStream, jsonRpcStreamName, logger = console, maxEventListeners = 100, providerInfo, shouldSendMetadata = true, shouldSetOnWindow = true, shouldShimWeb3 = false, }) {
-    const provider = new MetaMaskInpageProvider(connectionStream, {
-        jsonRpcStreamName,
+export function initializeProvider({ connectionStream, jsonRpcStreamName = MetaMaskInpageProviderStreamName, logger = console, maxEventListeners = 100, providerInfo, shouldSendMetadata = true, shouldSetOnWindow = true, shouldShimWeb3 = false, }) {
+    const mux = new ObjectMultiplex();
+    pipeline(connectionStream, mux, connectionStream, (error) => {
+        let warningMsg = `Lost connection to "${jsonRpcStreamName}".`;
+        if (error?.stack) {
+            warningMsg += `\n${error.stack}`;
+        }
+        console.warn(warningMsg);
+    });
+    const provider = new MetaMaskInpageProvider(mux.createStream(jsonRpcStreamName), {
         logger,
         maxEventListeners,
         shouldSendMetadata,
@@ -32,10 +50,12 @@ export function initializeProvider({ connectionStream, jsonRpcStreamName, logger
         },
     });
     if (providerInfo) {
-        announceProvider({
+        announceEip6963Provider({
             info: providerInfo,
             provider: proxiedProvider,
         });
+        // eslint-disable-next-line no-void
+        void announceCaip294WalletData(provider, providerInfo);
     }
     if (shouldSetOnWindow) {
         setGlobalProvider(proxiedProvider);
@@ -55,4 +75,27 @@ export function setGlobalProvider(providerInstance) {
     window.ethereum = providerInstance;
     window.dispatchEvent(new Event('ethereum#initialized'));
 }
+/**
+ * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.
+ * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.
+ * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).
+ *
+ * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.
+ * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.
+ */
+export async function announceCaip294WalletData(provider, providerInfo) {
+    const buildType = getBuildType(providerInfo.rdns);
+    if (buildType !== 'flask') {
+        return;
+    }
+    const providerState = await provider.request({
+        method: 'metamask_getProviderState',
+    });
+    const extensionId = providerState?.extensionId;
+    const walletData = {
+        ...providerInfo,
+        extensionId,
+    };
+    announceWallet(walletData);
+}
 //# sourceMappingURL=initializeInpageProvider.mjs.map
\ No newline at end of file
diff --git a/dist/initializeInpageProvider.mjs.map b/dist/initializeInpageProvider.mjs.map
index e30d477a13d8feac6a4ca6f645897cc97859458f..0fe41b9a463f768ab91fafa56e11096864aa76b1 100644
--- a/dist/initializeInpageProvider.mjs.map
+++ b/dist/initializeInpageProvider.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"initializeInpageProvider.mjs","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,gBAAgB,EAAE,sBAAkB;AAE7C,OAAO,EAAE,sBAAsB,EAAE,qCAAiC;AAClE,OAAO,EAAE,QAAQ,EAAE,uBAAmB;AAwBtC;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,kBAAkB,CAAC,EACjC,gBAAgB,EAChB,iBAAiB,EACjB,MAAM,GAAG,OAAO,EAChB,iBAAiB,GAAG,GAAG,EACvB,YAAY,EACZ,kBAAkB,GAAG,IAAI,EACzB,iBAAiB,GAAG,IAAI,EACxB,cAAc,GAAG,KAAK,GACI;IAC1B,MAAM,QAAQ,GAAG,IAAI,sBAAsB,CAAC,gBAAgB,EAAE;QAC5D,iBAAiB;QACjB,MAAM;QACN,iBAAiB;QACjB,kBAAkB;KACnB,CAAC,CAAC;IAEH,MAAM,eAAe,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;QAC1C,0DAA0D;QAC1D,cAAc,EAAE,GAAG,EAAE,CAAC,IAAI;QAC1B,uEAAuE;QACvE,uCAAuC;QACvC,GAAG,CAAC,MAAM,EAAE,QAA0D;YACpE,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;KACF,CAAC,CAAC;IAEH,IAAI,YAAY,EAAE,CAAC;QACjB,gBAAgB,CAAC;YACf,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,eAAe;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,IAAI,iBAAiB,EAAE,CAAC;QACtB,iBAAiB,CAAC,eAAe,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,cAAc,EAAE,CAAC;QACnB,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,OAAO,eAAe,CAAC;AACzB,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAC/B,gBAAwC;IAEvC,MAA8B,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IAC5D,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;AAC1D,CAAC","sourcesContent":["import type { Duplex } from 'readable-stream';\n\nimport type { EIP6963ProviderInfo } from './EIP6963';\nimport { announceProvider } from './EIP6963';\nimport type { MetaMaskInpageProviderOptions } from './MetaMaskInpageProvider';\nimport { MetaMaskInpageProvider } from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\n\ntype InitializeProviderOptions = {\n  /**\n   * The stream used to connect to the wallet.\n   */\n  connectionStream: Duplex;\n\n  /**\n   * The EIP-6963 provider info that should be announced if set.\n   */\n  providerInfo?: EIP6963ProviderInfo;\n\n  /**\n   * Whether the provider should be set as window.ethereum.\n   */\n  shouldSetOnWindow?: boolean;\n\n  /**\n   * Whether the window.web3 shim should be set.\n   */\n  shouldShimWeb3?: boolean;\n} & MetaMaskInpageProviderOptions;\n\n/**\n * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.\n *\n * @param options - An options bag.\n * @param options.connectionStream - A Node.js stream.\n * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n * @param options.maxEventListeners - The maximum number of event listeners.\n * @param options.providerInfo - The EIP-6963 provider info that should be announced if set.\n * @param options.shouldSendMetadata - Whether the provider should send page metadata.\n * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.\n * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.\n * @param options.logger - The logging API to use. Default: `console`.\n * @returns The initialized provider (whether set or not).\n */\nexport function initializeProvider({\n  connectionStream,\n  jsonRpcStreamName,\n  logger = console,\n  maxEventListeners = 100,\n  providerInfo,\n  shouldSendMetadata = true,\n  shouldSetOnWindow = true,\n  shouldShimWeb3 = false,\n}: InitializeProviderOptions): MetaMaskInpageProvider {\n  const provider = new MetaMaskInpageProvider(connectionStream, {\n    jsonRpcStreamName,\n    logger,\n    maxEventListeners,\n    shouldSendMetadata,\n  });\n\n  const proxiedProvider = new Proxy(provider, {\n    // some common libraries, e.g. web3@1.x, mess with our API\n    deleteProperty: () => true,\n    // fix issue with Proxy unable to access private variables from getters\n    // https://stackoverflow.com/a/73051482\n    get(target, propName: 'chainId' | 'networkVersion' | 'selectedAddress') {\n      return target[propName];\n    },\n  });\n\n  if (providerInfo) {\n    announceProvider({\n      info: providerInfo,\n      provider: proxiedProvider,\n    });\n  }\n\n  if (shouldSetOnWindow) {\n    setGlobalProvider(proxiedProvider);\n  }\n\n  if (shouldShimWeb3) {\n    shimWeb3(proxiedProvider, logger);\n  }\n\n  return proxiedProvider;\n}\n\n/**\n * Sets the given provider instance as window.ethereum and dispatches the\n * 'ethereum#initialized' event on window.\n *\n * @param providerInstance - The provider instance.\n */\nexport function setGlobalProvider(\n  providerInstance: MetaMaskInpageProvider,\n): void {\n  (window as Record<string, any>).ethereum = providerInstance;\n  window.dispatchEvent(new Event('ethereum#initialized'));\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"initializeInpageProvider.mjs","sourceRoot":"","sources":["../src/initializeInpageProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import ObjectMultiplex from '@metamask/object-multiplex';\nimport { type Duplex, pipeline } from 'readable-stream';\n\nimport type { CAIP294WalletData } from './CAIP294';\nimport { announceWallet } from './CAIP294';\nimport { announceProvider as announceEip6963Provider } from './EIP6963';\nimport { getBuildType } from './extension-provider/createExternalExtensionProvider';\nimport type { MetaMaskInpageProviderOptions } from './MetaMaskInpageProvider';\nimport {\n  MetaMaskInpageProvider,\n  MetaMaskInpageProviderStreamName,\n} from './MetaMaskInpageProvider';\nimport { shimWeb3 } from './shimWeb3';\nimport type { BaseProviderInfo } from './types';\n\ntype InitializeProviderOptions = {\n  /**\n   * The stream used to connect to the wallet.\n   */\n  connectionStream: Duplex;\n\n  /**\n   * The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.\n   */\n  providerInfo?: BaseProviderInfo;\n\n  /**\n   * Whether the provider should be set as window.ethereum.\n   */\n  shouldSetOnWindow?: boolean;\n\n  /**\n   * Whether the window.web3 shim should be set.\n   */\n  shouldShimWeb3?: boolean;\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n} & MetaMaskInpageProviderOptions;\n\n/**\n * Initializes a MetaMaskInpageProvider and (optionally) assigns it as window.ethereum.\n *\n * @param options - An options bag.\n * @param options.connectionStream - A Node.js stream.\n * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n * @param options.maxEventListeners - The maximum number of event listeners.\n * @param options.providerInfo - The EIP-6963 provider info / CAIP-294 wallet data that should be announced if set.\n * @param options.shouldSendMetadata - Whether the provider should send page metadata.\n * @param options.shouldSetOnWindow - Whether the provider should be set as window.ethereum.\n * @param options.shouldShimWeb3 - Whether a window.web3 shim should be injected.\n * @param options.logger - The logging API to use. Default: `console`.\n * @returns The initialized provider (whether set or not).\n */\nexport function initializeProvider({\n  connectionStream,\n  jsonRpcStreamName = MetaMaskInpageProviderStreamName,\n  logger = console,\n  maxEventListeners = 100,\n  providerInfo,\n  shouldSendMetadata = true,\n  shouldSetOnWindow = true,\n  shouldShimWeb3 = false,\n}: InitializeProviderOptions): MetaMaskInpageProvider {\n  const mux = new ObjectMultiplex();\n  pipeline(connectionStream, mux, connectionStream, (error: Error | null) => {\n    let warningMsg = `Lost connection to \"${jsonRpcStreamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\\n${error.stack}`;\n    }\n    console.warn(warningMsg);\n  });\n  const provider = new MetaMaskInpageProvider(\n    mux.createStream(jsonRpcStreamName),\n    {\n      logger,\n      maxEventListeners,\n      shouldSendMetadata,\n    },\n  );\n\n  const proxiedProvider = new Proxy(provider, {\n    // some common libraries, e.g. web3@1.x, mess with our API\n    deleteProperty: () => true,\n    // fix issue with Proxy unable to access private variables from getters\n    // https://stackoverflow.com/a/73051482\n    get(target, propName: 'chainId' | 'networkVersion' | 'selectedAddress') {\n      return target[propName];\n    },\n  });\n\n  if (providerInfo) {\n    announceEip6963Provider({\n      info: providerInfo,\n      provider: proxiedProvider,\n    });\n    // eslint-disable-next-line no-void\n    void announceCaip294WalletData(provider, providerInfo);\n  }\n\n  if (shouldSetOnWindow) {\n    setGlobalProvider(proxiedProvider);\n  }\n\n  if (shouldShimWeb3) {\n    shimWeb3(proxiedProvider, logger);\n  }\n\n  return proxiedProvider;\n}\n\n/**\n * Sets the given provider instance as window.ethereum and dispatches the\n * 'ethereum#initialized' event on window.\n *\n * @param providerInstance - The provider instance.\n */\nexport function setGlobalProvider(\n  providerInstance: MetaMaskInpageProvider,\n): void {\n  (window as Record<string, any>).ethereum = providerInstance;\n  window.dispatchEvent(new Event('ethereum#initialized'));\n}\n\n/**\n * Announces [CAIP-294](https://github.com/ChainAgnostic/CAIPs/blob/bc4942857a8e04593ed92f7dc66653577a1c4435/CAIPs/caip-294.md) wallet data according to build type and browser.\n * Until released to stable, `extensionId` is only set in the `metamask_getProviderState` result if the build type is `flask`.\n * `extensionId` is included if browser is chromium based because it is only useable by browsers that support [externally_connectable](https://developer.chrome.com/docs/extensions/reference/manifest/externally-connectable).\n *\n * @param provider - The provider {@link MetaMaskInpageProvider} used for retrieving `extensionId`.\n * @param providerInfo - The provider info {@link BaseProviderInfo} that should be announced if set.\n */\nexport async function announceCaip294WalletData(\n  provider: MetaMaskInpageProvider,\n  providerInfo: CAIP294WalletData,\n): Promise<void> {\n  const buildType = getBuildType(providerInfo.rdns);\n  if (buildType !== 'flask') {\n    return;\n  }\n\n  const providerState = await provider.request<{ extensionId?: string }>({\n    method: 'metamask_getProviderState',\n  });\n  const extensionId = providerState?.extensionId;\n\n  const walletData = {\n    ...providerInfo,\n    extensionId,\n  };\n\n  announceWallet(walletData);\n}\n"]}
\ No newline at end of file
diff --git a/dist/types.cjs b/dist/types.cjs
new file mode 100644
index 0000000000000000000000000000000000000000..77841ecb4d38fd8a60a4a6003226b153190e0a44
--- /dev/null
+++ b/dist/types.cjs
@@ -0,0 +1,3 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+//# sourceMappingURL=types.cjs.map
\ No newline at end of file
diff --git a/dist/types.cjs.map b/dist/types.cjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..c652872a42f7427648924caa72b9cba90d108a86
--- /dev/null
+++ b/dist/types.cjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.cjs","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents the base assets needed to display and identify a wallet.\n *\n * @type BaseProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type BaseProviderInfo = {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n};\n"]}
\ No newline at end of file
diff --git a/dist/types.d.cts b/dist/types.d.cts
new file mode 100644
index 0000000000000000000000000000000000000000..a3228803fb24b399cc7b025c5681bb25f0775cd8
--- /dev/null
+++ b/dist/types.d.cts
@@ -0,0 +1,16 @@
+/**
+ * Represents the base assets needed to display and identify a wallet.
+ *
+ * @type BaseProviderInfo
+ * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.
+ * @property name - The name of the wallet.
+ * @property icon - The icon for the wallet. MUST be data URI.
+ * @property rdns - The reverse syntax domain name identifier for the wallet.
+ */
+export type BaseProviderInfo = {
+    uuid: string;
+    name: string;
+    icon: string;
+    rdns: string;
+};
+//# sourceMappingURL=types.d.cts.map
\ No newline at end of file
diff --git a/dist/types.d.cts.map b/dist/types.d.cts.map
new file mode 100644
index 0000000000000000000000000000000000000000..545c0a0257db25b269646d53ce9d1267ee10fe72
--- /dev/null
+++ b/dist/types.d.cts.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.d.cts","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AACH,MAAM,MAAM,gBAAgB,GAAG;IAC7B,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd,CAAC"}
\ No newline at end of file
diff --git a/dist/types.d.mts b/dist/types.d.mts
new file mode 100644
index 0000000000000000000000000000000000000000..2121ed4e41ff4a2ac6354642974b71a0c4355b4e
--- /dev/null
+++ b/dist/types.d.mts
@@ -0,0 +1,16 @@
+/**
+ * Represents the base assets needed to display and identify a wallet.
+ *
+ * @type BaseProviderInfo
+ * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.
+ * @property name - The name of the wallet.
+ * @property icon - The icon for the wallet. MUST be data URI.
+ * @property rdns - The reverse syntax domain name identifier for the wallet.
+ */
+export type BaseProviderInfo = {
+    uuid: string;
+    name: string;
+    icon: string;
+    rdns: string;
+};
+//# sourceMappingURL=types.d.mts.map
\ No newline at end of file
diff --git a/dist/types.d.mts.map b/dist/types.d.mts.map
new file mode 100644
index 0000000000000000000000000000000000000000..46db2635db6c957c76c6fb9e0b063c3380fcbeb0
--- /dev/null
+++ b/dist/types.d.mts.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.d.mts","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AACH,MAAM,MAAM,gBAAgB,GAAG;IAC7B,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd,CAAC"}
\ No newline at end of file
diff --git a/dist/types.mjs b/dist/types.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..ce3aaacc9b65f971207c7833c2825c31e165c600
--- /dev/null
+++ b/dist/types.mjs
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=types.mjs.map
\ No newline at end of file
diff --git a/dist/types.mjs.map b/dist/types.mjs.map
new file mode 100644
index 0000000000000000000000000000000000000000..351dba69040a194481f7a5afbb6914dabc51aff2
--- /dev/null
+++ b/dist/types.mjs.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.mjs","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents the base assets needed to display and identify a wallet.\n *\n * @type BaseProviderInfo\n * @property uuid - A locally unique identifier for the wallet. MUST be a v4 UUID.\n * @property name - The name of the wallet.\n * @property icon - The icon for the wallet. MUST be data URI.\n * @property rdns - The reverse syntax domain name identifier for the wallet.\n */\nexport type BaseProviderInfo = {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n};\n"]}
\ No newline at end of file
diff --git a/dist/utils.cjs b/dist/utils.cjs
index 3bd0da5e67a56e8203cfb7a7eb9b69a2fc357395..65a06560707b527a3f2c711d205d2f9307060abf 100644
--- a/dist/utils.cjs
+++ b/dist/utils.cjs
@@ -1,10 +1,16 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.NOOP = exports.isValidNetworkVersion = exports.isValidChainId = exports.getRpcPromiseCallback = exports.getDefaultExternalMiddleware = exports.EMITTED_NOTIFICATIONS = void 0;
+exports.NOOP = exports.isValidNetworkVersion = exports.isValidChainId = exports.getRpcPromiseCallback = exports.getDefaultExternalMiddleware = exports.EMITTED_NOTIFICATIONS = exports.FQDN_REGEX = exports.UUID_V4_REGEX = void 0;
 const json_rpc_engine_1 = require("@metamask/json-rpc-engine");
 const rpc_errors_1 = require("@metamask/rpc-errors");
 const createRpcWarningMiddleware_1 = require("./middleware/createRpcWarningMiddleware.cjs");
 // Constants
+// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5
+exports.UUID_V4_REGEX = /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;
+// https://stackoverflow.com/a/20204811
+exports.FQDN_REGEX = /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\.)+[a-zA-Z]{2,63}$)/u;
+// https://stackoverflow.com/a/9523559
+const POSITIVE_INTEGER_REGEX = /^(\d*[1-9]\d*|0)$/u;
 exports.EMITTED_NOTIFICATIONS = Object.freeze([
     'eth_subscription', // per eth-json-rpc-filters/subscriptionManager
 ]);
@@ -71,12 +77,13 @@ const isValidChainId = (chainId) => Boolean(chainId) && typeof chainId === 'stri
 exports.isValidChainId = isValidChainId;
 /**
  * Checks whether the given network version is valid, meaning if it is non-empty
- * string.
+ * integer string or the value 'loading'.
  *
  * @param networkVersion - The network version to validate.
  * @returns Whether the given network version is valid.
  */
-const isValidNetworkVersion = (networkVersion) => Boolean(networkVersion) && typeof networkVersion === 'string';
+const isValidNetworkVersion = (networkVersion) => typeof networkVersion === 'string' &&
+    (POSITIVE_INTEGER_REGEX.test(networkVersion) || networkVersion === 'loading');
 exports.isValidNetworkVersion = isValidNetworkVersion;
 const NOOP = () => undefined;
 exports.NOOP = NOOP;
diff --git a/dist/utils.cjs.map b/dist/utils.cjs.map
index d91f1ad3884f6a1e239b1e752d5933d69084210b..53f30e974ab8340858c5aaa7e464738747126927 100644
--- a/dist/utils.cjs.map
+++ b/dist/utils.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"utils.cjs","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;AACA,+DAAoE;AACpE,qDAAiD;AAOjD,4FAAqF;AASrF,YAAY;AAEC,QAAA,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC;IACjD,kBAAkB,EAAE,+CAA+C;CACpE,CAAC,CAAC;AAEH,oBAAoB;AAEpB;;;;;;GAMG;AACI,MAAM,4BAA4B,GAAG,CAAC,SAAsB,OAAO,EAAE,EAAE,CAAC;IAC7E,IAAA,yCAAuB,GAAE;IACzB,qBAAqB,CAAC,MAAM,CAAC;IAC7B,IAAA,uDAA0B,EAAC,MAAM,CAAC;CACnC,CAAC;AAJW,QAAA,4BAA4B,gCAIvC;AAEF;;;;;;GAMG;AACH,SAAS,qBAAqB,CAC5B,GAAgB;IAEhB,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;QACjC,wEAAwE;QACxE,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1D,QAAQ,CAAC,KAAK,GAAG,sBAAS,CAAC,cAAc,CAAC;gBACxC,OAAO,EAAE,kDAAkD;gBAC3D,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACZ,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,IAAI,EAAE,CAAC;YAChB,CAAC;YACD,GAAG,CAAC,IAAI,CAAC,yBAAyB,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,qDAAqD;AAC9C,MAAM,qBAAqB,GAChC,CACE,OAA8B,EAC9B,MAA+B,EAC/B,YAAY,GAAG,IAAI,EACnB,EAAE,CACJ,CAAC,KAAY,EAAE,QAAsC,EAAQ,EAAE;IAC7D,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;SAAM,CAAC;QACN,CAAC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;AACH,CAAC,CAAC;AAdS,QAAA,qBAAqB,yBAc9B;AAEJ;;;;;;GAMG;AACI,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAqB,EAAE,CACpE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AADjE,QAAA,cAAc,kBACmD;AAE9E;;;;;;GAMG;AACI,MAAM,qBAAqB,GAAG,CACnC,cAAuB,EACG,EAAE,CAC5B,OAAO,CAAC,cAAc,CAAC,IAAI,OAAO,cAAc,KAAK,QAAQ,CAAC;AAHnD,QAAA,qBAAqB,yBAG8B;AAEzD,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC;AAAvB,QAAA,IAAI,QAAmB","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createIdRemapMiddleware } from '@metamask/json-rpc-engine';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type {\n  Json,\n  JsonRpcParams,\n  PendingJsonRpcResponse,\n} from '@metamask/utils';\n\nimport { createRpcWarningMiddleware } from './middleware/createRpcWarningMiddleware';\n\nexport type Maybe<Type> = Partial<Type> | null | undefined;\n\nexport type ConsoleLike = Pick<\n  Console,\n  'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'\n>;\n\n// Constants\n\nexport const EMITTED_NOTIFICATIONS = Object.freeze([\n  'eth_subscription', // per eth-json-rpc-filters/subscriptionManager\n]);\n\n// Utility functions\n\n/**\n * Gets the default middleware for external providers, consisting of an ID\n * remapping middleware and an error middleware.\n *\n * @param logger - The logger to use in the error middleware.\n * @returns An array of @metamask/json-rpc-engine middleware functions.\n */\nexport const getDefaultExternalMiddleware = (logger: ConsoleLike = console) => [\n  createIdRemapMiddleware(),\n  createErrorMiddleware(logger),\n  createRpcWarningMiddleware(logger),\n];\n\n/**\n * A `json-rpc-engine` middleware that logs RPC errors and validates the request\n * method.\n *\n * @param log - The logging API to use.\n * @returns A @metamask/json-rpc-engine middleware function.\n */\nfunction createErrorMiddleware(\n  log: ConsoleLike,\n): JsonRpcMiddleware<JsonRpcParams, Json> {\n  return (request, response, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof request.method !== 'string' || !request.method) {\n      response.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: request,\n      });\n    }\n\n    next((done) => {\n      const { error } = response;\n      if (!error) {\n        return done();\n      }\n      log.warn(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (\n    resolve: (value?: any) => void,\n    reject: (error?: Error) => void,\n    unwrapResult = true,\n  ) =>\n  (error: Error, response: PendingJsonRpcResponse<Json>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else {\n      !unwrapResult || Array.isArray(response)\n        ? resolve(response)\n        : resolve(response.result);\n    }\n  };\n\n/**\n * Checks whether the given chain ID is valid, meaning if it is non-empty,\n * '0x'-prefixed string.\n *\n * @param chainId - The chain ID to validate.\n * @returns Whether the given chain ID is valid.\n */\nexport const isValidChainId = (chainId: unknown): chainId is string =>\n  Boolean(chainId) && typeof chainId === 'string' && chainId.startsWith('0x');\n\n/**\n * Checks whether the given network version is valid, meaning if it is non-empty\n * string.\n *\n * @param networkVersion - The network version to validate.\n * @returns Whether the given network version is valid.\n */\nexport const isValidNetworkVersion = (\n  networkVersion: unknown,\n): networkVersion is string =>\n  Boolean(networkVersion) && typeof networkVersion === 'string';\n\nexport const NOOP = () => undefined;\n"]}
\ No newline at end of file
+{"version":3,"file":"utils.cjs","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;AACA,+DAAoE;AACpE,qDAAiD;AAOjD,4FAAqF;AASrF,YAAY;AAEZ,wGAAwG;AAC3F,QAAA,aAAa,GACxB,sGAAsG,CAAC;AAEzG,uCAAuC;AAC1B,QAAA,UAAU,GACrB,0EAA0E,CAAC;AAE7E,sCAAsC;AACtC,MAAM,sBAAsB,GAAG,oBAAoB,CAAC;AAEvC,QAAA,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC;IACjD,kBAAkB,EAAE,+CAA+C;CACpE,CAAC,CAAC;AAEH,oBAAoB;AAEpB;;;;;;GAMG;AACI,MAAM,4BAA4B,GAAG,CAAC,SAAsB,OAAO,EAAE,EAAE,CAAC;IAC7E,IAAA,yCAAuB,GAAE;IACzB,qBAAqB,CAAC,MAAM,CAAC;IAC7B,IAAA,uDAA0B,EAAC,MAAM,CAAC;CACnC,CAAC;AAJW,QAAA,4BAA4B,gCAIvC;AAEF;;;;;;GAMG;AACH,SAAS,qBAAqB,CAC5B,GAAgB;IAEhB,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;QACjC,wEAAwE;QACxE,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1D,QAAQ,CAAC,KAAK,GAAG,sBAAS,CAAC,cAAc,CAAC;gBACxC,OAAO,EAAE,kDAAkD;gBAC3D,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACZ,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,IAAI,EAAE,CAAC;YAChB,CAAC;YACD,GAAG,CAAC,IAAI,CAAC,yBAAyB,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,qDAAqD;AAC9C,MAAM,qBAAqB,GAChC,CACE,OAA8B,EAC9B,MAA+B,EAC/B,YAAY,GAAG,IAAI,EACnB,EAAE,CACJ,CAAC,KAAY,EAAE,QAAsC,EAAQ,EAAE;IAC7D,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;SAAM,CAAC;QACN,CAAC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;AACH,CAAC,CAAC;AAdS,QAAA,qBAAqB,yBAc9B;AAEJ;;;;;;GAMG;AACI,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAqB,EAAE,CACpE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AADjE,QAAA,cAAc,kBACmD;AAE9E;;;;;;GAMG;AACI,MAAM,qBAAqB,GAAG,CACnC,cAAuB,EACU,EAAE,CACnC,OAAO,cAAc,KAAK,QAAQ;IAClC,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,cAAc,KAAK,SAAS,CAAC,CAAC;AAJnE,QAAA,qBAAqB,yBAI8C;AAEzE,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC;AAAvB,QAAA,IAAI,QAAmB","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createIdRemapMiddleware } from '@metamask/json-rpc-engine';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type {\n  Json,\n  JsonRpcParams,\n  PendingJsonRpcResponse,\n} from '@metamask/utils';\n\nimport { createRpcWarningMiddleware } from './middleware/createRpcWarningMiddleware';\n\nexport type Maybe<Type> = Partial<Type> | null | undefined;\n\nexport type ConsoleLike = Pick<\n  Console,\n  'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'\n>;\n\n// Constants\n\n// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5\nexport const UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\n// https://stackoverflow.com/a/20204811\nexport const FQDN_REGEX =\n  /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/u;\n\n// https://stackoverflow.com/a/9523559\nconst POSITIVE_INTEGER_REGEX = /^(\\d*[1-9]\\d*|0)$/u;\n\nexport const EMITTED_NOTIFICATIONS = Object.freeze([\n  'eth_subscription', // per eth-json-rpc-filters/subscriptionManager\n]);\n\n// Utility functions\n\n/**\n * Gets the default middleware for external providers, consisting of an ID\n * remapping middleware and an error middleware.\n *\n * @param logger - The logger to use in the error middleware.\n * @returns An array of @metamask/json-rpc-engine middleware functions.\n */\nexport const getDefaultExternalMiddleware = (logger: ConsoleLike = console) => [\n  createIdRemapMiddleware(),\n  createErrorMiddleware(logger),\n  createRpcWarningMiddleware(logger),\n];\n\n/**\n * A `json-rpc-engine` middleware that logs RPC errors and validates the request\n * method.\n *\n * @param log - The logging API to use.\n * @returns A @metamask/json-rpc-engine middleware function.\n */\nfunction createErrorMiddleware(\n  log: ConsoleLike,\n): JsonRpcMiddleware<JsonRpcParams, Json> {\n  return (request, response, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof request.method !== 'string' || !request.method) {\n      response.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: request,\n      });\n    }\n\n    next((done) => {\n      const { error } = response;\n      if (!error) {\n        return done();\n      }\n      log.warn(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (\n    resolve: (value?: any) => void,\n    reject: (error?: Error) => void,\n    unwrapResult = true,\n  ) =>\n  (error: Error, response: PendingJsonRpcResponse<Json>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else {\n      !unwrapResult || Array.isArray(response)\n        ? resolve(response)\n        : resolve(response.result);\n    }\n  };\n\n/**\n * Checks whether the given chain ID is valid, meaning if it is non-empty,\n * '0x'-prefixed string.\n *\n * @param chainId - The chain ID to validate.\n * @returns Whether the given chain ID is valid.\n */\nexport const isValidChainId = (chainId: unknown): chainId is string =>\n  Boolean(chainId) && typeof chainId === 'string' && chainId.startsWith('0x');\n\n/**\n * Checks whether the given network version is valid, meaning if it is non-empty\n * integer string or the value 'loading'.\n *\n * @param networkVersion - The network version to validate.\n * @returns Whether the given network version is valid.\n */\nexport const isValidNetworkVersion = (\n  networkVersion: unknown,\n): networkVersion is string | null =>\n  typeof networkVersion === 'string' &&\n  (POSITIVE_INTEGER_REGEX.test(networkVersion) || networkVersion === 'loading');\n\nexport const NOOP = () => undefined;\n"]}
\ No newline at end of file
diff --git a/dist/utils.d.cts b/dist/utils.d.cts
index 51659ed3b31623f4d96b5a19bcc8a5bc6f7474cf..f0b64f034858c490af80b7d9c571de1e9af5ac9a 100644
--- a/dist/utils.d.cts
+++ b/dist/utils.d.cts
@@ -2,6 +2,8 @@ import type { JsonRpcMiddleware } from "@metamask/json-rpc-engine";
 import type { Json, JsonRpcParams, PendingJsonRpcResponse } from "@metamask/utils";
 export type Maybe<Type> = Partial<Type> | null | undefined;
 export type ConsoleLike = Pick<Console, 'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'>;
+export declare const UUID_V4_REGEX: RegExp;
+export declare const FQDN_REGEX: RegExp;
 export declare const EMITTED_NOTIFICATIONS: readonly string[];
 /**
  * Gets the default middleware for external providers, consisting of an ID
@@ -22,11 +24,11 @@ export declare const getRpcPromiseCallback: (resolve: (value?: any) => void, rej
 export declare const isValidChainId: (chainId: unknown) => chainId is string;
 /**
  * Checks whether the given network version is valid, meaning if it is non-empty
- * string.
+ * integer string or the value 'loading'.
  *
  * @param networkVersion - The network version to validate.
  * @returns Whether the given network version is valid.
  */
-export declare const isValidNetworkVersion: (networkVersion: unknown) => networkVersion is string;
+export declare const isValidNetworkVersion: (networkVersion: unknown) => networkVersion is string | null;
 export declare const NOOP: () => undefined;
 //# sourceMappingURL=utils.d.cts.map
\ No newline at end of file
diff --git a/dist/utils.d.cts.map b/dist/utils.d.cts.map
index dd80d73e8c4bdf0d4ef40c967dd7a6f9b0a9baab..a4ff36c93f73ebb6462a634a740416cb559a61a5 100644
--- a/dist/utils.d.cts.map
+++ b/dist/utils.d.cts.map
@@ -1 +1 @@
-{"version":3,"file":"utils.d.cts","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,EACV,IAAI,EACJ,aAAa,EACb,sBAAsB,EACvB,wBAAwB;AAIzB,MAAM,MAAM,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;AAE3D,MAAM,MAAM,WAAW,GAAG,IAAI,CAC5B,OAAO,EACP,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CACtD,CAAC;AAIF,eAAO,MAAM,qBAAqB,mBAEhC,CAAC;AAIH;;;;;;GAMG;AACH,eAAO,MAAM,4BAA4B,YAAY,WAAW,6CAI/D,CAAC;AAiCF,eAAO,MAAM,qBAAqB,YAErB,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,UACtB,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,IAAI,qCAGzB,KAAK,YAAY,sBAAsB,CAAC,IAAI,CAAC,KAAG,IAQvD,CAAC;AAEJ;;;;;;GAMG;AACH,eAAO,MAAM,cAAc,YAAa,OAAO,KAAG,OAAO,IAAI,MACgB,CAAC;AAE9E;;;;;;GAMG;AACH,eAAO,MAAM,qBAAqB,mBAChB,OAAO,KACtB,cAAc,IAAI,MAC0C,CAAC;AAEhE,eAAO,MAAM,IAAI,iBAAkB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"utils.d.cts","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,EACV,IAAI,EACJ,aAAa,EACb,sBAAsB,EACvB,wBAAwB;AAIzB,MAAM,MAAM,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;AAE3D,MAAM,MAAM,WAAW,GAAG,IAAI,CAC5B,OAAO,EACP,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CACtD,CAAC;AAKF,eAAO,MAAM,aAAa,QAC8E,CAAC;AAGzG,eAAO,MAAM,UAAU,QACqD,CAAC;AAK7E,eAAO,MAAM,qBAAqB,mBAEhC,CAAC;AAIH;;;;;;GAMG;AACH,eAAO,MAAM,4BAA4B,YAAY,WAAW,6CAI/D,CAAC;AAiCF,eAAO,MAAM,qBAAqB,YAErB,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,UACtB,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,IAAI,qCAGzB,KAAK,YAAY,sBAAsB,CAAC,IAAI,CAAC,KAAG,IAQvD,CAAC;AAEJ;;;;;;GAMG;AACH,eAAO,MAAM,cAAc,YAAa,OAAO,KAAG,OAAO,IAAI,MACgB,CAAC;AAE9E;;;;;;GAMG;AACH,eAAO,MAAM,qBAAqB,mBAChB,OAAO,KACtB,cAAc,IAAI,MAAM,GAAG,IAEiD,CAAC;AAEhF,eAAO,MAAM,IAAI,iBAAkB,CAAC"}
\ No newline at end of file
diff --git a/dist/utils.d.mts b/dist/utils.d.mts
index f0927a434f0d13d3a22d4ae391b81416e0a2faec..440a3d167f10a5c1b562a0782f7e011a5450145a 100644
--- a/dist/utils.d.mts
+++ b/dist/utils.d.mts
@@ -2,6 +2,8 @@ import type { JsonRpcMiddleware } from "@metamask/json-rpc-engine";
 import type { Json, JsonRpcParams, PendingJsonRpcResponse } from "@metamask/utils";
 export type Maybe<Type> = Partial<Type> | null | undefined;
 export type ConsoleLike = Pick<Console, 'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'>;
+export declare const UUID_V4_REGEX: RegExp;
+export declare const FQDN_REGEX: RegExp;
 export declare const EMITTED_NOTIFICATIONS: readonly string[];
 /**
  * Gets the default middleware for external providers, consisting of an ID
@@ -22,11 +24,11 @@ export declare const getRpcPromiseCallback: (resolve: (value?: any) => void, rej
 export declare const isValidChainId: (chainId: unknown) => chainId is string;
 /**
  * Checks whether the given network version is valid, meaning if it is non-empty
- * string.
+ * integer string or the value 'loading'.
  *
  * @param networkVersion - The network version to validate.
  * @returns Whether the given network version is valid.
  */
-export declare const isValidNetworkVersion: (networkVersion: unknown) => networkVersion is string;
+export declare const isValidNetworkVersion: (networkVersion: unknown) => networkVersion is string | null;
 export declare const NOOP: () => undefined;
 //# sourceMappingURL=utils.d.mts.map
\ No newline at end of file
diff --git a/dist/utils.d.mts.map b/dist/utils.d.mts.map
index 4289d1cc061a3ec021fe9877d424e44d8fb5a41b..0e4d50501892b26213d362470d76e027035a67fd 100644
--- a/dist/utils.d.mts.map
+++ b/dist/utils.d.mts.map
@@ -1 +1 @@
-{"version":3,"file":"utils.d.mts","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,EACV,IAAI,EACJ,aAAa,EACb,sBAAsB,EACvB,wBAAwB;AAIzB,MAAM,MAAM,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;AAE3D,MAAM,MAAM,WAAW,GAAG,IAAI,CAC5B,OAAO,EACP,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CACtD,CAAC;AAIF,eAAO,MAAM,qBAAqB,mBAEhC,CAAC;AAIH;;;;;;GAMG;AACH,eAAO,MAAM,4BAA4B,YAAY,WAAW,6CAI/D,CAAC;AAiCF,eAAO,MAAM,qBAAqB,YAErB,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,UACtB,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,IAAI,qCAGzB,KAAK,YAAY,sBAAsB,CAAC,IAAI,CAAC,KAAG,IAQvD,CAAC;AAEJ;;;;;;GAMG;AACH,eAAO,MAAM,cAAc,YAAa,OAAO,KAAG,OAAO,IAAI,MACgB,CAAC;AAE9E;;;;;;GAMG;AACH,eAAO,MAAM,qBAAqB,mBAChB,OAAO,KACtB,cAAc,IAAI,MAC0C,CAAC;AAEhE,eAAO,MAAM,IAAI,iBAAkB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"utils.d.mts","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,iBAAiB,EAAE,kCAAkC;AAGnE,OAAO,KAAK,EACV,IAAI,EACJ,aAAa,EACb,sBAAsB,EACvB,wBAAwB;AAIzB,MAAM,MAAM,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;AAE3D,MAAM,MAAM,WAAW,GAAG,IAAI,CAC5B,OAAO,EACP,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,CACtD,CAAC;AAKF,eAAO,MAAM,aAAa,QAC8E,CAAC;AAGzG,eAAO,MAAM,UAAU,QACqD,CAAC;AAK7E,eAAO,MAAM,qBAAqB,mBAEhC,CAAC;AAIH;;;;;;GAMG;AACH,eAAO,MAAM,4BAA4B,YAAY,WAAW,6CAI/D,CAAC;AAiCF,eAAO,MAAM,qBAAqB,YAErB,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI,UACtB,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,IAAI,qCAGzB,KAAK,YAAY,sBAAsB,CAAC,IAAI,CAAC,KAAG,IAQvD,CAAC;AAEJ;;;;;;GAMG;AACH,eAAO,MAAM,cAAc,YAAa,OAAO,KAAG,OAAO,IAAI,MACgB,CAAC;AAE9E;;;;;;GAMG;AACH,eAAO,MAAM,qBAAqB,mBAChB,OAAO,KACtB,cAAc,IAAI,MAAM,GAAG,IAEiD,CAAC;AAEhF,eAAO,MAAM,IAAI,iBAAkB,CAAC"}
\ No newline at end of file
diff --git a/dist/utils.mjs b/dist/utils.mjs
index d881b427698ba5413a0b32b452425bae46f04857..623f1ce4c3f252312ad3ada4ee08f865c1f58a9b 100644
--- a/dist/utils.mjs
+++ b/dist/utils.mjs
@@ -2,6 +2,12 @@ import { createIdRemapMiddleware } from "@metamask/json-rpc-engine";
 import { rpcErrors } from "@metamask/rpc-errors";
 import { createRpcWarningMiddleware } from "./middleware/createRpcWarningMiddleware.mjs";
 // Constants
+// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5
+export const UUID_V4_REGEX = /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;
+// https://stackoverflow.com/a/20204811
+export const FQDN_REGEX = /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\.)+[a-zA-Z]{2,63}$)/u;
+// https://stackoverflow.com/a/9523559
+const POSITIVE_INTEGER_REGEX = /^(\d*[1-9]\d*|0)$/u;
 export const EMITTED_NOTIFICATIONS = Object.freeze([
     'eth_subscription', // per eth-json-rpc-filters/subscriptionManager
 ]);
@@ -65,11 +71,12 @@ export const getRpcPromiseCallback = (resolve, reject, unwrapResult = true) => (
 export const isValidChainId = (chainId) => Boolean(chainId) && typeof chainId === 'string' && chainId.startsWith('0x');
 /**
  * Checks whether the given network version is valid, meaning if it is non-empty
- * string.
+ * integer string or the value 'loading'.
  *
  * @param networkVersion - The network version to validate.
  * @returns Whether the given network version is valid.
  */
-export const isValidNetworkVersion = (networkVersion) => Boolean(networkVersion) && typeof networkVersion === 'string';
+export const isValidNetworkVersion = (networkVersion) => typeof networkVersion === 'string' &&
+    (POSITIVE_INTEGER_REGEX.test(networkVersion) || networkVersion === 'loading');
 export const NOOP = () => undefined;
 //# sourceMappingURL=utils.mjs.map
\ No newline at end of file
diff --git a/dist/utils.mjs.map b/dist/utils.mjs.map
index 35d6cef7b2df0137f0f504e72f174b1e3dae4372..ba7e940beaa247458f945c16794760a2c40f0669 100644
--- a/dist/utils.mjs.map
+++ b/dist/utils.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"utils.mjs","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,uBAAuB,EAAE,kCAAkC;AACpE,OAAO,EAAE,SAAS,EAAE,6BAA6B;AAOjD,OAAO,EAAE,0BAA0B,EAAE,oDAAgD;AASrF,YAAY;AAEZ,MAAM,CAAC,MAAM,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC;IACjD,kBAAkB,EAAE,+CAA+C;CACpE,CAAC,CAAC;AAEH,oBAAoB;AAEpB;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,SAAsB,OAAO,EAAE,EAAE,CAAC;IAC7E,uBAAuB,EAAE;IACzB,qBAAqB,CAAC,MAAM,CAAC;IAC7B,0BAA0B,CAAC,MAAM,CAAC;CACnC,CAAC;AAEF;;;;;;GAMG;AACH,SAAS,qBAAqB,CAC5B,GAAgB;IAEhB,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;QACjC,wEAAwE;QACxE,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1D,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC;gBACxC,OAAO,EAAE,kDAAkD;gBAC3D,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACZ,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,IAAI,EAAE,CAAC;YAChB,CAAC;YACD,GAAG,CAAC,IAAI,CAAC,yBAAyB,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,qDAAqD;AACrD,MAAM,CAAC,MAAM,qBAAqB,GAChC,CACE,OAA8B,EAC9B,MAA+B,EAC/B,YAAY,GAAG,IAAI,EACnB,EAAE,CACJ,CAAC,KAAY,EAAE,QAAsC,EAAQ,EAAE;IAC7D,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;SAAM,CAAC;QACN,CAAC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;AACH,CAAC,CAAC;AAEJ;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAqB,EAAE,CACpE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAE9E;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,cAAuB,EACG,EAAE,CAC5B,OAAO,CAAC,cAAc,CAAC,IAAI,OAAO,cAAc,KAAK,QAAQ,CAAC;AAEhE,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createIdRemapMiddleware } from '@metamask/json-rpc-engine';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type {\n  Json,\n  JsonRpcParams,\n  PendingJsonRpcResponse,\n} from '@metamask/utils';\n\nimport { createRpcWarningMiddleware } from './middleware/createRpcWarningMiddleware';\n\nexport type Maybe<Type> = Partial<Type> | null | undefined;\n\nexport type ConsoleLike = Pick<\n  Console,\n  'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'\n>;\n\n// Constants\n\nexport const EMITTED_NOTIFICATIONS = Object.freeze([\n  'eth_subscription', // per eth-json-rpc-filters/subscriptionManager\n]);\n\n// Utility functions\n\n/**\n * Gets the default middleware for external providers, consisting of an ID\n * remapping middleware and an error middleware.\n *\n * @param logger - The logger to use in the error middleware.\n * @returns An array of @metamask/json-rpc-engine middleware functions.\n */\nexport const getDefaultExternalMiddleware = (logger: ConsoleLike = console) => [\n  createIdRemapMiddleware(),\n  createErrorMiddleware(logger),\n  createRpcWarningMiddleware(logger),\n];\n\n/**\n * A `json-rpc-engine` middleware that logs RPC errors and validates the request\n * method.\n *\n * @param log - The logging API to use.\n * @returns A @metamask/json-rpc-engine middleware function.\n */\nfunction createErrorMiddleware(\n  log: ConsoleLike,\n): JsonRpcMiddleware<JsonRpcParams, Json> {\n  return (request, response, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof request.method !== 'string' || !request.method) {\n      response.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: request,\n      });\n    }\n\n    next((done) => {\n      const { error } = response;\n      if (!error) {\n        return done();\n      }\n      log.warn(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (\n    resolve: (value?: any) => void,\n    reject: (error?: Error) => void,\n    unwrapResult = true,\n  ) =>\n  (error: Error, response: PendingJsonRpcResponse<Json>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else {\n      !unwrapResult || Array.isArray(response)\n        ? resolve(response)\n        : resolve(response.result);\n    }\n  };\n\n/**\n * Checks whether the given chain ID is valid, meaning if it is non-empty,\n * '0x'-prefixed string.\n *\n * @param chainId - The chain ID to validate.\n * @returns Whether the given chain ID is valid.\n */\nexport const isValidChainId = (chainId: unknown): chainId is string =>\n  Boolean(chainId) && typeof chainId === 'string' && chainId.startsWith('0x');\n\n/**\n * Checks whether the given network version is valid, meaning if it is non-empty\n * string.\n *\n * @param networkVersion - The network version to validate.\n * @returns Whether the given network version is valid.\n */\nexport const isValidNetworkVersion = (\n  networkVersion: unknown,\n): networkVersion is string =>\n  Boolean(networkVersion) && typeof networkVersion === 'string';\n\nexport const NOOP = () => undefined;\n"]}
\ No newline at end of file
+{"version":3,"file":"utils.mjs","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,uBAAuB,EAAE,kCAAkC;AACpE,OAAO,EAAE,SAAS,EAAE,6BAA6B;AAOjD,OAAO,EAAE,0BAA0B,EAAE,oDAAgD;AASrF,YAAY;AAEZ,wGAAwG;AACxG,MAAM,CAAC,MAAM,aAAa,GACxB,sGAAsG,CAAC;AAEzG,uCAAuC;AACvC,MAAM,CAAC,MAAM,UAAU,GACrB,0EAA0E,CAAC;AAE7E,sCAAsC;AACtC,MAAM,sBAAsB,GAAG,oBAAoB,CAAC;AAEpD,MAAM,CAAC,MAAM,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC;IACjD,kBAAkB,EAAE,+CAA+C;CACpE,CAAC,CAAC;AAEH,oBAAoB;AAEpB;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,SAAsB,OAAO,EAAE,EAAE,CAAC;IAC7E,uBAAuB,EAAE;IACzB,qBAAqB,CAAC,MAAM,CAAC;IAC7B,0BAA0B,CAAC,MAAM,CAAC;CACnC,CAAC;AAEF;;;;;;GAMG;AACH,SAAS,qBAAqB,CAC5B,GAAgB;IAEhB,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;QACjC,wEAAwE;QACxE,IAAI,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC1D,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,cAAc,CAAC;gBACxC,OAAO,EAAE,kDAAkD;gBAC3D,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACZ,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,IAAI,EAAE,CAAC;YAChB,CAAC;YACD,GAAG,CAAC,IAAI,CAAC,yBAAyB,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,qDAAqD;AACrD,MAAM,CAAC,MAAM,qBAAqB,GAChC,CACE,OAA8B,EAC9B,MAA+B,EAC/B,YAAY,GAAG,IAAI,EACnB,EAAE,CACJ,CAAC,KAAY,EAAE,QAAsC,EAAQ,EAAE;IAC7D,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;SAAM,CAAC;QACN,CAAC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACnB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;AACH,CAAC,CAAC;AAEJ;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,OAAgB,EAAqB,EAAE,CACpE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAE9E;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,cAAuB,EACU,EAAE,CACnC,OAAO,cAAc,KAAK,QAAQ;IAClC,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,cAAc,KAAK,SAAS,CAAC,CAAC;AAEhF,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC","sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport { createIdRemapMiddleware } from '@metamask/json-rpc-engine';\nimport { rpcErrors } from '@metamask/rpc-errors';\nimport type {\n  Json,\n  JsonRpcParams,\n  PendingJsonRpcResponse,\n} from '@metamask/utils';\n\nimport { createRpcWarningMiddleware } from './middleware/createRpcWarningMiddleware';\n\nexport type Maybe<Type> = Partial<Type> | null | undefined;\n\nexport type ConsoleLike = Pick<\n  Console,\n  'log' | 'warn' | 'error' | 'debug' | 'info' | 'trace'\n>;\n\n// Constants\n\n// https://github.com/thenativeweb/uuidv4/blob/bdcf3a3138bef4fb7c51f389a170666f9012c478/lib/uuidv4.ts#L5\nexport const UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\n// https://stackoverflow.com/a/20204811\nexport const FQDN_REGEX =\n  /(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)/u;\n\n// https://stackoverflow.com/a/9523559\nconst POSITIVE_INTEGER_REGEX = /^(\\d*[1-9]\\d*|0)$/u;\n\nexport const EMITTED_NOTIFICATIONS = Object.freeze([\n  'eth_subscription', // per eth-json-rpc-filters/subscriptionManager\n]);\n\n// Utility functions\n\n/**\n * Gets the default middleware for external providers, consisting of an ID\n * remapping middleware and an error middleware.\n *\n * @param logger - The logger to use in the error middleware.\n * @returns An array of @metamask/json-rpc-engine middleware functions.\n */\nexport const getDefaultExternalMiddleware = (logger: ConsoleLike = console) => [\n  createIdRemapMiddleware(),\n  createErrorMiddleware(logger),\n  createRpcWarningMiddleware(logger),\n];\n\n/**\n * A `json-rpc-engine` middleware that logs RPC errors and validates the request\n * method.\n *\n * @param log - The logging API to use.\n * @returns A @metamask/json-rpc-engine middleware function.\n */\nfunction createErrorMiddleware(\n  log: ConsoleLike,\n): JsonRpcMiddleware<JsonRpcParams, Json> {\n  return (request, response, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof request.method !== 'string' || !request.method) {\n      response.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: request,\n      });\n    }\n\n    next((done) => {\n      const { error } = response;\n      if (!error) {\n        return done();\n      }\n      log.warn(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (\n    resolve: (value?: any) => void,\n    reject: (error?: Error) => void,\n    unwrapResult = true,\n  ) =>\n  (error: Error, response: PendingJsonRpcResponse<Json>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else {\n      !unwrapResult || Array.isArray(response)\n        ? resolve(response)\n        : resolve(response.result);\n    }\n  };\n\n/**\n * Checks whether the given chain ID is valid, meaning if it is non-empty,\n * '0x'-prefixed string.\n *\n * @param chainId - The chain ID to validate.\n * @returns Whether the given chain ID is valid.\n */\nexport const isValidChainId = (chainId: unknown): chainId is string =>\n  Boolean(chainId) && typeof chainId === 'string' && chainId.startsWith('0x');\n\n/**\n * Checks whether the given network version is valid, meaning if it is non-empty\n * integer string or the value 'loading'.\n *\n * @param networkVersion - The network version to validate.\n * @returns Whether the given network version is valid.\n */\nexport const isValidNetworkVersion = (\n  networkVersion: unknown,\n): networkVersion is string | null =>\n  typeof networkVersion === 'string' &&\n  (POSITIVE_INTEGER_REGEX.test(networkVersion) || networkVersion === 'loading');\n\nexport const NOOP = () => undefined;\n"]}
\ No newline at end of file
